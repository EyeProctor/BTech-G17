[{"G:\\Engineering\\Final Year\\frontend\\src\\index.js":"1","G:\\Engineering\\Final Year\\frontend\\src\\App.js":"2","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\quizHeader.js":"3","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\option.js":"4","G:\\Engineering\\Final Year\\frontend\\src\\service\\questions.js":"5","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"6","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"7","G:\\Engineering\\Final Year\\frontend\\src\\reducer\\index.js":"8","G:\\Engineering\\Final Year\\frontend\\src\\reducer\\quiz\\quiz.js":"9","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\Timer.js":"10","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"11","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\Option.js":"12","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizHeader.js":"13","G:\\Engineering\\Final Year\\frontend\\src\\service\\userData.js":"14","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\Capture.js":"15","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"16","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js":"17","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js":"18","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"19","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js":"20","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js":"21","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\questions.js":"22","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"23","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js":"24","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js":"25","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"26","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"27","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js":"28","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js":"29","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js":"30","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\Creator.js":"31","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js":"32","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js":"33","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js":"34","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js":"35","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js":"36","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js":"37","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js":"38","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js":"39","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\action\\quiz\\quiz.js":"40","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js":"41","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js":"42","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js":"43","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js":"44","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js":"45","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js":"46","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js":"47","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js":"48","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js":"49","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js":"50","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js":"51","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js":"52","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js":"53","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js":"54","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js":"55","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js":"56","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js":"57","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js":"58","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js":"59","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js":"60","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js":"61","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js":"62","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\index.js":"63","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\App.js":"64","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\index.js":"65","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js":"66","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js":"67","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js":"68","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js":"69","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js":"70","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js":"71","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\HomePage.js":"72","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js":"73","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js":"74","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js":"75","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js":"76","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js":"77","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js":"78","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js":"79","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\OE\\Room.js":"80","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js":"81","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js":"82","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js":"83","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js":"84","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"85","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js":"86","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js":"87","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js":"88","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Login\\Login.js":"89","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js":"90","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js":"91","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\service\\userData.js":"92","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"93","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js":"94","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js":"95","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js":"96","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js":"97","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"98","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js":"99","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js":"100","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\Capture.js":"101","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"102","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js":"103","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js":"104"},{"size":475,"mtime":1612089209718,"results":"105","hashOfConfig":"106"},{"size":3638,"mtime":1612021132095,"results":"107","hashOfConfig":"106"},{"size":1956,"mtime":1611810838773,"results":"108","hashOfConfig":"106"},{"size":1211,"mtime":1611761625791,"results":"109","hashOfConfig":"106"},{"size":4455,"mtime":1611941571775,"results":"110","hashOfConfig":"106"},{"size":2040,"mtime":1612020855025,"results":"111","hashOfConfig":"106"},{"size":1106,"mtime":1611844207800,"results":"112","hashOfConfig":"106"},{"size":174,"mtime":1611740277392,"results":"113","hashOfConfig":"106"},{"size":211,"mtime":1611740282511,"results":"114","hashOfConfig":"106"},{"size":681,"mtime":1611942622552,"results":"115","hashOfConfig":"106"},{"size":1338,"mtime":1611939528433,"results":"116","hashOfConfig":"106"},{"size":795,"mtime":1611939745623,"results":"117","hashOfConfig":"106"},{"size":2127,"mtime":1611941396025,"results":"118","hashOfConfig":"106"},{"size":145,"mtime":1611810752589,"results":"119","hashOfConfig":"106"},{"size":1231,"mtime":1611941367770,"results":"120","hashOfConfig":"106"},{"size":1340,"mtime":1612090268536,"results":"121","hashOfConfig":"106"},{"size":1202,"mtime":1617340984567,"results":"122","hashOfConfig":"123"},{"size":758,"mtime":1617468241520,"results":"124","hashOfConfig":"123"},{"size":5052,"mtime":1617898875590,"results":"125","hashOfConfig":"123"},{"size":3695,"mtime":1617467651262,"results":"126","hashOfConfig":"123"},{"size":145,"mtime":1611810752589,"results":"127","hashOfConfig":"123"},{"size":4455,"mtime":1611941571775,"results":"128","hashOfConfig":"123"},{"size":1134,"mtime":1617340984566,"results":"129","hashOfConfig":"123"},{"size":1430,"mtime":1617340984569,"results":"130","hashOfConfig":"123"},{"size":4133,"mtime":1617901154764,"results":"131","hashOfConfig":"123"},{"size":1338,"mtime":1611939528433,"results":"132","hashOfConfig":"123"},{"size":2040,"mtime":1617340984566,"results":"133","hashOfConfig":"123"},{"size":1231,"mtime":1617901302274,"results":"134","hashOfConfig":"123"},{"size":795,"mtime":1611939745623,"results":"135","hashOfConfig":"123"},{"size":4463,"mtime":1617692249528,"results":"136","hashOfConfig":"123"},{"size":3902,"mtime":1612690251770,"results":"137","hashOfConfig":"123"},{"size":5356,"mtime":1617349819032,"results":"138","hashOfConfig":"123"},{"size":1843,"mtime":1613737660408,"results":"139","hashOfConfig":"123"},{"size":537,"mtime":1617340984556,"results":"140","hashOfConfig":"123"},{"size":564,"mtime":1617340984567,"results":"141","hashOfConfig":"123"},{"size":8761,"mtime":1617340984555,"results":"142","hashOfConfig":"123"},{"size":730,"mtime":1617340984567,"results":"143","hashOfConfig":"123"},{"size":2808,"mtime":1617340984569,"results":"144","hashOfConfig":"123"},{"size":5534,"mtime":1617428474703,"results":"145","hashOfConfig":"123"},{"size":398,"mtime":1614415027816,"results":"146","hashOfConfig":"123"},{"size":276,"mtime":1617340984559,"results":"147","hashOfConfig":"123"},{"size":2836,"mtime":1617340984557,"results":"148","hashOfConfig":"123"},{"size":3446,"mtime":1617340984559,"results":"149","hashOfConfig":"123"},{"size":2864,"mtime":1617340984557,"results":"150","hashOfConfig":"123"},{"size":1447,"mtime":1617340984560,"results":"151","hashOfConfig":"123"},{"size":7694,"mtime":1617340984562,"results":"152","hashOfConfig":"123"},{"size":5285,"mtime":1617340984562,"results":"153","hashOfConfig":"123"},{"size":6201,"mtime":1617340984561,"results":"154","hashOfConfig":"123"},{"size":5243,"mtime":1617340984561,"results":"155","hashOfConfig":"123"},{"size":318,"mtime":1617340984556,"results":"156","hashOfConfig":"123"},{"size":5252,"mtime":1617468874264,"results":"157","hashOfConfig":"123"},{"size":232,"mtime":1617340984568,"results":"158","hashOfConfig":"123"},{"size":2092,"mtime":1617340984556,"results":"159","hashOfConfig":"123"},{"size":5580,"mtime":1617340984557,"results":"160","hashOfConfig":"123"},{"size":1311,"mtime":1617902599872,"results":"161","hashOfConfig":"123"},{"size":2796,"mtime":1617340984560,"results":"162","hashOfConfig":"123"},{"size":2430,"mtime":1617340984560,"results":"163","hashOfConfig":"123"},{"size":3711,"mtime":1617468765166,"results":"164","hashOfConfig":"123"},{"size":1749,"mtime":1617340984565,"results":"165","hashOfConfig":"123"},{"size":253,"mtime":1617340984568,"results":"166","hashOfConfig":"123"},{"size":23081,"mtime":1617340984565,"results":"167","hashOfConfig":"123"},{"size":2150,"mtime":1617900826908,"results":"168","hashOfConfig":"123"},{"size":1160,"mtime":1617858004000,"results":"169","hashOfConfig":"170"},{"size":3619,"mtime":1617858004000,"results":"171","hashOfConfig":"170"},{"size":732,"mtime":1617858004000,"results":"172","hashOfConfig":"170"},{"size":2716,"mtime":1617858004000,"results":"173","hashOfConfig":"170"},{"size":705,"mtime":1617858004000,"results":"174","hashOfConfig":"170"},{"size":221,"mtime":1617858004000,"results":"175","hashOfConfig":"170"},{"size":546,"mtime":1617858004000,"results":"176","hashOfConfig":"170"},{"size":1380,"mtime":1617858004000,"results":"177","hashOfConfig":"170"},{"size":13067,"mtime":1618035240902,"results":"178","hashOfConfig":"170"},{"size":518,"mtime":1617858004000,"results":"179","hashOfConfig":"170"},{"size":7519,"mtime":1617858004000,"results":"180","hashOfConfig":"170"},{"size":261,"mtime":1617858004000,"results":"181","hashOfConfig":"170"},{"size":5169,"mtime":1617858004000,"results":"182","hashOfConfig":"170"},{"size":6053,"mtime":1617858004000,"results":"183","hashOfConfig":"170"},{"size":5123,"mtime":1617858004000,"results":"184","hashOfConfig":"170"},{"size":1415,"mtime":1617858004000,"results":"185","hashOfConfig":"170"},{"size":2720,"mtime":1617858004000,"results":"186","hashOfConfig":"170"},{"size":3323,"mtime":1617858004000,"results":"187","hashOfConfig":"170"},{"size":242,"mtime":1617858004000,"results":"188","hashOfConfig":"170"},{"size":2371,"mtime":1617858004000,"results":"189","hashOfConfig":"170"},{"size":5471,"mtime":1617858004000,"results":"190","hashOfConfig":"170"},{"size":2045,"mtime":1617858004000,"results":"191","hashOfConfig":"170"},{"size":5052,"mtime":1617858004000,"results":"192","hashOfConfig":"170"},{"size":1705,"mtime":1617858004000,"results":"193","hashOfConfig":"170"},{"size":2087,"mtime":1617858004000,"results":"194","hashOfConfig":"170"},{"size":4366,"mtime":1617858004000,"results":"195","hashOfConfig":"170"},{"size":5127,"mtime":1617858004000,"results":"196","hashOfConfig":"170"},{"size":5184,"mtime":1617858004000,"results":"197","hashOfConfig":"170"},{"size":5384,"mtime":1617858004000,"results":"198","hashOfConfig":"170"},{"size":138,"mtime":1617858004000,"results":"199","hashOfConfig":"170"},{"size":1104,"mtime":1617858004000,"results":"200","hashOfConfig":"170"},{"size":2773,"mtime":1617858004000,"results":"201","hashOfConfig":"170"},{"size":2803,"mtime":1617858004000,"results":"202","hashOfConfig":"170"},{"size":308,"mtime":1617858004000,"results":"203","hashOfConfig":"170"},{"size":4003,"mtime":1617858004000,"results":"204","hashOfConfig":"170"},{"size":1298,"mtime":1617858004000,"results":"205","hashOfConfig":"170"},{"size":1279,"mtime":1617858004000,"results":"206","hashOfConfig":"170"},{"size":3585,"mtime":1617858004000,"results":"207","hashOfConfig":"170"},{"size":1188,"mtime":1618040498556,"results":"208","hashOfConfig":"170"},{"size":1981,"mtime":1617858004000,"results":"209","hashOfConfig":"170"},{"size":772,"mtime":1617858004000,"results":"210","hashOfConfig":"170"},{"size":23079,"mtime":1617858004000,"results":"211","hashOfConfig":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},"y8p9p3",{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},"f9pvug",{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"249"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"249"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"249"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"249"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"249"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"249"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"249"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"249"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"249"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"249"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"249"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"249"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"249"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},"14caf43",{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"360"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"360"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"360"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"360"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"360"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"360"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"360"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"360"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"360"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"360"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"360"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"360"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"360"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"360"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"360"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"360"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"360"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"458"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},"G:\\Engineering\\Final Year\\frontend\\src\\index.js",["461"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'typeface-roboto';\nimport {createStore} from 'redux';\nimport allReducer from './reducer/index';\nimport {Provider} from 'react-redux';\nimport QuizLandingPage from './components/quiz/QuizLandingPage';\n\n\nconst store = createStore(allReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <QuizLandingPage/>\n  </Provider>,\n  document.getElementById('root')\n);\n",["462","463"],"G:\\Engineering\\Final Year\\frontend\\src\\App.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\quizHeader.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\option.js",["464","465","466"],"G:\\Engineering\\Final Year\\frontend\\src\\service\\questions.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\reducer\\quiz\\quiz.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\Timer.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\Option.js",[],["467","468"],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizHeader.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizLandingPage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js",[],["469","470"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js",["471","472"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\questions.js",[],["473","474"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js",["475"],"import { StaticRouter } from \"react-router\";\r\n\r\nvar initialState = {\r\n    quizID: null,\r\n    userID: null,\r\n    attempted: [],\r\n    flagged: [],\r\n    userChoices: null,\r\n    startedAt: null,\r\n    questions: null,\r\n\r\n}\r\n\r\nconst quizReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SAVE_USERCHOICES\":\r\n            return action.payload;\r\n        case \"SET_QUIZDATA\":\r\n            return {...state, questions: {...action.payload}}\r\n        case \"SET_STARTDATE\":\r\n            return {...state, startedAt: action.payload}\r\n        case \"QUIZ_RESET\":\r\n            return initialState;\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\n\r\nexport const saveUserChoices = () => async (dispatch, getState) => {\r\n    const {userID, attempted,flagged, userChoices, startedAt, quizID , questions} = getState().quiz;\r\n    const userData = {userID, quizID, attempted,flagged,userChoices,startedAt , questions};\r\n\r\n    await fetch(\"/quiz/saveUserChoices\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': \"application/json\",\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n    });\r\n\r\n\r\n}\r\n\r\nexport const fetchQuiz = ()=> async (dispatch, getState) => {\r\n    const quizQuestions = await fetch(\"/user/getQuiz\").then(data => data.json);\r\n    dispatch({type: \"SET_QUIZ\", payload: quizQuestions});\r\n}\r\n\r\nexport default quizReducer;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js",["476","477"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js",["478"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\Creator.js",["479","480"],"import React from \"react\"\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel} from '@material-ui/core';\r\n\r\nclass Quiz extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\tquiz:{\r\n\t\t\t\tquizId: 0,\r\n\t\t\t\tsubject: \"\",\r\n\t\t\t\tproctored: false,\r\n\t\t\t\tstartDate: \"01-01-21-12:00\",\r\n\t\t\t\tendDate: \"01-01-21-12:30\",\r\n\t\t\t\tduration: 600000\r\n\t\t\t},\r\n\t\t\tquestions:[{\r\n\t\t\t\t\t\tqNo: 0,\r\n\t\t\t\t\t\tqtype: 1,\r\n\t\t\t\t\t\tquestion: \"Question?\",\r\n\t\t\t\t\t\toptions: [{op: \"\",ans: false}]\r\n\t\t\t},]\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.addOption = this.addOption.bind(this);\r\n    }\t\r\n\r\n    addQuestion = (e) => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tquestions:[...prevState.questions,{qNo: 0,\r\n                qtype: 1,\r\n                question: \"Question\",\r\n                options: [{qs: \"\",ans: false}]}]\r\n\t\t}));\r\n\tconsole.log(this.state);\r\n\t}\r\n\r\n\taddOption = (e,idx) => {\r\n        console.log(idx);\r\n        let allQ = [...this.state.questions];\r\n        let temp = allQ[idx-1]\r\n        temp.options = [...temp.options, {qs: \"\",ans: false}]\r\n        // allQ[idx-1] = temp;\r\n        console.log(allQ);\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tquestions: allQ\r\n\t\t}));\r\n\tconsole.log(\"Options\",this.state.questions[idx-1]);\r\n\t}\r\n\t\r\n\thandleSubmit = (e) => { e.preventDefault() }\r\n\r\n    render() {\r\n\t\tlet {questions}= this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<form  onSubmit={this.handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\r\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TextField id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-start\"\r\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-end\"\r\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.questions.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet queId = `que-${idx++}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname={queId}\r\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\tid={queId}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={(e)=>{this.addOption(e,idx)}}>+ Add Option</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    {\r\n\t\t\t\t\t\t\tthis.state.questions[idx-1].options.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet optId = `opt-${++idx}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n                                        <FormControlLabel control={\r\n                                        <Checkbox color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                        \r\n                                        } label={\"Option:\" + idx} />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={this.addQuestion}>+ Add Question</Button>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" type=\"submit\">Submit</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Quiz;",["481","482"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js",["483","484"],"import QuizHeader from './QuizHeader';\r\nimport {Grid, Card, CardActions, Button } from '@material-ui/core';\r\nimport QuestionsPanel from './rightPanel/RightPanel.js';\r\nimport QuestionBody, {  } from \"./questions/QuestionBody\";\r\nimport Countdown from 'react-countdown';\r\n// import questionBank from '../../service/questions.js';\r\nimport userData from '../../service/userData.js';\r\nimport {  useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { saveUserChoices } from '../../reducer/quiz/quiz'\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Quiz(props) {\r\n\tconst quizDataFromStore = useSelector(state => state.quiz);\r\n\tconst userName = useSelector(state => state.auth)\r\n\tvar startDate = 0;\r\n\tconst history = useHistory();\r\n\tconsole.log(JSON.stringify(quizDataFromStore))\r\n\tif(quizDataFromStore.startedAt === null)\r\n\t\tstartDate = Date.now()\r\n\telse\r\n\t\tstartDate = quizDataFromStore.startedAt;\r\n\tuseEffect(() => {\r\n\t\t\t   document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\r\n\t\t\t   \r\n\t\t\t   //setStartDate( );\r\n\t}, []);\r\n\t\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\tconst fromStore = quizDataFromStore.userChoices;\r\n\tconst userID = props.match.params.userID;\r\n\tconst quizID = props.match.params.quizID;\r\n\tconst questionBank = quizDataFromStore.questions;\r\n\t// const [quizData, setQuizData] = useState([])\r\n\tvar [attempted, updateAttempted] = useState(quizDataFromStore.attempted);\r\n\t// const [startDate,setStartDate] = useState(Date.now());\r\n\tconst [flagged, updateFlagged] = useState(quizDataFromStore.flagged);\r\n\tconst [currentQ, updateCurrentQ] = useState(1);\r\n\tvar endDate = startDate + parseInt(questionBank.duration)*60000;\r\n\tconsole.log(\"Start Date\", startDate);\r\n\t\r\n\tconst handleAttempted = () => {\r\n\t\tattempted = [...new Set(attempted)];\r\n\t\tupdateAttempted(\r\n\t\t\tarr => [...arr, currentQ]\r\n\t\t\t\r\n\t\t);\r\n\t\tconsole.log('AttemptedArray',attempted);\r\n\t\t\r\n\t}\r\n\tconst handleFlagged = () => {\r\n\t\tif(!flagged.includes(currentQ))\r\n\t\t\tupdateFlagged(\r\n\t\t\t\tarr => [...arr, currentQ]\r\n\t\t\t)\r\n\t\telse{\r\n\t\t\tvar temp = [...flagged]\r\n\t\t\ttemp.splice(temp.indexOf(currentQ));\r\n\t\t\tupdateFlagged(\r\n\t\t\t\ttemp\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tconst handlePrev = () => {\r\n\t\tupdateCurrentQ(currentQ-1);\r\n\t}\r\n\tconst handleNext = () => {\r\n\t\tupdateCurrentQ(currentQ+1);\r\n\t}\r\n\r\n\tconst handleUserChoice = (val) => {\r\n\r\n\t\tupdateUserChoice({...userChoices, [currentQ]: val})\r\n\r\n\t}\r\n\r\n\tvar [userChoices, updateUserChoice] = useState(quizDataFromStore.userChoices);\r\n\tuseEffect(()=> {\r\n\t\tconst data = {\r\n\t\t\tuserID: userID,\r\n\t\t\tquizID: quizID,\r\n\t\t\tattempted: attempted,\r\n    \t\tflagged: flagged,\r\n    \t\tuserChoices: userChoices,\r\n    \t\tstartedAt: startDate,\r\n\t\t\tquestions: questionBank,\r\n\t\t}\r\n\r\n\t\t// Updates on Backend\r\n\t\tdispatch(saveUserChoices());\r\n\r\n\t\t// Updates on Redux Store\r\n\t\tdispatch({type: \"SAVE_USERCHOICES\", payload: data});\r\n\r\n\t}, [attempted, flagged, userChoices,dispatch]);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\tconst {firstName, lastName, middleName} = userName.studentDoc;\r\n\t\tconst quizName = quizDataFromStore.questions.subject;\r\n\t\tconst startedAt = startDate;\r\n\t\te.preventDefault();\r\n\t\tif (window.confirm('Confirm Submission'))\r\n\t\t{\r\n\t\t\tfetch('/quiz/submitQuiz',{\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({userID, qID: quizID, userChoices, questions: questionBank.questions, firstName, middleName, lastName, startedAt, quizName})\r\n\t\t\t }).then(data => data.json().then(newData => {\r\n\t\t\t\tconsole.log(JSON.stringify(newData));\r\n\t\t\t\t if(newData.msg){\r\n\t\t\t\t\t alert(\"Error\");\r\n\t\t\t\t }else{\r\n\t\t\t\t\t//dispatch({type: \"QUIZ_RESET\"})\r\n\t\t\t\t\thistory.replace('/home');\r\n\t\t\t\t\t \r\n\t\t\t\t }\r\n\t\t\t })).catch(err => console.log(err))\r\n\r\n\t\t}\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n      <Grid container justify={'center'} spacing={2}>\r\n        <Grid item xs={12} >\r\n        \t<QuizHeader prn={userData.prn} status=\"Valid\"/>\r\n        </Grid>\r\n\t\t<Grid item container spacing={2} xs={12}>\r\n\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t<QuestionBody onFlagged={handleFlagged} onAttempted={handleAttempted} currentQ={questionBank.questions[currentQ - 1]} no = {currentQ} flagged={flagged} userChoice={userChoices[currentQ.toString()]} updateUserChoice={handleUserChoice}/>\r\n\t\t\t\t<CardActions>\r\n\t\t\r\n\t\t\t{\r\n\t\t\t(currentQ !== 1) ?\r\n\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handlePrev}>\r\n\t\t\t\tPrev\r\n\t\t\t</Button>:<></>\r\n\t\t  }\r\n\t\t  {currentQ < questionBank.questions.length?<Button  variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handleNext}>\r\n          Next\r\n        </Button>:<></>}\r\n        \r\n      </CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t<QuestionsPanel updateNav={(val)=> updateCurrentQ(val) } qNo={questionBank.questions.length} attemptedQ={attempted} flagged={flagged} current={currentQ}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Button onClick={handleSubmit} variant=\"contained\" style={{background:'green',color: 'white', marginTop: 10}}>\r\n          Submit\r\n        </Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Countdown onComplete={handleSubmit} date={endDate} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n        </Grid>\r\n\t\t<Grid item xs={12} >\r\n        \t<h1> © Eye Procotor</h1>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js",[],["485","486"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js",["487","488"],"import {useState} from 'react';\r\nimport {Typography, FormControl, Select, MenuItem, InputLabel, Grid, CircularProgress, AppBar } from '@material-ui/core';\r\nimport Editor from \"@monaco-editor/react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst CodeUI = () => {\r\n\r\n    const [Code, setCode] = useState(\"print('Hi')\");\r\n    const [language, setLanguage] = useState(\"Java\");\r\n    const [Output, setOutput] = useState(\"Type and Click on Run\");\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    function fetchResult(sid) {\r\n        fetch(\"/code/fetchResult\",\r\n            {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    sid\r\n                })\r\n            }\r\n        ).then(\r\n            (res) => res.json().then(resData => {\r\n                if (resData.status === 'IN-QUEUE') {\r\n                    return fetchResult(sid);\r\n                }\r\n                \r\n                setOutput(resData.output);\r\n                setLoading(false);\r\n                return;\r\n            })\r\n        ).catch(err => console.log(err)).catch(err => { setLoading(false); setOutput(\"Server Error\"); console.log(err)});\r\n    }\r\n    function SubmitForm(e) {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        fetch(\"/code/compile\",\r\n            {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    lang: language,\r\n                    code: Code,\r\n                    input: \"\",\r\n                    save: false\r\n                })\r\n            }\r\n        ).then(\r\n            (res) => res.json().then(resData => fetchResult(resData.sid))\r\n        ).catch(err => console.log(err)).catch(err => console.log(err));\r\n\r\n\r\n\r\n    }\r\n    document.oncontextmenu = new Function(\"return false;\");\r\n    return (\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n            \r\n            <form  onSubmit={SubmitForm}>\r\n                <Grid style={{marginTop: '11vh'}} className=\"ch-container\" container >\r\n                    <Grid item xs={8}>\r\n                        <Editor\r\n                        value = {Code}\r\n                        onChange ={(e)=> {setCode(e)}}\r\n                        marginLeft='100px'\r\n                        height='80vh'\r\n                        theme='vs-dark'\r\n                        defaultLanguage=\"Java\"\r\n                        fontSize = '30px'\r\n                        options = {{\"fontSize\": \"19\"}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Grid  container item direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                            <Grid item xs={12} fullWidth>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"language\" >Language</InputLabel>\r\n                                    <Select value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\r\n                                        <MenuItem value={\"C\"}>C</MenuItem>\r\n                                        <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\r\n                                        <MenuItem value={\"Java\"}>Java</MenuItem>\r\n                                        <MenuItem value={\"Python3\"}>Python</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                 <Typography variant='subtitle1' color=\"secondary\"> Problem Statement </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='body1' color=\"primary\"> Write a Program to add 2 Numbers </Typography>\r\n                            </Grid>\r\n                            <Grid container item alignContents=\"center\" alignItems=\"center\" justify=\"center\" >\r\n                                <Grid item xs={12}>\r\n                                    {isLoading? <CircularProgress />:<Button type=\"submit\" color=\"primary\">Run</Button>}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button color=\"primary\">Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='subtitle1' color=\"secondary\"> Output </Typography>\r\n                            </Grid>\r\n                            <Grid item >\r\n                                <textarea onChange={(e) => setOutput(e.target.value)} value={Output}\r\n                                readOnly\r\n                                className = 'terminal-textArea'\r\n                                rows=\"24\"\r\n                                cols = \"50\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodeUI;\r\n\r\n// const render = \r\n// <Grid className=\"ch-container\" container >\r\n//     <Grid item xs={8}>\r\n//         <Editor\r\n//         value = {Code}\r\n//         onChange ={(e)=> {setCode(e)}}\r\n//         marginLeft='100px'\r\n//         height='100vh'\r\n//         theme='vs-dark'\r\n//         defaultLanguage=\"Java\"\r\n//         width='75vw'\r\n//         fontSize = '30px'\r\n//         options = {{\"fontSize\": \"19\"}}\r\n//         />\r\n//     </Grid>\r\n//     <Grid item xs={4}>\r\n//         <Grid  container direction=\"column\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n//             <Grid item xs={8}>\r\n//                 <FormControl required fullWidth variant=\"outlined\">\r\n//                     <InputLabel id=\"language\" >Language</InputLabel>\r\n//                     <Select value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\r\n//                         <MenuItem value={\"C\"}>C</MenuItem>\r\n//                         <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\r\n//                         <MenuItem value={\"Java\"}>Java</MenuItem>\r\n//                         <MenuItem value={\"Python3\"}>Python</MenuItem>\r\n//                     </Select>\r\n//                 </FormControl>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box borderBottom={1}>\r\n//                      <Typography> Problem Statement </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box borderBottom={1}>\r\n//                     <Typography> Write a Program to add 2 Numbers </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box borderBottom={1}>\r\n//                     <Typography> Write a Program to add 2 Numbers </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//             <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n//                 <Grid item xs={6}>\r\n//                     <Button variant=\"contained\" color=\"primary\">Run</Button>\r\n//                 </Grid>\r\n//                 <Grid item xs={6}>\r\n//                     <Button variant=\"contained\" color=\"primary\">Submit</Button>\r\n//                 </Grid>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box mt={4} border={1}>\r\n//                     <Typography> Output </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//         </Grid>\r\n//     </Grid>\r\n// </Grid>","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js",["489"],"const initialState = {\r\n    courseID: \"\",\r\n    subject: null,\r\n    proctored: false,\r\n    startDate: null,\r\n    endDate: null,\r\n    duration: null,\r\n    questions: []\r\n}\r\n\r\nvar questionState = {\r\n    qNo: null,\r\n    qType: 1,\r\n    question: \"\",\r\n    options: []\r\n}\r\n\r\nconst optionsState = {\r\n    qs: \"\",\r\n    ans: false\r\n};\r\n\r\n\r\n\r\nvar QIndex, OIndex, QArray;\r\n\r\nconst quizCreatorReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_QUIZCOURSE\":\r\n            return {...state, courseID: action.payload}\r\n\r\n        case \"ADD_QUESTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            const newQuestionState = {...questionState, qNo: QArray.length+1 }\r\n            QArray.push(newQuestionState)\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_QUESTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            QArray[QIndex].question = action.payload.question;\r\n            return {...state, questions: QArray}\r\n\r\n        case \"ADD_OPTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            var op = QArray[action.payload.QIndex]\r\n            op.options = [...op.options, {qs: \"\",ans: false}]\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_OPTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            QArray[QIndex].options[OIndex] = {...optionsState, qs: action.payload.option}\r\n            return {...state, questions: QArray}\r\n        \r\n        case 'SET_ANSWER':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            var op = QArray[QIndex]\r\n            \r\n            if(op.options[OIndex].ans){\r\n                \r\n                QArray[QIndex].options[OIndex].ans = false;\r\n                return {...state, questions: QArray}\r\n            }\r\n            op.options.forEach(O => {\r\n                if(O.ans){\r\n                    O.ans = false;\r\n                }\r\n            });\r\n            \r\n            QArray[QIndex].options[OIndex] = {...op.options[OIndex], ans: true}\r\n            return {...state, questions: QArray}\r\n        \r\n        case \"SET_QUIZ_SUBJECT\":\r\n            return {...state, subject: action.payload}\r\n        case \"SET_STARTDATE\":\r\n            return {...state, startDate: action.payload}\r\n        case \"SET_ENDDATE\":\r\n            return {...state, endDate: action.payload}\r\n        case \"SET_DURATION\":\r\n            return {...state, duration: action.payload}\r\n        case \"RESET_QUIZCREATION\":\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default quizCreatorReducer;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js",["490"],"import {useState, useEffect} from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel, CircularProgress} from '@material-ui/core';\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst QuizCreator = (props) => {\r\n    const dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n    const state = useSelector(state => state.quizCreator);\r\n\tconst courseID = props.match.params.courseID;\r\n\tconst [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\tconsole.log(courseID);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\t\tsetBad(false);\r\n\t\tsetSuccess(false);\r\n\t\tsetLoading(true);\r\n\t\tsetErrMessage(\"\");\r\n\t\t// Do Simple form Check\r\n\r\n\t\tdispatch({type: \"SET_QUIZCOURSE\", payload: courseID})\r\n\r\n\t\tconsole.log(JSON.stringify(state));\r\n\r\n\t\tfetch(\"/quiz/addQuiz\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(state)\r\n\t\t}).then(data => data.json().then( (newData)=>\r\n\t\t\t{\r\n\t\t\t\tconsole.log(JSON.stringify(newData));\r\n\t\t\t\tif(newData.msg){\r\n\t\t\t\t\tsetBad(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetErrMessage(newData.msg);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tsetSuccess(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)).catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const addQuestion = () => {\r\n        dispatch({type: \"ADD_QUESTION_TEMPLATE\"});\r\n    }\r\n    const addOption = (QIndex) => {\r\n        dispatch({type: \"ADD_OPTION_TEMPLATE\", payload:{QIndex}});\r\n    }\r\n    return(\r\n        <form  onSubmit={handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\r\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_QUIZ_SUBJECT\", payload: e.target.value})}} id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-start\"\r\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\r\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_STARTDATE\", payload: new Date(e.target.value)})}}\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-end\"\r\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\r\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_ENDDATE\", payload: new Date(e.target.value)})}}\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_DURATION\", payload: e.target.value})}} type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstate.questions.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet queId = `que-${idx+1}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname={queId}\r\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\tid={queId}\r\n\t\t\t\t\t\t\t\t\t\tvalue= {val.question}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> dispatch({type: \"ADD_QUESTION\", payload: {QIndex: idx, question: e.target.value}})}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={()=>addOption(idx)}>+ Add Option</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    {\r\n\t\t\t\t\t\t\tstate.questions[idx].options.map((val, oIdx)=> {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={oIdx}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n                                        <FormControlLabel control={\r\n                                        <Checkbox checked={val.ans} onChange={()=> dispatch({type: \"SET_ANSWER\", payload: {QIndex: idx, OIndex: oIdx}})} color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                        \r\n                                        } label={\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField fullWidth label={`Option No.${oIdx+1}`} value={val.qs} onChange={(e)=> {dispatch({type:\"ADD_OPTION\", payload:{QIndex: idx, OIndex: oIdx, option: e.target.value}})}}/>\r\n\t\t\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={addQuestion}>+ Add Question</Button>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t{isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Quiz</Button>}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Quiz Created!</Alert>:<></>}\r\n                    </Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n    );\r\n}\r\n\r\nexport default QuizCreator;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\action\\quiz\\quiz.js",[],["491","492"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js",["493","494"],"import { AppBar, Grid } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport CustomBox from '../../Helper/CustomBox';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {useEffect,useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\r\n\r\nconst StudentHome = () => {\r\n    const studentData = useSelector(state => state.auth.studentDoc);\r\n    const branch = studentData.branch;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const sem = studentData.sem;\r\n    const Class = studentData.Class;\r\n    const[courseList, setCourseList] = useState([])\r\n    useEffect(()=>{\r\n        fetch('/course/student/getAll',{\r\n           method: \"POST\",\r\n           mode: 'cors',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify({branch,Class,sem})\r\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n                <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\r\n                                <ProfileMenu />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    {\r\n                        courseList.map((val,idx) => {\r\n                            return(\r\n                                <Grid item xs={4} key={idx}>\r\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\r\n                                        history.push(`/course/${val._id}`)\r\n                                    }}/>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                    \r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js",["495","496"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js",["497","498","499","500"],"import { AppBar, Toolbar, Card, Grid } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport CustomBox from '../../Helper/CustomBox';\r\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\r\n\r\n\r\nconst TeacherHome = () => {\r\n    const user = useSelector(state => state.auth.user)\r\n    const[courseList, setCourseList] = useState([])\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        const teacherID = user.teacherData;\r\n        console.log(JSON.stringify(user))\r\n        fetch('/teacher/getAllCourses',{\r\n           method: \"POST\",\r\n           mode: 'cors',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify({teacherID})\r\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n                <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\r\n                                <ProfileMenu />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    {\r\n                        courseList.map((val,idx) => {\r\n                            return(\r\n                                <Grid item xs={4} key={idx}>\r\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\r\n                                        dispatch({type: \"SET_CURRENT_COURSE\", payload: val});\r\n                                        history.push(`/course/teacher/${val._id}`);\r\n                                    }}/>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js",["501","502"],"import {TextField, FormControl, Select, MenuItem, InputLabel, Grid, Button, Box, CircularProgress} from '@material-ui/core'\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useState} from 'react';\r\n\r\nconst CreateTeacher = () => {\r\n    const [firstName, setFName] = useState(\"\");\r\n    const [lastName, setLName] = useState(\"\");\r\n    const [middleName, setMName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"None\");\r\n    const [Class, setClass] = useState(\"None\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        setLoading(true);\r\n        setErrMessage(false);\r\n        setSuccess(false);\r\n        e.preventDefault();\r\n\r\n        const userName = lastName.toLowerCase() + \".\" + middleName.toLowerCase() + \".\" + firstName.toLowerCase();\r\n        const password = \"changeme\";\r\n        const userType = \"Teacher\";\r\n        const teacherData = {\r\n            firstName,middleName,lastName,branch\r\n        }\r\n        const studentData = {}\r\n        const reqBody = {\r\n            userName, email, password , userType, studentData , teacherData\r\n        }\r\n\r\n        console.log(JSON.stringify(reqBody));\r\n\r\n        fetch(\r\n            \"/user/register\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqBody)\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => {\r\n                console.log(JSON.stringify(data));\r\n                setLoading(false);\r\n                if(data.msg){\r\n                    setBad(true);\r\n                    setErrMessage(data.msg);\r\n                }else\r\n                    setSuccess(true);\r\n            })\r\n        ).catch((err) => {\r\n            console.error(err); \r\n            setLoading(false);\r\n            setBad(true);\r\n            setErrMessage(JSON.stringify(err));\r\n        }\r\n            );\r\n\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container style={ {flexGrow: 1, marginTop: 25, padding: 10} } spacing={2}>\r\n                    <Grid item xs={4} >\r\n                        <TextField value={firstName} onChange={(e)=> setFName(e.target.value)} fullWidth required label=\"First Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={middleName} onChange={(e)=>setMName(e.target.value)} fullWidth required label=\"Middle Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={lastName} onChange={(e)=> setLName(e.target.value) } fullWidth required label=\"Last Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                \r\n                    <Grid item xs={4}>\r\n                        <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} fullWidth required label=\"Email\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={phone} onChange={(e)=>{setPhone(e.target.value)}} type=\"number\" fullWidth required label=\"Phone Number\" variant=\"outlined\"/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl required fullWidth variant=\"outlined\">\r\n                            <InputLabel id=\"branchDD\" >Branch</InputLabel>\r\n                            <Select value={branch} onChange={(e)=>{setBranch(e.target.value)}} labelId=\"branchDD\" label=\"Branch\">\r\n                                <MenuItem value={\"biotech\"}>BioTech</MenuItem>\r\n                                <MenuItem value={\"civil\"}>Civil</MenuItem>\r\n                                <MenuItem value={\"cse\"}>CSE</MenuItem>\r\n                                <MenuItem value={\"electronics\"}>Electronics</MenuItem>\r\n                                <MenuItem value={\"mech\"}>Mechanical</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                        <Box mt={5}>\r\n                        {isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Teacher</Button>}\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Teacher Created!</Alert>:<></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTeacher;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js",["503","504","505"],"import {TextField,Grid,Button,Checkbox,FormControlLabel,Paper, CircularProgress} from '@material-ui/core';\r\nimport {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\n\r\n\r\nconst style = {\r\n                maxWidth:'40%',\r\n                minWidth:'400px',\r\n                padding:'30px' ,\r\n                margin:'auto',\r\n                marginTop:\"5vh\",\r\n                // backgroundColor:'#4c5f7a',\r\n                backgroundColor:'white',\r\n                color:'black',\r\n                textAlign:'center',\r\n                borderRadius:'10pt',\r\n                fontWeight:'bold'\r\n            };\r\n\r\nconst Login = () =>  {\r\n    \r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch({ type:\"RESET_STORE\"});\r\n    },[])\r\n\r\n    function onSuccess(resData){setLoading(false);\r\n        if(resData.msg){\r\n            setBad(true);\r\n            setErrMessage(resData.msg);\r\n        }\r\n        else{\r\n            dispatch({type: \"AUTHENTICATE\", payload: resData});\r\n            history.replace(\"/home\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setBad(false);\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        // alert(userName + \" \" + password);\r\n        fetch(\r\n            \"/user/login\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(\r\n                    {\r\n                        userName,\r\n                        password,\r\n                    }\r\n                )\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => onSuccess(data))\r\n        ).catch((err) => {console.error(err)});\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} style={{height:'100vh',width:'100vw', background: 'linear-gradient(135deg, #364755 50%, #182835 50%)',position:'absolute',top:'0',left:'0'}}>\r\n            <img src=\"logo_trans.png\" style={{maxWidth:'100px'}} />\r\n            <div style={{display:'inline-block',position:'absolute',top:'30px',textAlign:'center',color:'#fec14e'}}>\r\n                <h1>Proctor</h1>\r\n            </div>\r\n            <div style={style}>\r\n                <Grid container spacing={8} alignItems=\"center\">\r\n                    <Grid item md={2} sm={true} xs={true}>\r\n                        <h1>Login</h1>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    {/* <Grid item md={3}>Username</Grid> */}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TextField onChange={(e)=> {setUserName(e.target.value)}} value={userName} id=\"usrn\" margin=\"normal\" variant=\"outlined\" label=\"Username\" type=\"text\" fullWidth required />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    {/* <Grid item md={3}>Password</Grid> */}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TextField onChange={(e)=> {setPassword(e.target.value)}} value={password} id=\"pswd\" margin=\"normal\" variant=\"outlined\" label=\"Password\" type=\"password\" fullWidth required />\r\n     </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" justify=\"space-between\" style={{marginTop:'5vh'}}>\r\n                    <Grid item>\r\n                        <FormControlLabel control={\r\n                            <Checkbox\r\n                                color=\"secondary\"\r\n                            />\r\n                        } label=\"Remember me\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\r\n                    <Grid item md={4} fullWidth>\r\n                        {isLoading ?\r\n                        <CircularProgress />\r\n                        :<Button  type=\"submit\" variant=\"contained\" style={{ textTransform: \"none\", backgroundColor:\"#fec14e\",color:\"white\",minWidth:\"100px\",fontWeight:'bolder',fontSize:'medium',borderRadius:'5pt'}}>Login</Button>}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\r\n                    <Grid item md={4} fullWidth>\r\n                        {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js",["506","507"],"import {AppBar, Box, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router';\r\nconst CourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const history = useHistory();\r\n    const oes = course.oes;\r\n    return(\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {course.courseName}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            <Grid className='cor' style={{margin:'0'}} container>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:\r\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`quiz/${quizObj.quizID}`)}}/>)}\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:<></>}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseHome;\r\n\r\n\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js",["508","509"],"import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst TeacherCourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const oes = course.oes;\r\n    const history = useHistory();\r\n    console.log(course);\r\n    return(\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {course.courseName}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            \r\n            <Grid className='cor' style={{margin:'0'}} container>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\r\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\r\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n                    <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\r\n                </Grid>\r\n                <Box border={1}/>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12} style={{width:'50%'}}><Alert severity=\"error\">No Active Practicals</Alert></Grid>:<></>}\r\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n                   <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\r\n                 </Grid>\r\n                <Box border={1} />\r\n                \r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeacherCourseHome;\r\n\r\n\r\n// import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\r\n// import { useSelector } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom'\r\n// // import CustomBox from '../../Helper/CustomBox'\r\n// import {Alert} from '@material-ui/lab'\r\n// import CustomBox from '../../Helper/CustomBox';\r\n// const TeacherCourseHome = (props) => {\r\n//     const courseID = props.match.params.courseName;\r\n//     const courses =  useSelector(state => state.course);\r\n//     const course = courses.filter((e)=> e._id === courseID)[0]\r\n//     const quizes = course.quizes;\r\n//     const poes = course.poes;\r\n//     const oes = course.oes;\r\n//     const history = useHistory();\r\n//     console.log(course);\r\n//     return(\r\n//         <div>\r\n//             <AppBar>\r\n//                 <Toolbar stype={{backgroundColor: \"black\" }}>\r\n//                 {course.courseName}\r\n//                 </Toolbar>\r\n//             </AppBar>\r\n//             <Grid style={{marginTop: 60}} container spacing={2}>\r\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\r\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n//                         Quizes\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\r\n//                 quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\r\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n//                     <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\r\n//                 </Grid>\r\n//                 <Box border={1}/>\r\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\r\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n//                         Practicals\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Practicals</Alert></Grid>:<></>}\r\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n//                     <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\r\n//                 </Grid>\r\n//                 <Box border={1} />\r\n                \r\n//             </Grid>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default TeacherCourseHome;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js",["510"],"import { AppBar, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomBox from '../Helper/CustomBox';\r\nimport QuizDownload from './QuizDownload';\r\nconst TeacherQuizLanding = (props) => {\r\n    const quizId = props.match.params.quizID;\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [subject, setSubject] = useState(null);\r\n    useEffect( () => {\r\n        fetch(`/quiz/getAll/${quizId}`)\r\n         .then(data =>  data.json().then(res => {setQuizData(res);\r\n         setSubject(res[0].quizName);\r\n         }))\r\n         .catch(err => console.log(err));\r\n     },[]);\r\n    const quizObj =  useSelector(state => state.currentCourse.quizes);\r\n    console.log(quizObj);\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {quizObj[0].subject}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    <Grid item xs={2}>\r\n                        <QuizDownload quizData={quizData} subject={subject} />\r\n                    </Grid>\r\n                    <Grid>\r\n                        <CustomBox innerText=\"Delete Quiz\" />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherQuizLanding;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js",["511"],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\index.js",[],["512","513"],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\App.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\index.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js",["514"],"const initialState = {\n    courseID: \"\",\n    subject: null,\n    proctored: false,\n    startDate: null,\n    endDate: null,\n    duration: null,\n    questions: []\n}\n\nvar questionState = {\n    qNo: null,\n    qType: 1,\n    question: \"\",\n    options: []\n}\n\nconst optionsState = {\n    qs: \"\",\n    ans: false\n};\n\n\n\nvar QIndex, OIndex, QArray;\n\nconst quizCreatorReducer = (state= initialState, action) => {\n\n    switch (action.type) {\n        case \"SET_QUIZCOURSE\":\n            return {...state, courseID: action.payload}\n\n        case \"ADD_QUESTION_TEMPLATE\":\n            QArray = [...state.questions];\n            const newQuestionState = {...questionState, qNo: QArray.length+1 }\n            QArray.push(newQuestionState)\n            return {...state, questions: QArray}\n\n        case 'ADD_QUESTION':\n            QArray = [...state.questions];\n            QIndex = action.payload.QIndex;\n            QArray[QIndex].question = action.payload.question;\n            return {...state, questions: QArray}\n\n        case \"ADD_OPTION_TEMPLATE\":\n            QArray = [...state.questions];\n            var op = QArray[action.payload.QIndex]\n            op.options = [...op.options, {qs: \"\",ans: false}]\n            return {...state, questions: QArray}\n\n        case 'ADD_OPTION':\n            QArray = [...state.questions];\n            QIndex = action.payload.QIndex;\n            OIndex = action.payload.OIndex;\n            QArray[QIndex].options[OIndex] = {...optionsState, qs: action.payload.option}\n            return {...state, questions: QArray}\n        \n        case 'SET_ANSWER':\n            QArray = [...state.questions];\n            QIndex = action.payload.QIndex;\n            OIndex = action.payload.OIndex;\n            var op = QArray[QIndex]\n            \n            if(op.options[OIndex].ans){\n                \n                QArray[QIndex].options[OIndex].ans = false;\n                return {...state, questions: QArray}\n            }\n            op.options.forEach(O => {\n                if(O.ans){\n                    O.ans = false;\n                }\n            });\n            \n            QArray[QIndex].options[OIndex] = {...op.options[OIndex], ans: true}\n            return {...state, questions: QArray}\n        \n        case \"SET_QUIZ_SUBJECT\":\n            return {...state, subject: action.payload}\n        case \"SET_STARTDATE\":\n            return {...state, startDate: action.payload}\n        case \"SET_ENDDATE\":\n            return {...state, endDate: action.payload}\n        case \"SET_DURATION\":\n            return {...state, duration: action.payload}\n        case \"RESET_QUIZCREATION\":\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nexport default quizCreatorReducer;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js",["515"],"import { StaticRouter } from \"react-router\";\n\nvar initialState = {\n    quizID: null,\n    userID: null,\n    attempted: [],\n    flagged: [],\n    userChoices: null,\n    startedAt: null,\n    questions: null,\n\n}\n\nconst quizReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SAVE_USERCHOICES\":\n            return action.payload;\n        case \"SET_QUIZDATA\":\n            return {...state, questions: {...action.payload}}\n        case \"SET_STARTDATE\":\n            return {...state, startedAt: action.payload}\n        case \"QUIZ_RESET\":\n            return initialState;\n        default:\n           return state;\n    }\n}\n\n\nexport const saveUserChoices = () => async (dispatch, getState) => {\n    const {userID, attempted,flagged, userChoices, startedAt, quizID , questions} = getState().quiz;\n    const userData = {userID, quizID, attempted,flagged,userChoices,startedAt , questions};\n\n    await fetch(\"/quiz/saveUserChoices\", {\n        method: \"POST\",\n        headers: {\n            'Accept': \"application/json\",\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n    });\n\n\n}\n\nexport const fetchQuiz = ()=> async (dispatch, getState) => {\n    const quizQuestions = await fetch(\"/user/getQuiz\").then(data => data.json);\n    dispatch({type: \"SET_QUIZ\", payload: quizQuestions});\n}\n\nexport default quizReducer;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js",["516","517"],"import {useState} from 'react';\nimport {Typography, FormControl, Select, MenuItem, InputLabel, Grid, CircularProgress, AppBar } from '@material-ui/core';\nimport Editor from \"@monaco-editor/react\";\nimport Button from '@material-ui/core/Button';\n\n\nconst CodeUI = () => {\n\n    const [Code, setCode] = useState(\"print('Hi')\");\n    const [language, setLanguage] = useState(\"Java\");\n    const [Output, setOutput] = useState(\"Type and Click on Run\");\n    const [isLoading, setLoading] = useState(false);\n\n    function fetchResult(sid) {\n        fetch(\"/code/fetchResult\",\n            {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sid\n                })\n            }\n        ).then(\n            (res) => res.json().then(resData => {\n                if (resData.status === 'IN-QUEUE') {\n                    return fetchResult(sid);\n                }\n                \n                setOutput(resData.output);\n                setLoading(false);\n                return;\n            })\n        ).catch(err => console.log(err)).catch(err => { setLoading(false); setOutput(\"Server Error\"); console.log(err)});\n    }\n    function SubmitForm(e) {\n        setLoading(true);\n        e.preventDefault();\n        fetch(\"/code/compile\",\n            {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    lang: language,\n                    code: Code,\n                    input: \"\",\n                    save: false\n                })\n            }\n        ).then(\n            (res) => res.json().then(resData => fetchResult(resData.sid))\n        ).catch(err => console.log(err)).catch(err => console.log(err));\n\n\n\n    }\n    document.oncontextmenu = new Function(\"return false;\");\n\n    return (\n        <div className='ch-container'>\n            <div style={{padding:'5px'}}>\n                    <AppBar position='static' className='Appbar' style={{width:'98vw'}}>\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\n                                <img src='logo_trans.png' className='logo'></img>\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </AppBar>\n                </div>\n        \n            <form  onSubmit={SubmitForm}>\n                <Grid style={{marginTop: '15vh'}} className=\"ch-container\" container >\n                    <Grid item xs={8}>\n                        <Editor\n                        value = {Code}\n                        onChange ={(e)=> {setCode(e)}}\n                        marginLeft='100px'\n                        height='80vh'\n                        theme='vs-dark'\n                        defaultLanguage=\"Java\"\n                        fontSize = '30px'\n                        options = {{\"fontSize\": \"19\"}}\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Grid  container item direction=\"column\" justify=\"center\" alignItems=\"center\">\n                            <Grid item xs={12} fullWidth>\n                                <FormControl variant=\"outlined\" fullWidth>\n                                    <InputLabel id=\"language\" style={{color:'white'}}>Language</InputLabel>\n                                    <Select style={{color:'white',backgroundColor:'#4c5f7a',height:40}} value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\n                                        <MenuItem value={\"C\"}>C</MenuItem>\n                                        <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\n                                        <MenuItem value={\"Java\"}>Java</MenuItem>\n                                        <MenuItem value={\"Python3\"}>Python</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                 <Typography variant='subtitle1' style={{fontWeight:'bold'}} color=\"primary\"> Problem Statement </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant='body1' style={{color:'white'}}> Write a Program to add 2 Numbers </Typography>\n                            </Grid>\n                            <Grid container item alignContents=\"center\" alignItems=\"center\" justify=\"center\" >\n                                <Grid item xs={12}>\n                                    {isLoading? <CircularProgress />:<Button type=\"submit\" color=\"primary\">Run</Button>}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button color=\"primary\">Submit</Button>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant='subtitle1' color=\"secondary\"> Output </Typography>\n                            </Grid>\n                            <Grid item >\n                                <textarea onChange={(e) => setOutput(e.target.value)} value={Output}\n                                readOnly\n                                className = 'terminal-textArea'\n                                rows=\"24\"\n                                cols = \"40\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default CodeUI;\n\n// Till 10 April 2021 Latest\n\n//     return (\n//         <div className='ch-container'>\n//             <div style={{padding:'5px'}}>\n//                     <AppBar position='static' className='Appbar'>\n//                         <Grid container style={{justifyContent:'space-between',position:'relative'}}>\n//                             <Grid item style={{display:'flex',justifyContent:'space-between'}}>\n//                                 <img src='logo_trans.png' className='logo'></img>\n//                                 <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\n//                                     <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\n//                                 </div>\n//                             </Grid>\n//                         </Grid>\n//                     </AppBar>\n//                 </div>\n            \n//             <form  onSubmit={SubmitForm}>\n//                 <Grid style={{marginTop: '11vh'}} className=\"ch-container\" container >\n//                     <Grid item xs={8}>\n//                         <Editor\n//                         value = {Code}\n//                         onChange ={(e)=> {setCode(e)}}\n//                         marginLeft='100px'\n//                         height='80vh'\n//                         theme='vs-dark'\n//                         defaultLanguage=\"Java\"\n//                         fontSize = '30px'\n//                         options = {{\"fontSize\": \"19\"}}\n//                         />\n//                     </Grid>\n//                     <Grid item xs={4}>\n//                         <Grid  container item direction=\"column\" justify=\"center\" alignItems=\"center\">\n//                             <Grid item xs={12} fullWidth>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id=\"language\" >Language</InputLabel>\n//                                     <Select value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\n//                                         <MenuItem value={\"C\"}>C</MenuItem>\n//                                         <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\n//                                         <MenuItem value={\"Java\"}>Java</MenuItem>\n//                                         <MenuItem value={\"Python3\"}>Python</MenuItem>\n//                                     </Select>\n//                                 </FormControl>\n//                             </Grid>\n//                             <Grid item xs={12}>\n//                                  <Typography variant='subtitle1' color=\"secondary\"> Problem Statement </Typography>\n//                             </Grid>\n//                             <Grid item xs={12}>\n//                                 <Typography variant='body1' color=\"primary\"> Write a Program to add 2 Numbers </Typography>\n//                             </Grid>\n//                             <Grid container item alignContents=\"center\" alignItems=\"center\" justify=\"center\" >\n//                                 <Grid item xs={12}>\n//                                     {isLoading? <CircularProgress />:<Button type=\"submit\" color=\"primary\">Run</Button>}\n//                                 </Grid>\n//                                 <Grid item xs={12}>\n//                                     <Button color=\"primary\">Submit</Button>\n//                                 </Grid>\n//                             </Grid>\n//                             <Grid item xs={12}>\n//                                 <Typography variant='subtitle1' color=\"secondary\"> Output </Typography>\n//                             </Grid>\n//                             <Grid item >\n//                                 <textarea onChange={(e) => setOutput(e.target.value)} value={Output}\n//                                 readOnly\n//                                 className = 'terminal-textArea'\n//                                 rows=\"24\"\n//                                 cols = \"50\"\n//                                 />\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CodeUI;\n\n// const render = \n// <Grid className=\"ch-container\" container >\n//     <Grid item xs={8}>\n//         <Editor\n//         value = {Code}\n//         onChange ={(e)=> {setCode(e)}}\n//         marginLeft='100px'\n//         height='100vh'\n//         theme='vs-dark'\n//         defaultLanguage=\"Java\"\n//         width='75vw'\n//         fontSize = '30px'\n//         options = {{\"fontSize\": \"19\"}}\n//         />\n//     </Grid>\n//     <Grid item xs={4}>\n//         <Grid  container direction=\"column\" justify=\"space-evenly\" alignItems=\"flex-start\">\n//             <Grid item xs={8}>\n//                 <FormControl required fullWidth variant=\"outlined\">\n//                     <InputLabel id=\"language\" >Language</InputLabel>\n//                     <Select value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\n//                         <MenuItem value={\"C\"}>C</MenuItem>\n//                         <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\n//                         <MenuItem value={\"Java\"}>Java</MenuItem>\n//                         <MenuItem value={\"Python3\"}>Python</MenuItem>\n//                     </Select>\n//                 </FormControl>\n//             </Grid>\n//             <Grid item xs={12}>\n//                 <Box borderBottom={1}>\n//                      <Typography> Problem Statement </Typography>\n//                 </Box>\n//             </Grid>\n//             <Grid item xs={12}>\n//                 <Box borderBottom={1}>\n//                     <Typography> Write a Program to add 2 Numbers </Typography>\n//                 </Box>\n//             </Grid>\n//             <Grid item xs={12}>\n//                 <Box borderBottom={1}>\n//                     <Typography> Write a Program to add 2 Numbers </Typography>\n//                 </Box>\n//             </Grid>\n//             <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\n//                 <Grid item xs={6}>\n//                     <Button variant=\"contained\" color=\"primary\">Run</Button>\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                     <Button variant=\"contained\" color=\"primary\">Submit</Button>\n//                 </Grid>\n//             </Grid>\n//             <Grid item xs={12}>\n//                 <Box mt={4} border={1}>\n//                     <Typography> Output </Typography>\n//                 </Box>\n//             </Grid>\n//         </Grid>\n//     </Grid>\n// </Grid>","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\HomePage.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js",["518","519"],"import {TextField, FormControl, Select, MenuItem, InputLabel, Grid, Button, Box, CircularProgress} from '@material-ui/core'\nimport {Alert, AlertTitle} from '@material-ui/lab'\nimport {useState} from 'react';\n\nconst CreateTeacher = () => {\n    const [firstName, setFName] = useState(\"\");\n    const [lastName, setLName] = useState(\"\");\n    const [middleName, setMName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [branch, setBranch] = useState(\"None\");\n    const [Class, setClass] = useState(\"None\");\n    const [isLoading, setLoading] = useState(false);\n    const [isBad,setBad] = useState(false);\n    const [isSuccess, setSuccess] = useState(false);\n    const [errMessage, setErrMessage] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        setLoading(true);\n        setErrMessage(false);\n        setSuccess(false);\n        e.preventDefault();\n\n        const userName = lastName.toLowerCase() + \".\" + middleName.toLowerCase() + \".\" + firstName.toLowerCase();\n        const password = \"changeme\";\n        const userType = \"Teacher\";\n        const teacherData = {\n            firstName,middleName,lastName,branch\n        }\n        const studentData = {}\n        const reqBody = {\n            userName, email, password , userType, studentData , teacherData\n        }\n\n        console.log(JSON.stringify(reqBody));\n\n        fetch(\n            \"/user/register\",\n            {\n                method: \"POST\",\n                mode: 'cors',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(reqBody)\n            }\n        ).then(\n            response => response.json().then( data => {\n                console.log(JSON.stringify(data));\n                setLoading(false);\n                if(data.msg){\n                    setBad(true);\n                    setErrMessage(data.msg);\n                }else\n                    setSuccess(true);\n            })\n        ).catch((err) => {\n            console.error(err); \n            setLoading(false);\n            setBad(true);\n            setErrMessage(JSON.stringify(err));\n        }\n            );\n\n        \n        \n    }\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <Grid container style={ {flexGrow: 1, marginTop: 25, padding: 10} } spacing={2}>\n                    <Grid item xs={4} >\n                        <TextField value={firstName} onChange={(e)=> setFName(e.target.value)} fullWidth required label=\"First Name\" variant=\"outlined\"/>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField value={middleName} onChange={(e)=>setMName(e.target.value)} fullWidth required label=\"Middle Name\" variant=\"outlined\"/>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField value={lastName} onChange={(e)=> setLName(e.target.value) } fullWidth required label=\"Last Name\" variant=\"outlined\"/>\n                    </Grid>\n                \n                    <Grid item xs={4}>\n                        <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} fullWidth required label=\"Email\" variant=\"outlined\"/>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField value={phone} onChange={(e)=>{setPhone(e.target.value)}} type=\"number\" fullWidth required label=\"Phone Number\" variant=\"outlined\"/>\n                    </Grid>\n\n                    <Grid item xs={4}>\n                        <FormControl required fullWidth variant=\"outlined\">\n                            <InputLabel id=\"branchDD\" >Branch</InputLabel>\n                            <Select value={branch} onChange={(e)=>{setBranch(e.target.value)}} labelId=\"branchDD\" label=\"Branch\">\n                                <MenuItem value={\"biotech\"}>BioTech</MenuItem>\n                                <MenuItem value={\"civil\"}>Civil</MenuItem>\n                                <MenuItem value={\"cse\"}>CSE</MenuItem>\n                                <MenuItem value={\"electronics\"}>Electronics</MenuItem>\n                                <MenuItem value={\"mech\"}>Mechanical</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid container item justify=\"center\" alignItems=\"center\">\n                        <Box mt={5}>\n                        {isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Teacher</Button>}\n                        </Box>\n                    </Grid>\n                    <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\n                    </Grid>\n                    <Grid container item justify=\"center\" alignItems=\"center\">\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Teacher Created!</Alert>:<></>}\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateTeacher;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\OE\\Room.js",["520","521"],"import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledVideo playsInline autoPlay ref={ref} />\n    );\n}\n\n\nconst videoConstraints = {\n    height: window.innerHeight / 2,\n    width: window.innerWidth / 2\n};\n\nconst Room = (props) => {\n    const [peers, setPeers] = useState([]);\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const roomID = props.match.params.roomID;\n\n    useEffect(() => {\n        socketRef.current = io.connect(\"/\");\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers(users => [...users, peer]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    return (\n        <Container>\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\n            {peers.map((peer, index) => {\n                return (\n                    <Video key={index} peer={peer} />\n                );\n            })}\n        </Container>\n    );\n};\n\nexport default Room;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js",["522","523"],"import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\nimport { useSelector } from 'react-redux';\nimport CustomBox from '../../Helper/CustomBox'\nimport {Alert} from '@material-ui/lab'\nimport { useHistory } from 'react-router';\n\nconst TeacherCourseHome = (props) => {\n    const courseID = props.match.params.courseName;\n    const courses =  useSelector(state => state.course);\n    const course = courses.filter((e)=> e._id === courseID)[0]\n    const quizes = course.quizes;\n    const poes = course.poes;\n    const oes = course.oes;\n    const history = useHistory();\n    console.log(course);\n    return(\n        <div className='ch-container'>\n            <div style={{padding:'5px'}}>\n                <AppBar position='static' className='Appbar'>\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\n                            {course.courseName}\n                        </Grid>\n                    </Grid>\n                </AppBar>\n            </div>\n            \n            <Grid className='cor' style={{margin:'0'}} container>\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\n                    <Box p={2} boxShadow={5} borderBottom={1}>\n                        Quizes\n                    </Box>\n                </Grid>\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\n                    <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\n                </Grid>\n                <Box border={1}/>\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\n                    <Box p={2} boxShadow={5} borderBottom={1}>\n                        Practicals\n                    </Box>\n                </Grid>\n                {(poes.length === 0)?<Grid  item xs={12} style={{width:'50%'}}><Alert severity=\"error\">No Active Practicals</Alert></Grid>:<></>}\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\n                   <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\n                 </Grid>\n                <Box border={1} />\n                \n            </Grid>\n        </div>\n    );\n}\n\nexport default TeacherCourseHome;\n\n\n// import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\n// import { useSelector } from 'react-redux';\n// import { useHistory } from 'react-router-dom'\n// // import CustomBox from '../../Helper/CustomBox'\n// import {Alert} from '@material-ui/lab'\n// import CustomBox from '../../Helper/CustomBox';\n// const TeacherCourseHome = (props) => {\n//     const courseID = props.match.params.courseName;\n//     const courses =  useSelector(state => state.course);\n//     const course = courses.filter((e)=> e._id === courseID)[0]\n//     const quizes = course.quizes;\n//     const poes = course.poes;\n//     const oes = course.oes;\n//     const history = useHistory();\n//     console.log(course);\n//     return(\n//         <div>\n//             <AppBar>\n//                 <Toolbar stype={{backgroundColor: \"black\" }}>\n//                 {course.courseName}\n//                 </Toolbar>\n//             </AppBar>\n//             <Grid style={{marginTop: 60}} container spacing={2}>\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\n//                         Quizes\n//                     </Box>\n//                 </Grid>\n//                 {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\n//                 quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\n//                     <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\n//                 </Grid>\n//                 <Box border={1}/>\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\n//                         Practicals\n//                     </Box>\n//                 </Grid>\n//                 {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Practicals</Alert></Grid>:<></>}\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\n//                     <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\n//                 </Grid>\n//                 <Box border={1} />\n                \n//             </Grid>\n//         </div>\n//     );\n// }\n\n// export default TeacherCourseHome;\n","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js",["524","525"],"import {AppBar, Box, Grid, Toolbar} from '@material-ui/core'\nimport { useSelector } from 'react-redux';\nimport CustomBox from '../../Helper/CustomBox'\nimport {Alert} from '@material-ui/lab'\nimport { useHistory } from 'react-router';\nconst CourseHome = (props) => {\n    const courseID = props.match.params.courseName;\n    const courses =  useSelector(state => state.course);\n    const course = courses.filter((e)=> e._id === courseID)[0]\n    const quizes = course.quizes;\n    const poes = course.poes;\n    const history = useHistory();\n    const oes = course.oes;\n    return(\n        <div className='ch-container'>\n            <div style={{padding:'5px'}}>\n                <AppBar position='static' className='Appbar'>\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\n                            {course.courseName}\n                        </Grid>\n                    </Grid>\n                </AppBar>\n            </div>\n            <Grid className='cor' style={{margin:'0'}} container>\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\n                    <Box p={2} boxShadow={5} borderBottom={1}>\n                        Quizes\n                    </Box>\n                </Grid>\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`quiz/${quizObj.quizID}`)}}/>)}\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\n                    <Box p={2} boxShadow={5} borderBottom={1}>\n                        Practicals\n                    </Box>\n                </Grid>\n                {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:<></>}\n\n            </Grid>\n        </div>\n    );\n}\n\nexport default CourseHome;\n\n\n","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js",["526","527"],"import { Box, Button, Grid, Typography, AppBar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nconst QuizLandingPage = (props) => {\r\n    const quizID = props.match.params.quizID;\r\n    //console.log(quizID)\r\n    const [quizData,setQuizData] = useState({})\r\n    const [isAvailable, setAvailable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const quizState = useSelector(state => state.quiz);\r\n    const fromStore = quizState.userChoices;\r\n    const userID = useSelector(state => state.auth.user.id);\r\n    const [status, setStatus] = useState(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(\r\n        () => {\r\n            fetch(`/quiz/getQuiz/${quizID}`).then(\r\n                data => data.json().then(newData => {\r\n                    //console.log(JSON.stringify(newData));\r\n                    setQuizData(newData);\r\n                    const endDate = new Date(newData.endDate).getTime();\r\n                    const startDate = new Date(newData.startDate).getTime();\r\n                    console.log();\r\n                    if(startDate > Date.now() || endDate < Date.now())\r\n                    {\r\n                        setAvailable(false);\r\n                    }else{\r\n                        setAvailable(true);\r\n                    }\r\n                })\r\n            );\r\n            \r\n            fetch('/quiz/quizStatusCheck',{\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({qID: quizID, userID})\r\n             }).then(data => data.json().then(newData => {\r\n                 setStatus(newData.status);\r\n             })).catch(err => console.log(err))\r\n        }, []\r\n        );\r\n    const takeQuiz = () => {\r\n        // Save Current Quiz Data to Store\r\n        dispatch({type:\"SET_QUIZDATA\", payload: quizData});\r\n\r\n        // Check if UserData StartTime Exists\r\n        // If store does not have any saved Instances of userChoices\r\n        if(!fromStore){\r\n\r\n            //Check from Database\r\n            console.log(\"database Check\")\r\n            fetch(`/quiz/userChoices/${userID}/${quizID}`).then(data=>{\r\n                data.json().then(newData => {\r\n                    // No Saved Instance on Database\r\n                    // New Attempt starts\r\n                    if(newData.msg){\r\n\r\n                        const newUserChoices = {\r\n                                userID: userID,\r\n                                quizID: quizID,\r\n\t\t\t                    attempted: [],\r\n    \t\t                    flagged: [],\r\n                                userChoices: {},\r\n                                startedAt: null,\r\n                                questions: quizData,\r\n                        }\r\n                        dispatch({type: \"SAVE_USERCHOICES\", payload: newUserChoices})\r\n                        history.push(`${quizID}/${userID}`);\r\n\r\n\r\n                    }\r\n                    // Saved Instance on Database\r\n                    else{\r\n                        \r\n                        console.log(JSON.stringify(newData));\r\n                        const questions = newData.questions[0];\r\n                        newData = {...newData, questions: questions};\r\n                        history.push(`${quizID}/${userID}`);\r\n                        // Set Start Date from Database\r\n                        dispatch({type: \"SAVE_USERCHOICES\", payload: newData})\r\n\r\n                    }\r\n                })\r\n            });\r\n        }else{\r\n            console.log(\"From Store\");\r\n            console.log(JSON.stringify(quizState));\r\n            history.push(`${quizID}/${userID}`);\r\n        }\r\n    }\r\n    return(\r\n        <div className='ch-container'>\r\n        <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            Proctored Quiz\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n        </div>\r\n    <Grid className='cor' style={{margin:'0'}} container >\r\n            <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                <Box p={2} boxShadow={5} borderBottom={1}>\r\n                    {quizData.subject}\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                {\r\n                  status || !isAvailable ?<Alert severity='warning'> Quiz Not Available </Alert>\r\n                  :<Button variant='contained' color='primary' onClick={takeQuiz}>Take Quiz</Button>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n  </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default QuizLandingPage;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js",["528"],"import { AppBar, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport CustomBox from '../Helper/CustomBox';\nimport QuizDownload from './QuizDownload';\nconst TeacherQuizLanding = (props) => {\n    const quizId = props.match.params.quizID;\n    const [quizData, setQuizData] = useState([]);\n    const [subject, setSubject] = useState(null);\n    useEffect( () => {\n        fetch(`/quiz/getAll/${quizId}`)\n         .then(data =>  data.json().then(res => {setQuizData(res);\n         setSubject(res[0].quizName);\n         }))\n         .catch(err => console.log(err));\n     },[]);\n    const quizObj =  useSelector(state => state.currentCourse.quizes);\n    console.log(quizObj);\n    return(\n        <>\n            <div className='ch-container'>\n            <div style={{padding:'5px'}}>\n                <AppBar position='static' className='Appbar'>\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\n                            {quizObj[0].subject}\n                        </Grid>\n                    </Grid>\n                </AppBar>\n            </div>\n                <Grid style={{marginTop: '10vh'}} container>\n                    <Grid item xs={2}>\n                        <QuizDownload quizData={quizData} subject={subject} />\n                    </Grid>\n                    <Grid>\n                        <CustomBox innerText=\"Delete Quiz\" />\n                    </Grid>\n                    \n                </Grid>\n            </div>\n        </>\n    );\n}\n\nexport default TeacherQuizLanding;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js",["529"],"import { CircularProgress, Grid } from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst MalpracticeGallary = (props) => {\n    const quizID =  props.match.params.quizID;\n    const userID =  props.match.params.userID;\n    const [images, setImages] = useState([])\n    const [isLoading, setLoading] = useState(true);\n    const [err,setErr] = useState(false);\n    const history = useHistory();\n    useEffect(()=>{\n        // Query Data base for Images\n        fetch(`/quiz/malpracticeLog/${userID}/${quizID}`).then(\n            data => {\n                data.json().then(resData =>{\n                    setLoading(false);\n                    if(data.msg){\n                        setErr(true);\n                    }else{\n                        setImages(resData);\n                        console.log(JSON.stringify(resData))\n                    }\n                })\n            }\n        ).catch(err => {\n            setLoading(false);\n            setErr(true);\n            console.error(err);\n        })\n    },[]);\n    if(isLoading)\n        return(\n            <div className=\"center\">\n                <CircularProgress />\n            </div>\n        );\n    else if(err)\n            return(\n                <Alert onClose={()=>{history.go(-1)}} severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    Unauthorized Access or Server Error\n                </Alert>\n            );\n    else\n    return(\n        <Grid container>\n            {\n                images.length === 0? <Alert severity=\"info\" ><AlertTitle>Info</AlertTitle>No Images Present</Alert>:\n                images.map((img) => {\n                    const imgBuffer = Buffer.from(img.image.data);\n                    return(\n                        <Grid item xs={4}>\n                            <img src={imgBuffer} alt=\"mal\"/>\n                        </Grid>\n                    )\n                })\n            }\n        </Grid>\n    );\n}\n\nexport default MalpracticeGallary;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js",["530"],"import {useHistory } from \"react-router-dom\";\nimport {useEffect, useRef, useState} from 'react';\nimport {Button, CardContent, Card, Typography, Grid} from '@material-ui/core';\nimport Webcam from \"react-webcam\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useSelector } from \"react-redux\";\n\nconst TempLanding = (props) => {    \n    const quizData = useSelector(state => state.quiz.questions)\n    const webCamRef = useRef(null);\n    const videoConstraints = {facingMode: 'user'};\n    const [camActive, setCamActive] = useState(false);\n    const history = useHistory();\n    const quizPage = `/quiz/${props.match.params.quizID}/${props.match.params.userID}`;\n\n    useEffect(()=>{\n        navigator.mediaDevices.getUserMedia({video: true}).then(\n            (stream) => {\n                setCamActive(true);\n                stream.oninactive = () => {history.go(0)}\n                stream.onremovetrack = () => {history.go(0)}\n            }\n        ).catch((err)=> console.log(err));\n    },[]);\n    return(\n        \n\n        <>\n        <Grid container spacing={2}>\n\n                <Grid item xs={6} style={{marginTop:100}}>\n                    <Card style={{marginLeft:150,marginRight:100,background:'#1e88e5'}}>\n                        <CardContent style={{marginTop:15,color:'white'}}>\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:800}}>\n                            Subject :\n                        </Typography>\n\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:500,marginLeft:10}}>\n                            {quizData.subject}\n                        </Typography>\n                        <br/>\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:800}}>\n                            Time :\n                        </Typography>\n\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:500,marginLeft:10}}>\n                            {quizData.duration} Minutes\n                        </Typography>\n                        </CardContent>\n                        </Card>\n                </Grid>\n\n                <Grid item xs={6}>\n                        <Webcam  style={{width:550,marginTop:20}}\n                        audio={false}\n                        ref={webCamRef}\n                        videoConstraints={videoConstraints}\n                        />\n                        <br/>\n                        {\n                    camActive?<Button variant='contained' color='primary' onClick={()=> {\n                        history.replace(quizPage);\n                    }} style={{background:'#03A9F4',color:'white',marginTop:10}}>Take Quiz</Button>\n                    :<Alert severity=\"error\"> Please Allow Camera Access</Alert>\n                }\n                        \n                        {/* Capture Button can be triggered in Attempt quiz Button\n                        <button onClick={capture}>Capture photo</button> */}\n                \n                </Grid>\n                <hr/>\n                <Grid item xs={12} style={{background:'#274056',paddingBottom:'25%'}}>\n                    <br/>\n\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:600,marginLeft:200,color:'white'}}>\n                            Instructions :\n                        </Typography>\n                        <Typography style={{fontWeight:300,marginLeft:215,color:'white'}}>\n                            <ul>\n                            <li>Select an answer for every question. Unanswered questions will be scored as incorrect.</li>\n                            <li>Timing - You will need to complete each of your attempts in one sitting, as you are allotted {quizData.duration} minutes to complete each attempt.</li>\n                            <li>Answers - You may review your answer-choices and compare them to the correct answers after your final attempt.</li>\n                            <li>To start, click the \"Take the Quiz\" button. When finished, click the \"Submit Quiz\" button.</li>\n                            <li>Click on the Submit button at the bottom of the page to have your answers graded.</li>\n                            </ul>\n                        </Typography>\n\n                </Grid>\n\n            </Grid>\n        </>\n\n    );\n}\n\n\n\nexport default TempLanding;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Login\\Login.js",["531","532","533"],"import {TextField,Grid,Button,Checkbox,FormControlLabel,Paper, CircularProgress} from '@material-ui/core';\nimport {useEffect, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {Alert, AlertTitle} from '@material-ui/lab'\n\n\nconst style = {\n                maxWidth:'40%',\n                minWidth:'400px',\n                padding:'30px' ,\n                margin:'auto',\n                marginTop:\"5vh\",\n                // backgroundColor:'#4c5f7a',\n                backgroundColor:'white',\n                color:'black',\n                textAlign:'center',\n                borderRadius:'10pt',\n                fontWeight:'bold'\n            };\n\nconst Login = () =>  {\n    \n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLoading, setLoading] = useState(false);\n    const [isBad,setBad] = useState(false);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch({ type:\"RESET_STORE\"});\n    },[])\n\n    function onSuccess(resData){setLoading(false);\n        if(resData.msg){\n            setBad(true);\n            setErrMessage(resData.msg);\n        }\n        else{\n            dispatch({type: \"AUTHENTICATE\", payload: resData});\n            history.replace(\"/home\");\n        }\n    }\n\n    const handleSubmit = (e) => {\n        setBad(false);\n        setLoading(true);\n        e.preventDefault();\n        // alert(userName + \" \" + password);\n        fetch(\n            \"/user/login\",\n            {\n                method: \"POST\",\n                mode: 'cors',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(\n                    {\n                        userName,\n                        password,\n                    }\n                )\n            }\n        ).then(\n            response => response.json().then( data => onSuccess(data))\n        ).catch((err) => {console.error(err)});\n    }\n\n    return(\n        <form onSubmit={handleSubmit} style={{height:'100vh',width:'100vw', background: 'linear-gradient(135deg, #364755 50%, #182835 50%)',position:'absolute',top:'0',left:'0'}}>\n            <img src=\"logo_trans.png\" style={{maxWidth:'100px'}} />\n            <div style={{display:'inline-block',position:'absolute',top:'30px',textAlign:'center',color:'#fec14e'}}>\n                <h1>Proctor</h1>\n            </div>\n            <div style={style}>\n                <Grid container spacing={8} alignItems=\"center\">\n                    <Grid item md={2} sm={true} xs={true}>\n                        <h1>Login</h1>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={8} alignItems=\"flex-end\">\n                    {/* <Grid item md={3}>Username</Grid> */}\n                    <Grid item md={12} sm={12} xs={12}>\n                        <TextField onChange={(e)=> {setUserName(e.target.value)}} value={userName} id=\"usrn\" margin=\"normal\" variant=\"outlined\" label=\"Username\" type=\"text\" fullWidth required />\n\n                    </Grid>\n                </Grid>\n                <Grid container spacing={8} alignItems=\"flex-end\">\n                    {/* <Grid item md={3}>Password</Grid> */}\n                    <Grid item md={12} sm={12} xs={12}>\n                        <TextField onChange={(e)=> {setPassword(e.target.value)}} value={password} id=\"pswd\" margin=\"normal\" variant=\"outlined\" label=\"Password\" type=\"password\" fullWidth required />\n     </Grid>\n                </Grid>\n                <Grid container alignItems=\"center\" justify=\"space-between\" style={{marginTop:'5vh'}}>\n                    <Grid item>\n                        <FormControlLabel control={\n                            <Checkbox\n                                color=\"secondary\"\n                            />\n                        } label=\"Remember me\" />\n                    </Grid>\n                    <Grid item>\n                        <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\n                    <Grid item md={4} fullWidth>\n                        {isLoading ?\n                        <CircularProgress />\n                        :<Button  type=\"submit\" variant=\"contained\" style={{ textTransform: \"none\", backgroundColor:\"#fec14e\",color:\"white\",minWidth:\"100px\",fontWeight:'bolder',fontSize:'medium',borderRadius:'5pt'}}>Login</Button>}\n                        \n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\n                    <Grid item md={4} fullWidth>\n                        {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\n                    </Grid>\n                </Grid>\n                \n            </div>\n        </form>\n    );\n}\n\nexport default Login;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js",["534","535"],"import QuizHeader from './QuizHeader';\nimport {Grid, Card, CardActions, Button } from '@material-ui/core';\nimport QuestionsPanel from './rightPanel/RightPanel.js';\nimport QuestionBody, {  } from \"./questions/QuestionBody\";\nimport Countdown from 'react-countdown';\n// import questionBank from '../../service/questions.js';\nimport userData from '../../service/userData.js';\nimport {  useState, useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { saveUserChoices } from '../../reducer/quiz/quiz'\nimport { useHistory } from 'react-router';\n\nfunction Quiz(props) {\n\tconst quizDataFromStore = useSelector(state => state.quiz);\n\tconst userName = useSelector(state => state.auth)\n\tvar startDate = 0;\n\tconst history = useHistory();\n\tconsole.log(JSON.stringify(quizDataFromStore))\n\tif(quizDataFromStore.startedAt === null)\n\t\tstartDate = Date.now()\n\telse\n\t\tstartDate = quizDataFromStore.startedAt;\n\tuseEffect(() => {\n\t\t\t   document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\n\t\t\t   \n\t\t\t   //setStartDate( );\n\t}, []);\n\t\n\tconst dispatch = useDispatch();\n\t\n\tconst fromStore = quizDataFromStore.userChoices;\n\tconst userID = props.match.params.userID;\n\tconst quizID = props.match.params.quizID;\n\tconst questionBank = quizDataFromStore.questions;\n\t// const [quizData, setQuizData] = useState([])\n\tvar [attempted, updateAttempted] = useState(quizDataFromStore.attempted);\n\t// const [startDate,setStartDate] = useState(Date.now());\n\tconst [flagged, updateFlagged] = useState(quizDataFromStore.flagged);\n\tconst [currentQ, updateCurrentQ] = useState(1);\n\tvar endDate = startDate + parseInt(questionBank.duration)*60000;\n\tconsole.log(\"Start Date\", startDate);\n\t\n\tconst handleAttempted = () => {\n\t\tattempted = [...new Set(attempted)];\n\t\tupdateAttempted(\n\t\t\tarr => [...arr, currentQ]\n\t\t\t\n\t\t);\n\t\tconsole.log('AttemptedArray',attempted);\n\t\t\n\t}\n\tconst handleFlagged = () => {\n\t\tif(!flagged.includes(currentQ))\n\t\t\tupdateFlagged(\n\t\t\t\tarr => [...arr, currentQ]\n\t\t\t)\n\t\telse{\n\t\t\tvar temp = [...flagged]\n\t\t\ttemp.splice(temp.indexOf(currentQ));\n\t\t\tupdateFlagged(\n\t\t\t\ttemp\n\t\t\t)\n\t\t}\n\t}\n\tconst handlePrev = () => {\n\t\tupdateCurrentQ(currentQ-1);\n\t}\n\tconst handleNext = () => {\n\t\tupdateCurrentQ(currentQ+1);\n\t}\n\n\tconst handleUserChoice = (val) => {\n\n\t\tupdateUserChoice({...userChoices, [currentQ]: val})\n\n\t}\n\n\tvar [userChoices, updateUserChoice] = useState(quizDataFromStore.userChoices);\n\tuseEffect(()=> {\n\t\tconst data = {\n\t\t\tuserID: userID,\n\t\t\tquizID: quizID,\n\t\t\tattempted: attempted,\n    \t\tflagged: flagged,\n    \t\tuserChoices: userChoices,\n    \t\tstartedAt: startDate,\n\t\t\tquestions: questionBank,\n\t\t}\n\n\t\t// Updates on Backend\n\t\tdispatch(saveUserChoices());\n\n\t\t// Updates on Redux Store\n\t\tdispatch({type: \"SAVE_USERCHOICES\", payload: data});\n\n\t}, [attempted, flagged, userChoices,dispatch]);\n\n\tconst handleSubmit = (e) => {\n\t\tconst {firstName, lastName, middleName} = userName.studentDoc;\n\t\tconst quizName = quizDataFromStore.questions.subject;\n\t\tconst startedAt = startDate;\n\t\te.preventDefault();\n\t\tif (window.confirm('Confirm Submission'))\n\t\t{\n\t\t\tfetch('/quiz/submitQuiz',{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tmode: 'cors',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({userID, qID: quizID, userChoices, questions: questionBank.questions, firstName, middleName, lastName, startedAt, quizName})\n\t\t\t }).then(data => data.json().then(newData => {\n\t\t\t\tconsole.log(JSON.stringify(newData));\n\t\t\t\t if(newData.msg){\n\t\t\t\t\t alert(\"Error\");\n\t\t\t\t }else{\n\t\t\t\t\t//dispatch({type: \"QUIZ_RESET\"})\n\t\t\t\t\thistory.replace('/home');\n\t\t\t\t\t \n\t\t\t\t }\n\t\t\t })).catch(err => console.log(err))\n\n\t\t}\n\t}\n\n  return (\n    <div>\n      <Grid container justify={'center'} spacing={2}>\n        <Grid item xs={12} >\n        \t<QuizHeader prn={userData.prn} status=\"Valid\"/>\n        </Grid>\n\t\t<Grid item container spacing={2} xs={12}>\n\t\t\t<Grid item xs={8}>\n\t\t\t\t<Card>\n\t\t\t\t<QuestionBody onFlagged={handleFlagged} onAttempted={handleAttempted} currentQ={questionBank.questions[currentQ - 1]} no = {currentQ} flagged={flagged} userChoice={userChoices[currentQ.toString()]} updateUserChoice={handleUserChoice}/>\n\t\t\t\t<CardActions>\n\t\t\n\t\t\t{\n\t\t\t(currentQ !== 1) ?\n\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handlePrev}>\n\t\t\t\tPrev\n\t\t\t</Button>:<></>\n\t\t  }\n\t\t  {currentQ < questionBank.questions.length?<Button  variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handleNext}>\n          Next\n        </Button>:<></>}\n        \n      </CardActions>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<Grid item xs={12} container>\n\t\t\t\t\t<QuestionsPanel updateNav={(val)=> updateCurrentQ(val) } qNo={questionBank.questions.length} attemptedQ={attempted} flagged={flagged} current={currentQ}/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t<Button onClick={handleSubmit} variant=\"contained\" style={{background:'green',color: 'white', marginTop: 10}}>\n          Submit\n        </Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={8}>\n\t\t\t\t<Countdown onComplete={handleSubmit} date={endDate} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n        </Grid>\n\t\t<Grid item xs={12} >\n        \t<h1> © Eye Procotor</h1>\n        </Grid>\n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default Quiz;\n","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js",["536"],"import {useState, useEffect} from \"react\"\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TextField,Grid,Button,Checkbox,FormControlLabel, CircularProgress} from '@material-ui/core';\nimport {Alert, AlertTitle} from '@material-ui/lab'\nimport {useHistory} from 'react-router-dom'\n\nconst QuizCreator = (props) => {\n    const dispatch = useDispatch();\n\tconst history = useHistory();\n    const state = useSelector(state => state.quizCreator);\n\tconst courseID = props.match.params.courseID;\n\tconst [isLoading, setLoading] = useState(false);\n    const [isBad,setBad] = useState(false);\n    const [isSuccess, setSuccess] = useState(false);\n    const [errMessage, setErrMessage] = useState(\"\");\n\tconsole.log(courseID);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\t\tsetBad(false);\n\t\tsetSuccess(false);\n\t\tsetLoading(true);\n\t\tsetErrMessage(\"\");\n\t\t// Do Simple form Check\n\n\t\tdispatch({type: \"SET_QUIZCOURSE\", payload: courseID})\n\n\t\tconsole.log(JSON.stringify(state));\n\n\t\tfetch(\"/quiz/addQuiz\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(state)\n\t\t}).then(data => data.json().then( (newData)=>\n\t\t\t{\n\t\t\t\tconsole.log(JSON.stringify(newData));\n\t\t\t\tif(newData.msg){\n\t\t\t\t\tsetBad(true);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetErrMessage(newData.msg);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetSuccess(true);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t)).catch(err => console.log(err))\n\n    }\n\n    const addQuestion = () => {\n        dispatch({type: \"ADD_QUESTION_TEMPLATE\"});\n    }\n    const addOption = (QIndex) => {\n        dispatch({type: \"ADD_OPTION_TEMPLATE\", payload:{QIndex}});\n    }\n    return(\n        <form  onSubmit={handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_QUIZ_SUBJECT\", payload: e.target.value})}} id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField fullWidth\n\t\t\t\t\t\t\tid=\"datetime-start\"\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\n\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_STARTDATE\", payload: new Date(e.target.value)})}}\n\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true,}}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField fullWidth\n\t\t\t\t\t\t\tid=\"datetime-end\"\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\n\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_ENDDATE\", payload: new Date(e.target.value)})}}\n\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true,}}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_DURATION\", payload: e.target.value})}} type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.questions.map((val, idx)=> {\n\t\t\t\t\t\t\t\tlet queId = `que-${idx+1}`\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t\t\t<div key={idx}>\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname={queId}\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\n\t\t\t\t\t\t\t\t\t\tid={queId}\n\t\t\t\t\t\t\t\t\t\tvalue= {val.question}\n\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> dispatch({type: \"ADD_QUESTION\", payload: {QIndex: idx, question: e.target.value}})}\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={()=>addOption(idx)}>+ Add Option</Button>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</div>\n                                    {\n\t\t\t\t\t\t\tstate.questions[idx].options.map((val, oIdx)=> {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={oIdx}>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\n                                        <FormControlLabel control={\n                                        <Checkbox checked={val.ans} onChange={()=> dispatch({type: \"SET_ANSWER\", payload: {QIndex: idx, OIndex: oIdx}})} color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\n                                        \n                                        } label={\n\t\t\t\t\t\t\t\t\t\t\t<TextField fullWidth label={`Option No.${oIdx+1}`} value={val.qs} onChange={(e)=> {dispatch({type:\"ADD_OPTION\", payload:{QIndex: idx, OIndex: oIdx, option: e.target.value}})}}/>\n\t\t\t\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={addQuestion}>+ Add Question</Button>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Quiz</Button>}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\n                    </Grid>\n                    <Grid container item justify=\"center\" alignItems=\"center\">\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Quiz Created!</Alert>:<></>}\n                    </Grid>\n\t\t\t\t</Grid>\n\t\t\t</form>\n    );\n}\n\nexport default QuizCreator;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\service\\userData.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js",["537","538"],"import { AppBar, Grid } from \"@material-ui/core\";\nimport React from 'react';\nimport CustomBox from '../../Helper/CustomBox';\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport {useEffect,useState} from 'react';\nimport {useHistory} from 'react-router-dom'\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\n\nconst StudentHome = () => {\n    const studentData = useSelector(state => state.auth.studentDoc);\n    const branch = studentData.branch;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const sem = studentData.sem;\n    const Class = studentData.Class;\n    const[courseList, setCourseList] = useState([])\n    useEffect(()=>{\n        fetch('/course/student/getAll',{\n           method: \"POST\",\n           mode: 'cors',\n           headers: { 'Content-Type': 'application/json' },\n           body: JSON.stringify({branch,Class,sem})\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\n    },[]);\n\n    return(\n        <>\n            <div className='ch-container'>\n                <div style={{padding:'5px'}}>\n                    <AppBar position='static' className='Appbar'>\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\n                                <img src='logo_trans.png' className='logo'></img>\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\n                                </div>\n                            </Grid>\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\n                                <ProfileMenu />\n                            </Grid>\n                        </Grid>\n                    </AppBar>\n                </div>\n                <Grid style={{marginTop: '10vh'}} container>\n                    {\n                        courseList.map((val,idx) => {\n                            return(\n                                <Grid item xs={4} key={idx}>\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\n                                        history.push(`/course/${val._id}`)\n                                    }}/>\n                                </Grid>\n                            );\n                        })\n                    }\n                    \n                </Grid>\n            </div>\n        </>\n    );\n}\n\nexport default StudentHome;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js",["539","540","541","542"],"import { AppBar, Toolbar, Card, Grid } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport CustomBox from '../../Helper/CustomBox';\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\n\n\nconst TeacherHome = () => {\n    const user = useSelector(state => state.auth.user)\n    const[courseList, setCourseList] = useState([])\n    const dispatch = useDispatch();\n    const history = useHistory();\n    useEffect(()=>{\n        const teacherID = user.teacherData;\n        console.log(JSON.stringify(user))\n        fetch('/teacher/getAllCourses',{\n           method: \"POST\",\n           mode: 'cors',\n           headers: { 'Content-Type': 'application/json' },\n           body: JSON.stringify({teacherID})\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\n    },[]);\n\n    return(\n        <>\n            <div className='ch-container'>\n                <div style={{padding:'5px'}}>\n                    <AppBar position='static' className='Appbar'>\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\n                                <img src='logo_trans.png' className='logo'></img>\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\n                                </div>\n                            </Grid>\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\n                                <ProfileMenu />\n                            </Grid>\n                        </Grid>\n                    </AppBar>\n                </div>\n                <Grid style={{marginTop: '10vh'}} container>\n                    {\n                        courseList.map((val,idx) => {\n                            return(\n                                <Grid item xs={4} key={idx}>\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\n                                        dispatch({type: \"SET_CURRENT_COURSE\", payload: val});\n                                        history.push(`/course/teacher/${val._id}`);\n                                    }}/>\n                                </Grid>\n                            );\n                        })\n                    }\n                </Grid>\n            </div>\n        </>\n    );\n}\n\nexport default TeacherHome;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js",["543","544"],"import AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles'; \nimport {Grid } from '@material-ui/core';\nimport Capture from './Capture.js'\nimport { useState, useEffect } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nimport blankProfile from './blankProfile';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  appBar: {\n  margin: 0,\n  },\n  userIcon:{\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginLeft:'90%',\n    borderRadius: '3rem'\n  }\n  }));\n\nconst QuizHeader = (props) => {\n  const userData = useSelector(state => state.auth.user);\n  const quizSubject = useSelector(state => state.quiz.questions.subject);\n  const quizID = useSelector(state => state.quiz.quizID);\n  useEffect(() => {\n    faceapi.nets.tinyFaceDetector.loadFromUri('/models').then(()=> {console.log(\n      \"Face API Started\"\n    )}).catch((err) => console.log(\"Error Starting FACE API\", err.message));\n    \n    }, []);\n    function warn(message){\n      confirmAlert({\n        title: 'Warning',\n        message: message,\n        buttons: [\n          {\n            label: 'OK',\n            onClick: () => document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\n          }\n        ]\n      });\n    };\n    function saveLog(img){\n      const userID = userData.id;\n      const reqBody = {\n        image: img,\n        userID,\n        quizID\n      }\n\n      fetch('/quiz/malpracticeLog', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(reqBody)\n      }).then( data => {\n        console.log(data);\n      }).catch(err => {\n        console.error(err);\n      })\n\n    }\n    const faceProcessingFunction = (faceData,img) => {\n      console.log(faceData.length)\n      if(faceData.length === 0){\n        warn(\"No Face Detected\")\n        saveLog(img);\n      }\n      else if(faceData.length > 1){\n        warn(\"Multiple Face Detected\")\n        saveLog(img);\n      }\n    }\n\n    const userPRN = props.prn;\n    const status = props.status;\n    //const profile = props.profile;\n    const classes = useStyles();\n    const [ImgSrc,setImgSrc]= useState(blankProfile);\n    const updateImgSrc = (img) => {\n      setImgSrc(img);\n      faceapi.detectAllFaces(\"input\", new faceapi.TinyFaceDetectorOptions()).then((data) => faceProcessingFunction(data,img)).catch((err)=> console.error(err))\n    }\n\n    return(\n        <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar style={{ background: '#274056' ,padding:5}}>\n         \n          <Grid container spacing={2}>\n            \n            <Grid item xs={4}>\n              <Typography variant=\"h5\" style={{fontWeight:500,margin:10}}>\n               {quizSubject}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={4} >\n              <img id=\"input\" src={ImgSrc} className={classes.userIcon}/>\n            </Grid>\n\n            <Grid item xs={3} style={{marginTop:'0.3%'}}>\n              <Typography display=\"inline\" style={{marginLeft:15}} varient=\"h6\">username : </Typography>\n              <Typography display=\"inline\" style={{marginLeft:5}} varient=\"h6\">{userData.name}</Typography>\n              <br/>\n              <Typography display=\"inline\" style={{marginLeft:15}} varient=\"h6\">Status : </Typography>\n              <Typography display=\"inline\" style={{marginLeft:5,color:'#22D400',fontWeight:600}} varient=\"h6\">{status}</Typography>\n            </Grid>\n            <Grid xs={1}>\n              <Capture setImgSrc={updateImgSrc}/>\n            </Grid>\n          </Grid>\n          \n        </Toolbar>\n      </AppBar>\n    );\n}\n\n\nexport default QuizHeader;","E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\Capture.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js",[],["545","546"],"E:\\Work\\Projects\\Mega Project\\Code\\GITHUB\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js",[],{"ruleId":"547","severity":1,"message":"548","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":11},{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"547","severity":1,"message":"555","line":4,"column":7,"nodeType":"549","messageId":"550","endLine":4,"endColumn":16},{"ruleId":"547","severity":1,"message":"556","line":18,"column":12,"nodeType":"549","messageId":"550","endLine":18,"endColumn":20},{"ruleId":"547","severity":1,"message":"557","line":18,"column":22,"nodeType":"549","messageId":"550","endLine":18,"endColumn":36},{"ruleId":"551","replacedBy":"558"},{"ruleId":"553","replacedBy":"559"},{"ruleId":"551","replacedBy":"560"},{"ruleId":"553","replacedBy":"561"},{"ruleId":"547","severity":1,"message":"562","line":1,"column":29,"nodeType":"549","messageId":"550","endLine":1,"endColumn":39},{"ruleId":"563","severity":1,"message":"564","line":47,"column":12,"nodeType":"565","endLine":47,"endColumn":14,"suggestions":"566"},{"ruleId":"551","replacedBy":"567"},{"ruleId":"553","replacedBy":"568"},{"ruleId":"547","severity":1,"message":"569","line":1,"column":10,"nodeType":"549","messageId":"550","endLine":1,"endColumn":22},{"ruleId":"547","severity":1,"message":"570","line":87,"column":11,"nodeType":"549","messageId":"550","endLine":87,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":110,"column":15,"nodeType":"573","endLine":110,"endColumn":74},{"ruleId":"563","severity":1,"message":"574","line":24,"column":7,"nodeType":"565","endLine":24,"endColumn":9,"suggestions":"575"},{"ruleId":"547","severity":1,"message":"576","line":53,"column":8,"nodeType":"549","messageId":"550","endLine":53,"endColumn":17},{"ruleId":"547","severity":1,"message":"577","line":106,"column":13,"nodeType":"549","messageId":"550","endLine":106,"endColumn":18},{"ruleId":"551","replacedBy":"578"},{"ruleId":"553","replacedBy":"579"},{"ruleId":"547","severity":1,"message":"580","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":17},{"ruleId":"563","severity":1,"message":"581","line":96,"column":5,"nodeType":"565","endLine":96,"endColumn":47,"suggestions":"582"},{"ruleId":"551","replacedBy":"583"},{"ruleId":"553","replacedBy":"584"},{"ruleId":"585","severity":1,"message":"586","line":62,"column":30,"nodeType":"587","messageId":"588","endLine":62,"endColumn":59},{"ruleId":"571","severity":1,"message":"572","line":69,"column":33,"nodeType":"573","endLine":69,"endColumn":76},{"ruleId":"589","severity":1,"message":"590","line":62,"column":17,"nodeType":"549","messageId":"591","endLine":62,"endColumn":19},{"ruleId":"547","severity":1,"message":"592","line":1,"column":19,"nodeType":"549","messageId":"550","endLine":1,"endColumn":28},{"ruleId":"551","replacedBy":"593"},{"ruleId":"553","replacedBy":"594"},{"ruleId":"563","severity":1,"message":"595","line":25,"column":7,"nodeType":"565","endLine":25,"endColumn":9,"suggestions":"596"},{"ruleId":"571","severity":1,"message":"572","line":34,"column":33,"nodeType":"573","endLine":34,"endColumn":76},{"ruleId":"563","severity":1,"message":"597","line":27,"column":8,"nodeType":"565","endLine":27,"endColumn":10,"suggestions":"598"},{"ruleId":"563","severity":1,"message":"599","line":80,"column":8,"nodeType":"565","endLine":80,"endColumn":10,"suggestions":"600"},{"ruleId":"547","severity":1,"message":"601","line":1,"column":18,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"602","line":1,"column":27,"nodeType":"549","messageId":"550","endLine":1,"endColumn":31},{"ruleId":"563","severity":1,"message":"603","line":23,"column":7,"nodeType":"565","endLine":23,"endColumn":9,"suggestions":"604"},{"ruleId":"571","severity":1,"message":"572","line":32,"column":33,"nodeType":"573","endLine":32,"endColumn":76},{"ruleId":"547","severity":1,"message":"605","line":12,"column":12,"nodeType":"549","messageId":"550","endLine":12,"endColumn":17},{"ruleId":"547","severity":1,"message":"606","line":12,"column":19,"nodeType":"549","messageId":"550","endLine":12,"endColumn":27},{"ruleId":"547","severity":1,"message":"607","line":1,"column":57,"nodeType":"549","messageId":"550","endLine":1,"endColumn":62},{"ruleId":"563","severity":1,"message":"608","line":34,"column":7,"nodeType":"565","endLine":34,"endColumn":9,"suggestions":"609"},{"ruleId":"571","severity":1,"message":"572","line":72,"column":13,"nodeType":"573","endLine":72,"endColumn":68},{"ruleId":"547","severity":1,"message":"601","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":35},{"ruleId":"547","severity":1,"message":"610","line":13,"column":11,"nodeType":"549","messageId":"550","endLine":13,"endColumn":14},{"ruleId":"547","severity":1,"message":"601","line":1,"column":36,"nodeType":"549","messageId":"550","endLine":1,"endColumn":43},{"ruleId":"547","severity":1,"message":"610","line":13,"column":11,"nodeType":"549","messageId":"550","endLine":13,"endColumn":14},{"ruleId":"563","severity":1,"message":"611","line":16,"column":8,"nodeType":"565","endLine":16,"endColumn":10,"suggestions":"612"},{"ruleId":"563","severity":1,"message":"564","line":32,"column":7,"nodeType":"565","endLine":32,"endColumn":9,"suggestions":"613"},{"ruleId":"551","replacedBy":"614"},{"ruleId":"553","replacedBy":"615"},{"ruleId":"589","severity":1,"message":"590","line":62,"column":17,"nodeType":"549","messageId":"591","endLine":62,"endColumn":19},{"ruleId":"547","severity":1,"message":"569","line":1,"column":10,"nodeType":"549","messageId":"550","endLine":1,"endColumn":22},{"ruleId":"585","severity":1,"message":"586","line":62,"column":30,"nodeType":"587","messageId":"588","endLine":62,"endColumn":59},{"ruleId":"571","severity":1,"message":"572","line":70,"column":33,"nodeType":"573","endLine":70,"endColumn":76},{"ruleId":"547","severity":1,"message":"605","line":12,"column":12,"nodeType":"549","messageId":"550","endLine":12,"endColumn":17},{"ruleId":"547","severity":1,"message":"606","line":12,"column":19,"nodeType":"549","messageId":"550","endLine":12,"endColumn":27},{"ruleId":"563","severity":1,"message":"597","line":27,"column":8,"nodeType":"565","endLine":27,"endColumn":10,"suggestions":"616"},{"ruleId":"563","severity":1,"message":"599","line":80,"column":8,"nodeType":"565","endLine":80,"endColumn":10,"suggestions":"617"},{"ruleId":"547","severity":1,"message":"601","line":1,"column":36,"nodeType":"549","messageId":"550","endLine":1,"endColumn":43},{"ruleId":"547","severity":1,"message":"610","line":13,"column":11,"nodeType":"549","messageId":"550","endLine":13,"endColumn":14},{"ruleId":"547","severity":1,"message":"601","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":35},{"ruleId":"547","severity":1,"message":"610","line":13,"column":11,"nodeType":"549","messageId":"550","endLine":13,"endColumn":14},{"ruleId":"547","severity":1,"message":"562","line":1,"column":29,"nodeType":"549","messageId":"550","endLine":1,"endColumn":39},{"ruleId":"563","severity":1,"message":"564","line":47,"column":12,"nodeType":"565","endLine":47,"endColumn":14,"suggestions":"618"},{"ruleId":"563","severity":1,"message":"611","line":16,"column":8,"nodeType":"565","endLine":16,"endColumn":10,"suggestions":"619"},{"ruleId":"563","severity":1,"message":"564","line":32,"column":7,"nodeType":"565","endLine":32,"endColumn":9,"suggestions":"620"},{"ruleId":"563","severity":1,"message":"574","line":24,"column":7,"nodeType":"565","endLine":24,"endColumn":9,"suggestions":"621"},{"ruleId":"547","severity":1,"message":"607","line":1,"column":57,"nodeType":"549","messageId":"550","endLine":1,"endColumn":62},{"ruleId":"563","severity":1,"message":"608","line":34,"column":7,"nodeType":"565","endLine":34,"endColumn":9,"suggestions":"622"},{"ruleId":"571","severity":1,"message":"572","line":72,"column":13,"nodeType":"573","endLine":72,"endColumn":68},{"ruleId":"547","severity":1,"message":"580","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":17},{"ruleId":"563","severity":1,"message":"581","line":96,"column":5,"nodeType":"565","endLine":96,"endColumn":47,"suggestions":"623"},{"ruleId":"547","severity":1,"message":"592","line":1,"column":19,"nodeType":"549","messageId":"550","endLine":1,"endColumn":28},{"ruleId":"563","severity":1,"message":"595","line":25,"column":7,"nodeType":"565","endLine":25,"endColumn":9,"suggestions":"624"},{"ruleId":"571","severity":1,"message":"572","line":34,"column":33,"nodeType":"573","endLine":34,"endColumn":76},{"ruleId":"547","severity":1,"message":"601","line":1,"column":18,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"602","line":1,"column":27,"nodeType":"549","messageId":"550","endLine":1,"endColumn":31},{"ruleId":"563","severity":1,"message":"603","line":23,"column":7,"nodeType":"565","endLine":23,"endColumn":9,"suggestions":"625"},{"ruleId":"571","severity":1,"message":"572","line":32,"column":33,"nodeType":"573","endLine":32,"endColumn":76},{"ruleId":"547","severity":1,"message":"570","line":87,"column":11,"nodeType":"549","messageId":"550","endLine":87,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":110,"column":15,"nodeType":"573","endLine":110,"endColumn":74},{"ruleId":"551","replacedBy":"626"},{"ruleId":"553","replacedBy":"627"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["628"],"no-negated-in-lhs",["629"],"'useStyles' is assigned a value but never used.","'selected' is assigned a value but never used.","'updateSelected' is assigned a value but never used.",["628"],["629"],["628"],["629"],"'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'quizID' and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["630"],["628"],["629"],"'StaticRouter' is defined but never used.","'userPRN' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["631"],"'questions' is assigned a value but never used.","'optId' is assigned a value but never used.",["628"],["629"],"'fromStore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'questionBank', 'quizID', 'startDate', and 'userID'. Either include them or remove the dependency array.",["632"],["628"],["629"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","no-redeclare","'op' is already defined.","redeclared","'useEffect' is defined but never used.",["628"],["629"],"React Hook useEffect has missing dependencies: 'Class', 'branch', 'dispatch', and 'sem'. Either include them or remove the dependency array.",["633"],"React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["634"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["635"],"'Toolbar' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["636"],"'Class' is assigned a value but never used.","'setClass' is assigned a value but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["637"],"'oes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'quizId'. Either include it or remove the dependency array.",["638"],["639"],["628"],["629"],["640"],["641"],["642"],["643"],["644"],["645"],["646"],["647"],["648"],["649"],["628"],["629"],"no-global-assign","no-unsafe-negation",{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"650","fix":"668"},{"desc":"658","fix":"669"},{"desc":"660","fix":"670"},{"desc":"650","fix":"671"},{"desc":"666","fix":"672"},{"desc":"650","fix":"673"},{"desc":"652","fix":"674"},{"desc":"664","fix":"675"},{"desc":"654","fix":"676"},{"desc":"656","fix":"677"},{"desc":"662","fix":"678"},"Update the dependencies array to be: [quizID, userID]",{"range":"679","text":"680"},"Update the dependencies array to be: [history]",{"range":"681","text":"682"},"Update the dependencies array to be: [attempted, flagged, userChoices, dispatch, userID, quizID, startDate, questionBank]",{"range":"683","text":"684"},"Update the dependencies array to be: [Class, branch, dispatch, sem]",{"range":"685","text":"686"},"Update the dependencies array to be: [props.peer]",{"range":"687","text":"688"},"Update the dependencies array to be: [roomID]",{"range":"689","text":"690"},"Update the dependencies array to be: [dispatch, user]",{"range":"691","text":"692"},"Update the dependencies array to be: [dispatch]",{"range":"693","text":"694"},"Update the dependencies array to be: [quizId]",{"range":"695","text":"696"},{"range":"697","text":"680"},{"range":"698","text":"688"},{"range":"699","text":"690"},{"range":"700","text":"680"},{"range":"701","text":"696"},{"range":"702","text":"680"},{"range":"703","text":"682"},{"range":"704","text":"694"},{"range":"705","text":"684"},{"range":"706","text":"686"},{"range":"707","text":"692"},[1898,1900],"[quizID, userID]",[1015,1017],"[history]",[2864,2906],"[attempted, flagged, userChoices, dispatch, userID, quizID, startDate, questionBank]",[1064,1066],"[Class, branch, dispatch, sem]",[593,595],"[props.peer]",[2365,2367],"[roomID]",[1010,1012],"[dispatch, user]",[1159,1161],"[dispatch]",[664,666],"[quizId]",[1158,1160],[567,569],[2286,2288],[1898,1900],[649,651],[1127,1129],[992,994],[1126,1128],[2769,2811],[1040,1042],[988,990]]