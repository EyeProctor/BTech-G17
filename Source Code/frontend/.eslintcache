[{"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\index.js":"1","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\reducer\\index.js":"2","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\App.js":"3","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"4","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"5","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\service\\questions.js":"6","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\service\\userData.js":"7","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js":"8","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"9","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js":"10","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\Capture.js":"11","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"12","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js":"13","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\QuizCreation\\Creator.js":"14"},{"size":494,"mtime":1612114880824,"results":"15","hashOfConfig":"16"},{"size":174,"mtime":1612114880825,"results":"17","hashOfConfig":"16"},{"size":3925,"mtime":1612449366856,"results":"18","hashOfConfig":"16"},{"size":3937,"mtime":1612372422099,"results":"19","hashOfConfig":"16"},{"size":1106,"mtime":1612114880824,"results":"20","hashOfConfig":"16"},{"size":4455,"mtime":1612114930843,"results":"21","hashOfConfig":"16"},{"size":145,"mtime":1612114880826,"results":"22","hashOfConfig":"16"},{"size":211,"mtime":1612114880825,"results":"23","hashOfConfig":"16"},{"size":1338,"mtime":1612114880824,"results":"24","hashOfConfig":"16"},{"size":3326,"mtime":1612372422099,"results":"25","hashOfConfig":"16"},{"size":1231,"mtime":1612114880823,"results":"26","hashOfConfig":"16"},{"size":2040,"mtime":1612372422100,"results":"27","hashOfConfig":"16"},{"size":795,"mtime":1612114880823,"results":"28","hashOfConfig":"16"},{"size":3509,"mtime":1612681181883,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"12qpcll",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\index.js",["62"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport {createStore} from 'redux';\r\nimport allReducer from './reducer/index';\r\nimport {Provider} from 'react-redux';\r\nimport QuizLandingPage from './components/quiz/QuizLandingPage';\r\n\r\n\r\nconst store = createStore(allReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <QuizLandingPage/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n",["63","64"],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\reducer\\index.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\App.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"import QuizHeader from './components/quiz/QuizHeader';\r\nimport {Grid, Card, CardActions, Button } from '@material-ui/core';\r\nimport QuestionsPanel from './components/quiz/rightPanel/RightPanel.js';\r\nimport QuestionBody, {  } from \"./components/quiz/questions/QuestionBody\";\r\nimport Countdown from 'react-countdown';\r\nimport questionBank from './service/questions.js';\r\nimport userData from './service/userData.js';\r\nimport {  useState, useEffect } from 'react';\r\nimport Quiz from './components/QuizCreation/Creator'\r\n\r\nfunction App() {\r\n\r\n\t\t// var userChoice = {\r\n\t\t// \tprn: userData.prn,\r\n\t\t// \tstartDate : 'dd-mm-yyy',\r\n\t\t// \tchoices: {},\r\n\t\t// \tcurrent: currentQ,\r\n\t\t// }\r\n\t\tuseEffect(() => {\r\n\t\t\t   setStartDate(Date.now());\r\n\t\t\t   document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\r\n\t\t  }, []);\r\n\t// \tconst  blackListedKeys = ['Control', 'Alt', 'Tab']\r\n\t// \twindow.addEventListener('keydown', function (event) {\r\n\r\n\t// \t\t// if the keyCode is 16 ( shift key was pressed )\r\n\t\t\r\n\t// \t\t\t// prevent default behaviour\r\n\t// \t\t\tif(blackListedKeys.includes(event.key)){\r\n\t// \t\t\t\tevent.preventDefault();\r\n\t// \t\t\treturn false;\r\n\t// \t\t\t}\r\n\t\t\t\t\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t// })\r\n\tvar [attempted, updateAttempted] = useState([]);\r\n\tconst [startDate,setStartDate] = useState(Date.now());\r\n\tconst [flagged, updateFlagged] = useState([]);\r\n\tconst [currentQ, updateCurrentQ] = useState(1);\r\n\tvar endDate = startDate + questionBank.duration;\r\n\tconst handleAttempted = () => {\r\n\t\tupdateAttempted(\r\n\t\t\tarr => [...arr, currentQ]\r\n\t\t\t\r\n\t\t);\r\n\t\tattempted = [...new Set(attempted)];\r\n\t\tconsole.log('AttemptedArray',attempted);\r\n\t}\r\n\tconst handleFlagged = () => {\r\n\t\tif(!flagged.includes(currentQ))\r\n\t\t\tupdateFlagged(\r\n\t\t\t\tarr => [...arr, currentQ]\r\n\t\t\t)\r\n\t\telse{\r\n\t\t\tvar temp = [...flagged]\r\n\t\t\ttemp.splice(temp.indexOf(currentQ));\r\n\t\t\tupdateFlagged(\r\n\t\t\t\ttemp\r\n\t\t\t)\r\n\t\t}\r\n\t\t// console.log('FlaggedArray',flagged);\r\n\t\t// console.log('CurrentQ',currentQ);\r\n\t}\r\n\tconst handlePrev = () => {\r\n\t\tupdateCurrentQ(currentQ-1);\r\n\t}\r\n\tconst handleNext = () => {\r\n\t\tupdateCurrentQ(currentQ+1);\r\n\t}\r\n\r\n\tconst handleUserChoice = (val) => {\r\n\r\n\t\tupdateUserChoice({...userChoices, [currentQ]: val})\r\n\r\n\t\t// console.log(JSON.stringify(userChoices));\r\n\t}\r\n\r\n\tvar [userChoices, updateUserChoice] = useState({});\r\n\r\n  return (\r\n    <div>\r\n      {/* <Grid container justify={'center'} spacing={2}>\r\n        <Grid item xs={12} >\r\n        \t<QuizHeader prn={userData.prn} status=\"Valid\"/>\r\n        </Grid>\r\n\t\t<Grid item container spacing={2} xs={12}>\r\n\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t<QuestionBody onFlagged={handleFlagged} onAttempted={handleAttempted} currentQ={questionBank.questions[currentQ - 1]} no = {currentQ} flagged={flagged} userChoice={userChoices[currentQ.toString()]} updateUserChoice={handleUserChoice}/>\r\n\t\t\t\t<CardActions>\r\n\t\t\r\n\t\t\t{\r\n\t\t\t(currentQ !== 1) ?\r\n\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handlePrev}>\r\n\t\t\t\tPrev\r\n\t\t\t</Button>:<></>\r\n\t\t  }\r\n\t\t  {currentQ < questionBank.questions.length?<Button  variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handleNext}>\r\n          Next\r\n        </Button>:<></>}\r\n        \r\n      </CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t<QuestionsPanel updateNav={(val)=> updateCurrentQ(val) } qNo={questionBank.questions.length} attemptedQ={attempted} flagged={flagged} current={currentQ}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Button onClick={()=>{alert(JSON.stringify(userChoices))}} variant=\"contained\" style={{background:'green',color: 'white', marginTop: 10}}>\r\n          Submit\r\n        </Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Countdown date={endDate} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n        </Grid>\r\n\t\t<Grid item xs={12} >\r\n        \t<h1>Group 17</h1>\r\n        </Grid>\r\n      </Grid> */}\r\n\t  <Quiz />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\service\\questions.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\service\\userData.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js",["80"],"import AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport {Grid } from '@material-ui/core';\r\nimport Capture from './Capture.js'\r\nimport { useState, useEffect } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n\r\n\r\n  appBar: {\r\n  margin: 0,\r\n  },\r\n\r\n\r\n  userIcon:{\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    marginLeft:'90%',\r\n    borderRadius: '3rem'\r\n  }\r\n  }));\r\n\r\nconst QuizHeader = (props) => {\r\n  useEffect(() => {\r\n    faceapi.nets.tinyFaceDetector.loadFromUri('/models').then(()=> {console.log(\r\n      \"Face API Started\"\r\n    )}).catch((err) => console.log(\"Error Starting FACE API\", err.message));\r\n    \r\n    }, []);\r\n    function warn(message){\r\n      confirmAlert({\r\n        title: 'Warning',\r\n        message: message,\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n            onClick: () => document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\r\n          }\r\n        ]\r\n      });\r\n    };\r\n    const faceProcessingFunction = (faceData) => {\r\n      console.log(faceData.length)\r\n      if(faceData.length === 0){\r\n        warn(\"No Face Detected\")\r\n      }\r\n      else if(faceData.length > 1){\r\n        warn(\"Multiple Face Detected\")\r\n      }\r\n    }\r\n\r\n    const userPRN = props.prn;\r\n    const status = props.status;\r\n    //const profile = props.profile;\r\n    const classes = useStyles();\r\n    const [ImgSrc,setImgSrc]= useState(\"\");\r\n    const updateImgSrc = (img) => {\r\n      setImgSrc(img);\r\n      faceapi.detectAllFaces(\"input\", new faceapi.TinyFaceDetectorOptions()).then((data) => faceProcessingFunction(data)).catch((err)=> console.error(err))\r\n    }\r\n\r\n    return(\r\n        <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar style={{ background: '#274056' ,padding:5}}>\r\n         \r\n          <Grid container spacing={2}>\r\n            \r\n            <Grid item xs={4}>\r\n              <Typography variant=\"h5\" style={{fontWeight:500,margin:10}}>\r\n               Operating System\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={4} >\r\n              <img id=\"input\" src={ImgSrc} className={classes.userIcon}/>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} style={{marginTop:'0.3%'}}>\r\n              <Typography display=\"inline\" style={{marginLeft:15}} varient=\"h6\">PRN : </Typography>\r\n              <Typography display=\"inline\" style={{marginLeft:5}} varient=\"h6\">{userPRN}</Typography>\r\n              <br/>\r\n              <Typography display=\"inline\" style={{marginLeft:15}} varient=\"h6\">Status : </Typography>\r\n              <Typography display=\"inline\" style={{marginLeft:5,color:'#22D400',fontWeight:600}} varient=\"h6\">{status}</Typography>\r\n            </Grid>\r\n            <Grid xs={1}>\r\n              <Capture setImgSrc={updateImgSrc}/>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n}\r\n\r\n\r\nexport default QuizHeader;","F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\Capture.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js",[],"F:\\IMProgramming\\btmega-project\\BTech-G17\\Source Code\\frontend\\src\\components\\QuizCreation\\Creator.js",["81"],{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":11},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"82","severity":1,"message":"90","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":18},{"ruleId":"82","severity":1,"message":"91","line":2,"column":9,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"92","line":2,"column":15,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"93","line":2,"column":21,"nodeType":"84","messageId":"85","endLine":2,"endColumn":32},{"ruleId":"82","severity":1,"message":"94","line":2,"column":34,"nodeType":"84","messageId":"85","endLine":2,"endColumn":40},{"ruleId":"82","severity":1,"message":"95","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":22},{"ruleId":"82","severity":1,"message":"96","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":20},{"ruleId":"82","severity":1,"message":"97","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":17},{"ruleId":"82","severity":1,"message":"98","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"82","severity":1,"message":"99","line":43,"column":6,"nodeType":"84","messageId":"85","endLine":43,"endColumn":13},{"ruleId":"82","severity":1,"message":"100","line":44,"column":8,"nodeType":"84","messageId":"85","endLine":44,"endColumn":23},{"ruleId":"82","severity":1,"message":"101","line":52,"column":8,"nodeType":"84","messageId":"85","endLine":52,"endColumn":21},{"ruleId":"82","severity":1,"message":"102","line":67,"column":8,"nodeType":"84","messageId":"85","endLine":67,"endColumn":18},{"ruleId":"82","severity":1,"message":"103","line":70,"column":8,"nodeType":"84","messageId":"85","endLine":70,"endColumn":18},{"ruleId":"82","severity":1,"message":"104","line":74,"column":8,"nodeType":"84","messageId":"85","endLine":74,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":86,"column":15,"nodeType":"107","endLine":86,"endColumn":74},{"ruleId":"82","severity":1,"message":"108","line":104,"column":13,"nodeType":"84","messageId":"85","endLine":104,"endColumn":18},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'QuizHeader' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'QuestionsPanel' is defined but never used.","'QuestionBody' is defined but never used.","'Countdown' is defined but never used.","'userData' is defined but never used.","'endDate' is assigned a value but never used.","'handleAttempted' is assigned a value but never used.","'handleFlagged' is assigned a value but never used.","'handlePrev' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'handleUserChoice' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'optId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]