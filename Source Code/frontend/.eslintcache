[{"G:\\Engineering\\Final Year\\frontend\\src\\index.js":"1","G:\\Engineering\\Final Year\\frontend\\src\\App.js":"2","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\quizHeader.js":"3","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\option.js":"4","G:\\Engineering\\Final Year\\frontend\\src\\service\\questions.js":"5","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"6","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"7","G:\\Engineering\\Final Year\\frontend\\src\\reducer\\index.js":"8","G:\\Engineering\\Final Year\\frontend\\src\\reducer\\quiz\\quiz.js":"9","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\Timer.js":"10","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"11","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\Option.js":"12","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizHeader.js":"13","G:\\Engineering\\Final Year\\frontend\\src\\service\\userData.js":"14","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\Capture.js":"15","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"16","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js":"17","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js":"18","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"19","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js":"20","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js":"21","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\questions.js":"22","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"23","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js":"24","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js":"25","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"26","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"27","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js":"28","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js":"29","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js":"30","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\Creator.js":"31","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js":"32","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js":"33","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js":"34","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js":"35","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js":"36","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js":"37","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js":"38","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js":"39","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\action\\quiz\\quiz.js":"40","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js":"41","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js":"42","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js":"43","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js":"44","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js":"45","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js":"46","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js":"47","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js":"48","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js":"49","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js":"50","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js":"51","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js":"52","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js":"53","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js":"54"},{"size":475,"mtime":1612089209718,"results":"55","hashOfConfig":"56"},{"size":3638,"mtime":1612021132095,"results":"57","hashOfConfig":"56"},{"size":1956,"mtime":1611810838773,"results":"58","hashOfConfig":"56"},{"size":1211,"mtime":1611761625791,"results":"59","hashOfConfig":"56"},{"size":4455,"mtime":1611941571775,"results":"60","hashOfConfig":"56"},{"size":2040,"mtime":1612020855025,"results":"61","hashOfConfig":"56"},{"size":1106,"mtime":1611844207800,"results":"62","hashOfConfig":"56"},{"size":174,"mtime":1611740277392,"results":"63","hashOfConfig":"56"},{"size":211,"mtime":1611740282511,"results":"64","hashOfConfig":"56"},{"size":681,"mtime":1611942622552,"results":"65","hashOfConfig":"56"},{"size":1338,"mtime":1611939528433,"results":"66","hashOfConfig":"56"},{"size":795,"mtime":1611939745623,"results":"67","hashOfConfig":"56"},{"size":2127,"mtime":1611941396025,"results":"68","hashOfConfig":"56"},{"size":145,"mtime":1611810752589,"results":"69","hashOfConfig":"56"},{"size":1231,"mtime":1611941367770,"results":"70","hashOfConfig":"56"},{"size":1340,"mtime":1612090268536,"results":"71","hashOfConfig":"56"},{"size":1160,"mtime":1616692111211,"results":"72","hashOfConfig":"73"},{"size":487,"mtime":1616693610857,"results":"74","hashOfConfig":"73"},{"size":4341,"mtime":1613281392179,"results":"75","hashOfConfig":"73"},{"size":6222,"mtime":1616760017172,"results":"76","hashOfConfig":"73"},{"size":145,"mtime":1611810752589,"results":"77","hashOfConfig":"73"},{"size":4455,"mtime":1611941571775,"results":"78","hashOfConfig":"73"},{"size":1106,"mtime":1611844207800,"results":"79","hashOfConfig":"73"},{"size":1167,"mtime":1614414946141,"results":"80","hashOfConfig":"73"},{"size":3326,"mtime":1612283579714,"results":"81","hashOfConfig":"73"},{"size":1338,"mtime":1611939528433,"results":"82","hashOfConfig":"73"},{"size":2040,"mtime":1612370006550,"results":"83","hashOfConfig":"73"},{"size":1231,"mtime":1611941367770,"results":"84","hashOfConfig":"73"},{"size":795,"mtime":1611939745623,"results":"85","hashOfConfig":"73"},{"size":4958,"mtime":1613282237019,"results":"86","hashOfConfig":"73"},{"size":3902,"mtime":1612690251770,"results":"87","hashOfConfig":"73"},{"size":3834,"mtime":1616690438588,"results":"88","hashOfConfig":"73"},{"size":1843,"mtime":1613737660408,"results":"89","hashOfConfig":"73"},{"size":537,"mtime":1616689374639,"results":"90","hashOfConfig":"73"},{"size":485,"mtime":1613715927932,"results":"91","hashOfConfig":"73"},{"size":2671,"mtime":1616433211298,"results":"92","hashOfConfig":"73"},{"size":730,"mtime":1613979468949,"results":"93","hashOfConfig":"73"},{"size":2628,"mtime":1614273285339,"results":"94","hashOfConfig":"73"},{"size":4215,"mtime":1614274184866,"results":"95","hashOfConfig":"73"},{"size":398,"mtime":1614415027816,"results":"96","hashOfConfig":"73"},{"size":276,"mtime":1616235500990,"results":"97","hashOfConfig":"73"},{"size":1666,"mtime":1616736336138,"results":"98","hashOfConfig":"73"},{"size":3446,"mtime":1616234506092,"results":"99","hashOfConfig":"73"},{"size":1778,"mtime":1616759901036,"results":"100","hashOfConfig":"73"},{"size":1447,"mtime":1616611245212,"results":"101","hashOfConfig":"73"},{"size":7694,"mtime":1616663599807,"results":"102","hashOfConfig":"73"},{"size":5285,"mtime":1616672511989,"results":"103","hashOfConfig":"73"},{"size":6201,"mtime":1616675911473,"results":"104","hashOfConfig":"73"},{"size":3614,"mtime":1616736231959,"results":"105","hashOfConfig":"73"},{"size":318,"mtime":1616611132456,"results":"106","hashOfConfig":"73"},{"size":5032,"mtime":1616692541314,"results":"107","hashOfConfig":"73"},{"size":232,"mtime":1616696129419,"results":"108","hashOfConfig":"73"},{"size":1597,"mtime":1616696927464,"results":"109","hashOfConfig":"73"},{"size":2167,"mtime":1616760550725,"results":"110","hashOfConfig":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},"y8p9p3",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"f9pvug",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"176"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"148"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"148"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Engineering\\Final Year\\frontend\\src\\index.js",["234"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'typeface-roboto';\nimport {createStore} from 'redux';\nimport allReducer from './reducer/index';\nimport {Provider} from 'react-redux';\nimport QuizLandingPage from './components/quiz/QuizLandingPage';\n\n\nconst store = createStore(allReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <QuizLandingPage/>\n  </Provider>,\n  document.getElementById('root')\n);\n",["235","236"],"G:\\Engineering\\Final Year\\frontend\\src\\App.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\quizHeader.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\option.js",["237","238","239"],"G:\\Engineering\\Final Year\\frontend\\src\\service\\questions.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\reducer\\quiz\\quiz.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\Timer.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\Option.js",[],["240","241"],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizHeader.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizLandingPage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js",[],["242","243"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js",["244","245"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\questions.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js",["246"],"import AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport {Grid } from '@material-ui/core';\r\nimport Capture from './Capture.js'\r\nimport { useState, useEffect } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n\r\n\r\n  appBar: {\r\n  margin: 0,\r\n  },\r\n\r\n\r\n  userIcon:{\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    marginLeft:'90%',\r\n    borderRadius: '3rem'\r\n  }\r\n  }));\r\n\r\nconst QuizHeader = (props) => {\r\n  useEffect(() => {\r\n    faceapi.nets.tinyFaceDetector.loadFromUri('/models').then(()=> {console.log(\r\n      \"Face API Started\"\r\n    )}).catch((err) => console.log(\"Error Starting FACE API\", err.message));\r\n    \r\n    }, []);\r\n    function warn(message){\r\n      confirmAlert({\r\n        title: 'Warning',\r\n        message: message,\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n            onClick: () => document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\r\n          }\r\n        ]\r\n      });\r\n    };\r\n    const faceProcessingFunction = (faceData) => {\r\n      console.log(faceData.length)\r\n      if(faceData.length === 0){\r\n        warn(\"No Face Detected\")\r\n      }\r\n      else if(faceData.length > 1){\r\n        warn(\"Multiple Face Detected\")\r\n      }\r\n    }\r\n\r\n    const userPRN = props.prn;\r\n    const status = props.status;\r\n    //const profile = props.profile;\r\n    const classes = useStyles();\r\n    const [ImgSrc,setImgSrc]= useState(\"\");\r\n    const updateImgSrc = (img) => {\r\n      setImgSrc(img);\r\n      faceapi.detectAllFaces(\"input\", new faceapi.TinyFaceDetectorOptions()).then((data) => faceProcessingFunction(data)).catch((err)=> console.error(err))\r\n    }\r\n\r\n    return(\r\n        <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar style={{ background: '#274056' ,padding:5}}>\r\n         \r\n          <Grid container spacing={2}>\r\n            \r\n            <Grid item xs={4}>\r\n              <Typography variant=\"h5\" style={{fontWeight:500,margin:10}}>\r\n               Operating System\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={4} >\r\n              <img id=\"input\" src={ImgSrc} className={classes.userIcon}/>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} style={{marginTop:'0.3%'}}>\r\n              <Typography display=\"inline\" style={{marginLeft:15}} varient=\"h6\">PRN : </Typography>\r\n              <Typography display=\"inline\" style={{marginLeft:5}} varient=\"h6\">{userPRN}</Typography>\r\n              <br/>\r\n              <Typography display=\"inline\" style={{marginLeft:15}} varient=\"h6\">Status : </Typography>\r\n              <Typography display=\"inline\" style={{marginLeft:5,color:'#22D400',fontWeight:600}} varient=\"h6\">{status}</Typography>\r\n            </Grid>\r\n            <Grid xs={1}>\r\n              <Capture setImgSrc={updateImgSrc}/>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n}\r\n\r\n\r\nexport default QuizHeader;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js",[],["247","248"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\Creator.js",["249","250"],"import React from \"react\"\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel} from '@material-ui/core';\r\n\r\nclass Quiz extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\tquiz:{\r\n\t\t\t\tquizId: 0,\r\n\t\t\t\tsubject: \"\",\r\n\t\t\t\tproctored: false,\r\n\t\t\t\tstartDate: \"01-01-21-12:00\",\r\n\t\t\t\tendDate: \"01-01-21-12:30\",\r\n\t\t\t\tduration: 600000\r\n\t\t\t},\r\n\t\t\tquestions:[{\r\n\t\t\t\t\t\tqNo: 0,\r\n\t\t\t\t\t\tqtype: 1,\r\n\t\t\t\t\t\tquestion: \"Question?\",\r\n\t\t\t\t\t\toptions: [{op: \"\",ans: false}]\r\n\t\t\t},]\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.addOption = this.addOption.bind(this);\r\n    }\t\r\n\r\n    addQuestion = (e) => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tquestions:[...prevState.questions,{qNo: 0,\r\n                qtype: 1,\r\n                question: \"Question\",\r\n                options: [{qs: \"\",ans: false}]}]\r\n\t\t}));\r\n\tconsole.log(this.state);\r\n\t}\r\n\r\n\taddOption = (e,idx) => {\r\n        console.log(idx);\r\n        let allQ = [...this.state.questions];\r\n        let temp = allQ[idx-1]\r\n        temp.options = [...temp.options, {qs: \"\",ans: false}]\r\n        // allQ[idx-1] = temp;\r\n        console.log(allQ);\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tquestions: allQ\r\n\t\t}));\r\n\tconsole.log(\"Options\",this.state.questions[idx-1]);\r\n\t}\r\n\t\r\n\thandleSubmit = (e) => { e.preventDefault() }\r\n\r\n    render() {\r\n\t\tlet {questions}= this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<form  onSubmit={this.handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\r\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TextField id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-start\"\r\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-end\"\r\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.questions.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet queId = `que-${idx++}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname={queId}\r\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\tid={queId}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={(e)=>{this.addOption(e,idx)}}>+ Add Option</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    {\r\n\t\t\t\t\t\t\tthis.state.questions[idx-1].options.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet optId = `opt-${++idx}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n                                        <FormControlLabel control={\r\n                                        <Checkbox color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                        \r\n                                        } label={\"Option:\" + idx} />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={this.addQuestion}>+ Add Question</Button>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" type=\"submit\">Submit</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Quiz;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js",["251","252"],"import QuizHeader from './QuizHeader';\r\nimport {Grid, Card, CardActions, Button } from '@material-ui/core';\r\nimport QuestionsPanel from './rightPanel/RightPanel.js';\r\nimport QuestionBody, {  } from \"./questions/QuestionBody\";\r\nimport Countdown from 'react-countdown';\r\nimport questionBank from '../../service/questions.js';\r\nimport userData from '../../service/userData.js';\r\nimport {  useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getQuiz} from '../../action/quiz/quiz';\r\n\r\nfunction Quiz() {\r\n\tuseEffect(() => {\r\n\t\t\t   setStartDate(Date.now());\r\n\t\t\t   dispatch(getQuiz());\r\n\t\t\t   document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\r\n\t}, []);\r\n\tconst dispatch = useDispatch();\r\n\tconst userID = \"1234\";\r\n\t// const userID = useSelector(state => state.auth.user.id) || null;\r\n\t// const questionBank = useSelector(state => state.quiz.questions)\r\n\tvar [attempted, updateAttempted] = useState([]);\r\n\tconst [startDate,setStartDate] = useState(Date.now());\r\n\tconst [flagged, updateFlagged] = useState([]);\r\n\tconst [currentQ, updateCurrentQ] = useState(1);\r\n\tvar endDate = startDate + questionBank.duration;\r\n\t\r\n\tconst handleAttempted = () => {\r\n\t\tattempted = [...new Set(attempted)];\r\n\t\tupdateAttempted(\r\n\t\t\tarr => [...arr, currentQ]\r\n\t\t\t\r\n\t\t);\r\n\t\tconsole.log('AttemptedArray',attempted);\r\n\t\t\r\n\t}\r\n\tconst handleFlagged = () => {\r\n\t\tif(!flagged.includes(currentQ))\r\n\t\t\tupdateFlagged(\r\n\t\t\t\tarr => [...arr, currentQ]\r\n\t\t\t)\r\n\t\telse{\r\n\t\t\tvar temp = [...flagged]\r\n\t\t\ttemp.splice(temp.indexOf(currentQ));\r\n\t\t\tupdateFlagged(\r\n\t\t\t\ttemp\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\tconst handlePrev = () => {\r\n\t\tupdateCurrentQ(currentQ-1);\r\n\t}\r\n\tconst handleNext = () => {\r\n\t\tupdateCurrentQ(currentQ+1);\r\n\t}\r\n\r\n\tconst handleUserChoice = (val) => {\r\n\r\n\t\tupdateUserChoice({...userChoices, [currentQ]: val})\r\n\t\t\r\n\r\n\t}\r\n\r\n\tvar [userChoices, updateUserChoice] = useState({});\r\n\tuseEffect(()=> {\r\n\t\tconst data = {\r\n\t\t\tuserID: userID,\r\n\t\t\tattempted: attempted,\r\n    \t\tflagged: flagged,\r\n    \t\tuserChoices: userChoices,\r\n    \t\tstartedAt: null,\r\n\t\t\tquestions: questionBank,\r\n\t\t}\r\n\r\n\t\tdispatch({type: \"SAVE_USERCHOICES\", payload: data});\r\n\r\n\t}, [attempted, flagged, userChoices,dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container justify={'center'} spacing={2}>\r\n        <Grid item xs={12} >\r\n        \t<QuizHeader prn={userData.prn} status=\"Valid\"/>\r\n        </Grid>\r\n\t\t<Grid item container spacing={2} xs={12}>\r\n\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t<QuestionBody onFlagged={handleFlagged} onAttempted={handleAttempted} currentQ={questionBank.questions[currentQ - 1]} no = {currentQ} flagged={flagged} userChoice={userChoices[currentQ.toString()]} updateUserChoice={handleUserChoice}/>\r\n\t\t\t\t<CardActions>\r\n\t\t\r\n\t\t\t{\r\n\t\t\t(currentQ !== 1) ?\r\n\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handlePrev}>\r\n\t\t\t\tPrev\r\n\t\t\t</Button>:<></>\r\n\t\t  }\r\n\t\t  {currentQ < questionBank.questions.length?<Button  variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handleNext}>\r\n          Next\r\n        </Button>:<></>}\r\n        \r\n      </CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t<QuestionsPanel updateNav={(val)=> updateCurrentQ(val) } qNo={questionBank.questions.length} attemptedQ={attempted} flagged={flagged} current={currentQ}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Button onClick={()=>{alert(JSON.stringify(userChoices))}} variant=\"contained\" style={{background:'green',color: 'white', marginTop: 10}}>\r\n          Submit\r\n        </Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Countdown date={endDate} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n        </Grid>\r\n\t\t<Grid item xs={12} >\r\n        \t<h1>Group 17</h1>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js",["253"],"import {useState} from 'react'\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\"\r\n\r\nconst CodeUI = () => {\r\n\r\n    const [Code, setCode] = useState(\"\");\r\n    const [Output, setOutput] = useState(\"Output of Code\");\r\n\r\n    function fetchResult(sid){\r\n        fetch( \"/code/fetchResult\", \r\n            {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                        },\r\n                body: JSON.stringify({\r\n                    sid\r\n                })\r\n            }\r\n        ).then(\r\n            (res) => res.json().then(resData =>{\r\n                if(resData.status === 'IN-QUEUE'){\r\n                    return fetchResult(sid);\r\n                }\r\n                setOutput(resData.output);\r\n                return;\r\n            })\r\n        ).catch(err=> console.log(err)).catch(err=> console.log(err))\r\n    }\r\n    function SubmitForm(e){\r\n        e.preventDefault();\r\n        fetch( \"/code/compile\", \r\n            {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                        },\r\n                body: JSON.stringify({\r\n                    lang: \"Python\",\r\n                    code: Code,\r\n                    input: \"\",\r\n                    save: false\r\n                })\r\n            }\r\n        ).then(\r\n            (res) => res.json().then(resData => fetchResult(resData.sid))\r\n        ).catch(err=> console.log(err)).catch(err=> console.log(err))\r\n\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={SubmitForm}>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <textarea onChange={(e)=> setCode(e.target.value)} value={Code} rows=\"25\" cols=\"200\">\r\n\r\n                            </textarea>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                        <textarea onChange={(e)=> setOutput(e.target.value)} value={Output} rows=\"10\" cols=\"200\">\r\n                            \r\n                            </textarea>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"submit\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodeUI;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js",["254"],"const initialState = {\r\n    subject: null,\r\n    proctored: false,\r\n    startDate: null,\r\n    endDate: null,\r\n    duration: null,\r\n    questions: []\r\n}\r\n\r\nvar questionState = {\r\n    qNo: null,\r\n    qType: 1,\r\n    question: \"\",\r\n    options: []\r\n}\r\n\r\nconst optionsState = {\r\n    qs: \"\",\r\n    ans: false\r\n};\r\n\r\n\r\n\r\nvar QIndex, OIndex, QArray;\r\n\r\nconst quizCreatorReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_QUESTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            const newQuestionState = {...questionState, qNo: QArray.length+1 }\r\n            QArray.push(newQuestionState)\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_QUESTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            QArray[QIndex].question = action.payload.question;\r\n            return {...state, questions: QArray}\r\n\r\n        case \"ADD_OPTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            var op = QArray[action.payload.QIndex]\r\n            op.options = [...op.options, {qs: \"\",ans: false}]\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_OPTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            QArray[QIndex].options[OIndex] = {...optionsState, qs: action.payload.option}\r\n            return {...state, questions: QArray}\r\n        \r\n        case 'SET_ANSWER':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            var op = QArray[QIndex]\r\n            \r\n            if(op.options[OIndex].ans){\r\n                \r\n                QArray[QIndex].options[OIndex].ans = false;\r\n                return {...state, questions: QArray}\r\n            }\r\n            op.options.forEach(O => {\r\n                if(O.ans){\r\n                    O.ans = false;\r\n                }\r\n            });\r\n            \r\n            QArray[QIndex].options[OIndex] = {...op.options[OIndex], ans: true}\r\n            return {...state, questions: QArray}\r\n        \r\n        case \"SET_QUIZ_SUBJECT\":\r\n            return {...state, subject: action.payload}\r\n        case \"SET_STARTDATE\":\r\n            return {...state, startDate: action.payload}\r\n        case \"SET_ENDDATE\":\r\n            return {...state, endDate: action.payload}\r\n        case \"SET_DURATION\":\r\n            return {...state, duration: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default quizCreatorReducer;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js",["255","256"],"import {useState, useEffect} from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel} from '@material-ui/core';\r\n\r\nconst QuizCreator = () => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.quizCreator);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\t\t// Do Simple for Check\r\n\r\n\t\t// Sending Request to backend\r\n\r\n\t\tfetch(\"/quiz/addQuiz\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(state)\r\n\t\t}).then(data => data.json().then(\r\n\t\t\tconsole.log(data)\r\n\t\t)).catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const addQuestion = () => {\r\n        dispatch({type: \"ADD_QUESTION_TEMPLATE\"});\r\n    }\r\n    const addOption = (QIndex) => {\r\n        dispatch({type: \"ADD_OPTION_TEMPLATE\", payload:{QIndex}});\r\n    }\r\n    return(\r\n        <form  onSubmit={handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\r\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_QUIZ_SUBJECT\", payload: e.target.value})}} id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-start\"\r\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\r\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_STARTDATE\", payload: new Date(e.target.value)})}}\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-end\"\r\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\r\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_ENDDATE\", payload: new Date(e.target.value)})}}\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_DURATION\", payload: e.target.value})}} type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstate.questions.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet queId = `que-${idx+1}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname={queId}\r\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\tid={queId}\r\n\t\t\t\t\t\t\t\t\t\tvalue= {val.question}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> dispatch({type: \"ADD_QUESTION\", payload: {QIndex: idx, question: e.target.value}})}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={()=>addOption(idx)}>+ Add Option</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    {\r\n\t\t\t\t\t\t\tstate.questions[idx].options.map((val, oIdx)=> {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={oIdx}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n                                        <FormControlLabel control={\r\n                                        <Checkbox checked={val.ans} onChange={()=> dispatch({type: \"SET_ANSWER\", payload: {QIndex: idx, OIndex: oIdx}})} color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                        \r\n                                        } label={\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField fullWidth label={`Option No.${oIdx+1}`} value={val.qs} onChange={(e)=> {dispatch({type:\"ADD_OPTION\", payload:{QIndex: idx, OIndex: oIdx, option: e.target.value}})}}/>\r\n\t\t\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={addQuestion}>+ Add Question</Button>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" type=\"submit\">Submit</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n    );\r\n}\r\n\r\nexport default QuizCreator;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\action\\quiz\\quiz.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js",["257"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js",["258","259"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js",["260","261"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js",["262","263"],"import {TextField, FormControl, Select, MenuItem, InputLabel, Grid, Button, Box, CircularProgress} from '@material-ui/core'\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useState} from 'react';\r\n\r\nconst CreateTeacher = () => {\r\n    const [firstName, setFName] = useState(\"\");\r\n    const [lastName, setLName] = useState(\"\");\r\n    const [middleName, setMName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"None\");\r\n    const [Class, setClass] = useState(\"None\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        setLoading(true);\r\n        setErrMessage(false);\r\n        setSuccess(false);\r\n        e.preventDefault();\r\n\r\n        const userName = lastName.toLowerCase() + \".\" + middleName.toLowerCase() + \".\" + firstName.toLowerCase();\r\n        const password = \"changeme\";\r\n        const userType = \"Teacher\";\r\n        const teacherData = {\r\n            firstName,middleName,lastName,branch\r\n        }\r\n        const studentData = {}\r\n        const reqBody = {\r\n            userName, email, password , userType, studentData , teacherData\r\n        }\r\n\r\n        console.log(JSON.stringify(reqBody));\r\n\r\n        fetch(\r\n            \"/user/register\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqBody)\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => {\r\n                console.log(JSON.stringify(data));\r\n                setLoading(false);\r\n                if(data.msg){\r\n                    setBad(true);\r\n                    setErrMessage(data.msg);\r\n                }else\r\n                    setSuccess(true);\r\n            })\r\n        ).catch((err) => {\r\n            console.error(err); \r\n            setLoading(false);\r\n            setBad(true);\r\n            setErrMessage(JSON.stringify(err));\r\n        }\r\n            );\r\n\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container style={ {flexGrow: 1, marginTop: 25, padding: 10} } spacing={2}>\r\n                    <Grid item xs={4} >\r\n                        <TextField value={firstName} onChange={(e)=> setFName(e.target.value)} fullWidth required label=\"First Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={middleName} onChange={(e)=>setMName(e.target.value)} fullWidth required label=\"Middle Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={lastName} onChange={(e)=> setLName(e.target.value) } fullWidth required label=\"Last Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                \r\n                    <Grid item xs={4}>\r\n                        <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} fullWidth required label=\"Email\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={phone} onChange={(e)=>{setPhone(e.target.value)}} type=\"number\" fullWidth required label=\"Phone Number\" variant=\"outlined\"/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl required fullWidth variant=\"outlined\">\r\n                            <InputLabel id=\"branchDD\" >Branch</InputLabel>\r\n                            <Select value={branch} onChange={(e)=>{setBranch(e.target.value)}} labelId=\"branchDD\" label=\"Branch\">\r\n                                <MenuItem value={\"biotech\"}>BioTech</MenuItem>\r\n                                <MenuItem value={\"civil\"}>Civil</MenuItem>\r\n                                <MenuItem value={\"cse\"}>CSE</MenuItem>\r\n                                <MenuItem value={\"electronics\"}>Electronics</MenuItem>\r\n                                <MenuItem value={\"mech\"}>Mechanical</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                        <Box mt={5}>\r\n                        {isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Teacher</Button>}\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Teacher Created!</Alert>:<></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTeacher;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js",["264","265"],"import {TextField,Grid,Button,Checkbox,FormControlLabel,Paper, CircularProgress} from '@material-ui/core';\r\nimport logo from './logo_trans.png';\r\nimport {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\n\r\nconst style = {\r\n                maxWidth:'40%',\r\n                minWidth:'400px',\r\n                padding:'30px' ,\r\n                margin:'auto',\r\n                marginTop:\"5vh\",\r\n                // backgroundColor:'#4c5f7a',\r\n                backgroundColor:'white',\r\n                color:'black',\r\n                textAlign:'center',\r\n                borderRadius:'10pt',\r\n                fontWeight:'bold'\r\n            };\r\n\r\nconst Login = () =>  {\r\n    \r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    function onSuccess(resData){setLoading(false);\r\n        if(resData.msg){\r\n            setBad(true);\r\n            setErrMessage(resData.msg);\r\n        }\r\n        else{\r\n            dispatch({type: \"AUTHENTICATE\", payload: resData});\r\n            history.replace(\"/home\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setBad(false);\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        // alert(userName + \" \" + password);\r\n        fetch(\r\n            \"/user/login\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(\r\n                    {\r\n                        userName,\r\n                        password,\r\n                    }\r\n                )\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => onSuccess(data))\r\n        ).catch((err) => {console.error(err)});\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} style={{height:'100vh',width:'100vw', background: 'linear-gradient(135deg, #364755 50%, #182835 50%)',position:'absolute',top:'0',left:'0'}}>\r\n            <img src={logo} style={{maxWidth:'100px'}} />\r\n            <div style={style}>\r\n                <Grid container spacing={8} alignItems=\"center\">\r\n                    <Grid item md={2} sm={true} xs={true}>\r\n                        <h1>Login</h1>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    {/* <Grid item md={3}>Username</Grid> */}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TextField onChange={(e)=> {setUserName(e.target.value)}} value={userName} id=\"usrn\" margin=\"normal\" variant=\"outlined\" label=\"Username\" type=\"text\" fullWidth required />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    {/* <Grid item md={3}>Password</Grid> */}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TextField onChange={(e)=> {setPassword(e.target.value)}} value={password} id=\"pswd\" margin=\"normal\" variant=\"outlined\" label=\"Password\" type=\"password\" fullWidth required />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" justify=\"space-between\" style={{marginTop:'5vh'}}>\r\n                    <Grid item>\r\n                        <FormControlLabel control={\r\n                            <Checkbox\r\n                                color=\"secondary\"\r\n                            />\r\n                        } label=\"Remember me\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\r\n                    <Grid item md={4} fullWidth>\r\n                        {isLoading ?\r\n                        <CircularProgress />\r\n                        :<Button  type=\"submit\" variant=\"contained\" style={{ textTransform: \"none\", backgroundColor:\"#fec14e\",color:\"white\",minWidth:\"100px\",fontWeight:'bolder',fontSize:'medium',borderRadius:'5pt'}}>Login</Button>}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\r\n                    <Grid item md={4} fullWidth>\r\n                        {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js",["266"],"import {AppBar, Box, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\n// import CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nconst CourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const oes = course.oes;\r\n    console.log(course);\r\n    return(\r\n        <div>\r\n            <AppBar>\r\n                <Toolbar stype={{backgroundColor: \"black\" }}>\r\n                {course.courseName}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid style={{marginTop: 60}} container spacing={2}>\r\n                <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                    <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:<></>}\r\n                <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                    <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:<></>}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js",["267"],{"ruleId":"268","severity":1,"message":"269","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":11},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"268","severity":1,"message":"276","line":4,"column":7,"nodeType":"270","messageId":"271","endLine":4,"endColumn":16},{"ruleId":"268","severity":1,"message":"277","line":18,"column":12,"nodeType":"270","messageId":"271","endLine":18,"endColumn":20},{"ruleId":"268","severity":1,"message":"278","line":18,"column":22,"nodeType":"270","messageId":"271","endLine":18,"endColumn":36},{"ruleId":"272","replacedBy":"279"},{"ruleId":"274","replacedBy":"280"},{"ruleId":"272","replacedBy":"281"},{"ruleId":"274","replacedBy":"282"},{"ruleId":"268","severity":1,"message":"283","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":16},{"ruleId":"268","severity":1,"message":"284","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":14},{"ruleId":"285","severity":1,"message":"286","line":86,"column":15,"nodeType":"287","endLine":86,"endColumn":74},{"ruleId":"272","replacedBy":"288"},{"ruleId":"274","replacedBy":"289"},{"ruleId":"268","severity":1,"message":"290","line":53,"column":8,"nodeType":"270","messageId":"271","endLine":53,"endColumn":17},{"ruleId":"268","severity":1,"message":"291","line":106,"column":13,"nodeType":"270","messageId":"271","endLine":106,"endColumn":18},{"ruleId":"268","severity":1,"message":"292","line":9,"column":22,"nodeType":"270","messageId":"271","endLine":9,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":17,"column":5,"nodeType":"295","endLine":17,"endColumn":7,"suggestions":"296"},{"ruleId":"268","severity":1,"message":"297","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":58,"column":17,"nodeType":"270","messageId":"300","endLine":58,"endColumn":19},{"ruleId":"268","severity":1,"message":"301","line":1,"column":9,"nodeType":"270","messageId":"271","endLine":1,"endColumn":17},{"ruleId":"268","severity":1,"message":"302","line":1,"column":19,"nodeType":"270","messageId":"271","endLine":1,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":22,"column":7,"nodeType":"295","endLine":22,"endColumn":9,"suggestions":"303"},{"ruleId":"293","severity":1,"message":"304","line":27,"column":8,"nodeType":"295","endLine":27,"endColumn":10,"suggestions":"305"},{"ruleId":"293","severity":1,"message":"306","line":80,"column":8,"nodeType":"295","endLine":80,"endColumn":10,"suggestions":"307"},{"ruleId":"268","severity":1,"message":"308","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":31},{"ruleId":"293","severity":1,"message":"309","line":21,"column":7,"nodeType":"295","endLine":21,"endColumn":9,"suggestions":"310"},{"ruleId":"268","severity":1,"message":"311","line":12,"column":12,"nodeType":"270","messageId":"271","endLine":12,"endColumn":17},{"ruleId":"268","severity":1,"message":"312","line":12,"column":19,"nodeType":"270","messageId":"271","endLine":12,"endColumn":27},{"ruleId":"268","severity":1,"message":"313","line":1,"column":57,"nodeType":"270","messageId":"271","endLine":1,"endColumn":62},{"ruleId":"285","severity":1,"message":"286","line":68,"column":13,"nodeType":"287","endLine":68,"endColumn":58},{"ruleId":"268","severity":1,"message":"314","line":11,"column":11,"nodeType":"270","messageId":"271","endLine":11,"endColumn":14},{"ruleId":"268","severity":1,"message":"314","line":11,"column":11,"nodeType":"270","messageId":"271","endLine":11,"endColumn":14},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["315"],"no-negated-in-lhs",["316"],"'useStyles' is assigned a value but never used.","'selected' is assigned a value but never used.","'updateSelected' is assigned a value but never used.",["315"],["316"],["315"],["316"],"'Practice' is defined but never used.","'CodeUI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["315"],["316"],"'questions' is assigned a value but never used.","'optId' is assigned a value but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["317"],"'AceEditor' is defined but never used.","no-redeclare","'op' is already defined.","redeclared","'useState' is defined but never used.","'useEffect' is defined but never used.",["318"],"React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["320"],"'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["321"],"'Class' is assigned a value but never used.","'setClass' is assigned a value but never used.","'Paper' is defined but never used.","'oes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},{"desc":"322","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [dispatch]",{"range":"331","text":"332"},{"range":"333","text":"332"},"Update the dependencies array to be: [props.peer]",{"range":"334","text":"335"},"Update the dependencies array to be: [roomID]",{"range":"336","text":"337"},"Update the dependencies array to be: [dispatch, user]",{"range":"338","text":"339"},[716,718],"[dispatch]",[873,875],[593,595],"[props.peer]",[2365,2367],"[roomID]",[953,955],"[dispatch, user]"]