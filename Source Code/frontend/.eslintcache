[{"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js":"1","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js":"2","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js":"3","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizExtra.js":"4","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js":"5","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js":"6","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js":"7","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js":"8","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\coding\\codingReducer.js":"9","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\coding\\codingSolution.js":"10","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js":"11","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\coding\\createCodingQuestion.js":"12","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js":"13","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js":"14","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js":"15","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizWrapper.js":"16","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"17","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js":"18","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js":"19","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodingLandingPageTeacher.js":"20","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodingLandingPageStudent.js":"21","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js":"22","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js":"23","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js":"24","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js":"25","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js":"26","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js":"27","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js":"28","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js":"29","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js":"30","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js":"31","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js":"32","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js":"33","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js":"34","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js":"35","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js":"36","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CreateCodingQuestion.js":"37","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js":"38","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js":"39","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js":"40","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js":"41","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js":"42","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js":"43","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js":"44","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js":"45","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js":"46","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"47","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js":"48","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"49","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"50","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js":"51","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodingSolutionDownload.js":"52"},{"size":1202,"mtime":1619453658080,"results":"53","hashOfConfig":"54"},{"size":1134,"mtime":1621671392506,"results":"55","hashOfConfig":"54"},{"size":4394,"mtime":1619453657919,"results":"56","hashOfConfig":"54"},{"size":641,"mtime":1619453658087,"results":"57","hashOfConfig":"54"},{"size":564,"mtime":1619453658082,"results":"58","hashOfConfig":"54"},{"size":2357,"mtime":1619453658086,"results":"59","hashOfConfig":"54"},{"size":731,"mtime":1619453658080,"results":"60","hashOfConfig":"54"},{"size":3103,"mtime":1619453658086,"results":"61","hashOfConfig":"54"},{"size":592,"mtime":1621671392476,"results":"62","hashOfConfig":"54"},{"size":2969,"mtime":1621671392489,"results":"63","hashOfConfig":"54"},{"size":232,"mtime":1619453658083,"results":"64","hashOfConfig":"54"},{"size":3323,"mtime":1621671392505,"results":"65","hashOfConfig":"54"},{"size":253,"mtime":1619453658085,"results":"66","hashOfConfig":"54"},{"size":12508,"mtime":1621671392434,"results":"67","hashOfConfig":"54"},{"size":537,"mtime":1619453657938,"results":"68","hashOfConfig":"54"},{"size":1394,"mtime":1619453658055,"results":"69","hashOfConfig":"54"},{"size":5187,"mtime":1619453658054,"results":"70","hashOfConfig":"54"},{"size":4463,"mtime":1619453658065,"results":"71","hashOfConfig":"54"},{"size":2150,"mtime":1619453658035,"results":"72","hashOfConfig":"54"},{"size":1702,"mtime":1621671392448,"results":"73","hashOfConfig":"54"},{"size":4403,"mtime":1621671392437,"results":"74","hashOfConfig":"54"},{"size":8942,"mtime":1621671392469,"results":"75","hashOfConfig":"54"},{"size":3446,"mtime":1619453657982,"results":"76","hashOfConfig":"54"},{"size":276,"mtime":1619453657969,"results":"77","hashOfConfig":"54"},{"size":1749,"mtime":1619453658064,"results":"78","hashOfConfig":"54"},{"size":8423,"mtime":1619453658028,"results":"79","hashOfConfig":"54"},{"size":6633,"mtime":1619453658028,"results":"80","hashOfConfig":"54"},{"size":5898,"mtime":1619453658029,"results":"81","hashOfConfig":"54"},{"size":5569,"mtime":1621671392454,"results":"82","hashOfConfig":"54"},{"size":1968,"mtime":1619453658027,"results":"83","hashOfConfig":"54"},{"size":5867,"mtime":1619453658027,"results":"84","hashOfConfig":"54"},{"size":5745,"mtime":1619453657945,"results":"85","hashOfConfig":"54"},{"size":2430,"mtime":1619453658026,"results":"86","hashOfConfig":"54"},{"size":8873,"mtime":1619453658030,"results":"87","hashOfConfig":"54"},{"size":2796,"mtime":1619453658015,"results":"88","hashOfConfig":"54"},{"size":2244,"mtime":1619453657939,"results":"89","hashOfConfig":"54"},{"size":13354,"mtime":1621671392452,"results":"90","hashOfConfig":"54"},{"size":1350,"mtime":1619453658031,"results":"91","hashOfConfig":"54"},{"size":23081,"mtime":1619453658071,"results":"92","hashOfConfig":"54"},{"size":2836,"mtime":1619453657943,"results":"93","hashOfConfig":"54"},{"size":2864,"mtime":1619453657953,"results":"94","hashOfConfig":"54"},{"size":1311,"mtime":1619453658052,"results":"95","hashOfConfig":"54"},{"size":6039,"mtime":1621671392467,"results":"96","hashOfConfig":"54"},{"size":318,"mtime":1619453657937,"results":"97","hashOfConfig":"54"},{"size":3751,"mtime":1619453657956,"results":"98","hashOfConfig":"54"},{"size":145,"mtime":1611810752589,"results":"99","hashOfConfig":"54"},{"size":1134,"mtime":1619453658073,"results":"100","hashOfConfig":"54"},{"size":4961,"mtime":1621671392472,"results":"101","hashOfConfig":"54"},{"size":1338,"mtime":1611939528433,"results":"102","hashOfConfig":"54"},{"size":2040,"mtime":1619453658072,"results":"103","hashOfConfig":"54"},{"size":795,"mtime":1611939745623,"results":"104","hashOfConfig":"54"},{"size":1149,"mtime":1621671392449,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"f9pvug",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js",[],["225","226"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js",["227"],"import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport QuizWrapper from \"./components/quiz/QuizWrapper\";\r\nimport HomePage from './components/Home/HomePage'\r\nimport CodeUI from './components/Coding/CodeUI';\r\nimport CreateCodingQuestion from './components/Coding/CreateCodingQuestion';\r\nimport Creator from './components/quiz/QuizCreation/QuizCreator'\r\nimport CreateRoom from './components/OE/CreateRoom'\r\nimport Room from \"./components/OE/Room\";\r\nimport AdminHome from \"./components/admin/AdminHome\"\r\nimport CreateStudent from './components/admin/CreateStudent/CreateStudent'\r\nimport CreateTeacher from './components/admin/CreateTeacher/CreateTeacher'\r\nimport CreateCourse from './components/admin/CreateCourse/CreateCourse'\r\nimport AssignCourse from './components/admin/CreateCourse/AssignCourse'\r\nimport Login from './components/Login/Login'\r\nimport CourseHome from './components/Home/Student/CourseHome'\r\nimport TeacherCourseHome from './components/Home/Teacher/TeacherCourse'\r\nimport QuizLandingPage from './components/quiz/QuizLandingPage';\r\nimport TempLanding from './components/quiz/TempLanding';\r\nimport TeacherQuizLanding from './components/quiz/TeacherQuizLanding';\r\nimport StudentProfile from './components/Profile/StudentProfile';\r\nimport TeacherProfile from './components/Profile/TeacherProfile';\r\nimport { Alert } from '@material-ui/lab';\r\nimport MalpracticeGallary from './components/quiz/MalpracticeGallary';\r\nimport CodingLandingPageStudent from './components/Coding/CodingLandingPageStudent';\r\nimport CodingLandingPageTeacher from './components/Coding/CodingLandingPageTeacher';\r\n\r\nimport Practice from './components/practice/practice';\r\nfunction App() {\r\n\treturn(\r\n\t\t<Router>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login} />\r\n                <Route path=\"/home\" exact component={HomePage} />\r\n\r\n                {/* QUIZ */}\r\n                <Route path=\"/course/quiz/:quizID\" exact component={QuizLandingPage} />\r\n                <Route path=\"/course/quiz/:quizID/:userID\" exact component={TempLanding} />\r\n                <Route path=\"/quiz/:quizID/:userID\" exact component={QuizWrapper} />\r\n                <Route path=\"/teacher/quiz/:quizID\" exact component={TeacherQuizLanding} />\r\n                <Route path=\"/teacher/quiz/malpractices/:quizID/:userID\" exact component={MalpracticeGallary} />\r\n\r\n                {/* Student */}\r\n                <Route path=\"/student/profile\" exact component={StudentProfile}/>\r\n                <Route path=\"/course/:courseName\" exact component={CourseHome} />\r\n                <Route path=\"/student/poe/:codeID\" exact component={CodingLandingPageStudent} />\r\n                <Route path=\"/student/poe/:codeID/:userID\" exact component={CodeUI} />\r\n\r\n                {/* Video Calling */}\r\n                <Route path=\"/OE\" exact component={CreateRoom}/>\r\n                <Route path=\"/room/:roomID\" component={Room}/>\r\n\r\n                {/* Create POE */}\r\n                <Route path=\"/teacher/createPOE/:courseID\" exact component={CreateCodingQuestion} />\r\n                <Route path=\"/code\" exact component={CodeUI} />\r\n                <Route path=\"/test\" exact component={Practice} />\r\n\r\n                {/* Admin */}\r\n                <Route path=\"/admin\" exact component={AdminHome} />\r\n                <Route path=\"/createStudent\" exact component={CreateStudent} />\r\n                <Route path=\"/createTeacher\" exact component={CreateTeacher} />\r\n                <Route path=\"/createCourse\" exact component={CreateCourse} />\r\n                <Route path=\"/assignCourse\" exact component={AssignCourse} />\r\n\r\n                {/* Teacher */}\r\n                <Route path=\"/teacher/profile\" exact component={TeacherProfile}/>\r\n                <Route path=\"/course/teacher/:courseName\" exact component={TeacherCourseHome} />\r\n                <Route path=\"/teacher/createQuiz/:courseID\" exact component={Creator} />\r\n                <Route path=\"/teacher/poe/:codeID\" exact component={CodingLandingPageTeacher} />\r\n            </Switch>\r\n        </Router>\r\n\t);\r\n}\r\n\r\nconst CommingSoon = () => {\r\n    return(\r\n        <div className=\"ch-container\">\r\n    <Alert style={{\r\n        position: 'absolute', left: '50%', top: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }} severity=\"error\" > 404 Not Found </Alert>\r\n  </div>\r\n            \r\n    );\r\n}\r\nexport default App;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizExtra.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js",["228"],"const initialState = {\r\n    courseID: \"\",\r\n    subject: null,\r\n    proctored: false,\r\n    startDate: null,\r\n    endDate: null,\r\n    duration: null,\r\n    threshold: null,\r\n    questions: []\r\n}\r\n\r\nvar questionState = {\r\n    qNo: null,\r\n    qType: 1,\r\n    question: \"\",\r\n    options: []\r\n}\r\n\r\nconst optionsState = {\r\n    qs: \"\",\r\n    ans: false\r\n};\r\n\r\n\r\n\r\nvar QIndex, OIndex, QArray;\r\n\r\nconst quizCreatorReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_QUIZCOURSE\":\r\n            return {...state, courseID: action.payload}\r\n\r\n        case \"ADD_QUESTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            const newQuestionState = {...questionState, qNo: QArray.length+1 }\r\n            QArray.push(newQuestionState)\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_QUESTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            QArray[QIndex].question = action.payload.question;\r\n            return {...state, questions: QArray}\r\n\r\n        case \"ADD_OPTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            var op = QArray[action.payload.QIndex]\r\n            console.log(\"REDUCER\", op.options.length)\r\n            if(op.options.length === 0)\r\n                op.options = [...op.options, {qs: \"\",ans: true}]\r\n            else\r\n                op.options = [...op.options, {qs: \"\",ans: false}]\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_OPTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            QArray[QIndex].options[OIndex] = {...optionsState, qs: action.payload.option}\r\n            return {...state, questions: QArray}\r\n        \r\n        case 'SET_ANSWER':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            var op = QArray[QIndex]\r\n            \r\n            if(op.options[OIndex].ans){\r\n                \r\n                QArray[QIndex].options[OIndex].ans = false;\r\n                return {...state, questions: QArray}\r\n            }\r\n            op.options.forEach(O => {\r\n                if(O.ans){\r\n                    O.ans = false;\r\n                }\r\n            });\r\n            \r\n            QArray[QIndex].options[OIndex] = {...op.options[OIndex], ans: true}\r\n            return {...state, questions: QArray}\r\n        \r\n        case \"SET_QUIZ_SUBJECT\":\r\n            return {...state, subject: action.payload}\r\n        case \"SET_STARTDATE\":\r\n            return {...state, startDate: action.payload}\r\n        case \"SET_ENDDATE\":\r\n            return {...state, endDate: action.payload}\r\n        case \"SET_DURATION\":\r\n            return {...state, duration: action.payload}\r\n        case \"SET_THRESHOLD\":\r\n            return {...state, threshold: action.payload}\r\n        case \"RESET_QUIZCREATION\":\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default quizCreatorReducer;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\coding\\codingReducer.js",["229"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\coding\\codingSolution.js",["230","231"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\coding\\createCodingQuestion.js",["232"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js",["233","234","235","236","237","238","239","240","241"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizWrapper.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js",["242"],"import { Box, Button, Grid, AppBar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nconst QuizLandingPage = (props) => {\r\n    const quizID = props.match.params.quizID;\r\n    //console.log(quizID)\r\n    const [quizData,setQuizData] = useState({})\r\n    const [isAvailable, setAvailable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const quizState = useSelector(state => state.quiz);\r\n    const fromStore = quizState.userChoices;\r\n    const userID = useSelector(state => state.auth.user.id);\r\n    const [status, setStatus] = useState(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch({type: \"RESET_QUIZEXTRA\"})\r\n            fetch(`/quiz/getQuiz/${quizID}`).then(\r\n                data => data.json().then(newData => {\r\n                    //console.log(JSON.stringify(newData));\r\n                    setQuizData(newData);\r\n                    const endDate = new Date(newData.endDate).getTime();\r\n                    const startDate = new Date(newData.startDate).getTime();\r\n                    console.log();\r\n                    if(startDate > Date.now() || endDate < Date.now())\r\n                    {\r\n                        setAvailable(false);\r\n                    }else{\r\n                        setAvailable(true);\r\n                    }\r\n                })\r\n            );\r\n            \r\n            fetch('/quiz/quizStatusCheck',{\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({qID: quizID, userID})\r\n             }).then(data => data.json().then(newData => {\r\n                 setStatus(newData.status);\r\n             })).catch(err => console.log(err))\r\n        }, []\r\n        );\r\n    const takeQuiz = () => {\r\n        // Save Current Quiz Data to Store\r\n        dispatch({type:\"SET_QUIZDATA\", payload: quizData});\r\n\r\n        // Check if UserData StartTime Exists\r\n        // If store does not have any saved Instances of userChoices\r\n        if(!fromStore){\r\n\r\n            //Check from Database\r\n            console.log(\"database Check\")\r\n            fetch(`/quiz/userChoices/${userID}/${quizID}`).then(data=>{\r\n                data.json().then(newData => {\r\n                    // No Saved Instance on Database\r\n                    // New Attempt starts\r\n                    if(newData.msg){\r\n\r\n                        const newUserChoices = {\r\n                                userID: userID,\r\n                                quizID: quizID,\r\n\t\t\t                    attempted: [],\r\n    \t\t                    flagged: [],\r\n                                userChoices: {},\r\n                                startedAt: null,\r\n                                questions: quizData,\r\n                                warnings: 0,\r\n                        }\r\n                        dispatch({type: \"SAVE_USERCHOICES\", payload: newUserChoices})\r\n                        history.push(`${quizID}/${userID}`);\r\n\r\n\r\n                    }\r\n                    // Saved Instance on Database\r\n                    else{\r\n                        \r\n                        console.log(JSON.stringify(newData));\r\n                        const questions = newData.questions[0];\r\n                        newData = {...newData, questions: questions};\r\n                        // Set Start Date from Database\r\n                        dispatch({type: \"SAVE_USERCHOICES\", payload: newData})\r\n                        history.push(`${quizID}/${userID}`);\r\n                        \r\n                        \r\n\r\n                    }\r\n                })\r\n            });\r\n        }else{\r\n            console.log(\"From Store\");\r\n            console.log(JSON.stringify(quizState));\r\n            history.push(`${quizID}/${userID}`);\r\n        }\r\n    }\r\n    return(\r\n        <div className='ch-container'>\r\n        <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            Proctored Quiz\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n        </div>\r\n    <Grid className='cor' style={{margin:'0'}} container >\r\n            <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                <Box p={2} boxShadow={5} borderBottom={1}>\r\n                    {quizData.subject}\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                {\r\n                  status || !isAvailable ?<Alert severity='warning'> Quiz Not Available </Alert>\r\n                  :<Button variant='contained' color='primary' onClick={takeQuiz}>Take Quiz</Button>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n  </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default QuizLandingPage;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js",["243"],"import {useHistory } from \"react-router-dom\";\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {Button, CardContent, Card, Typography, Grid} from '@material-ui/core';\r\nimport Webcam from \"react-webcam\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TempLanding = (props) => {    \r\n    const quizData = useSelector(state => state.quiz.questions)\r\n    const webCamRef = useRef(null);\r\n    const videoConstraints = {facingMode: 'user'};\r\n    const [camActive, setCamActive] = useState(false);\r\n    const history = useHistory();\r\n    const quizPage = `/quiz/${props.match.params.quizID}/${props.match.params.userID}`;\r\n\r\n    useEffect(()=>{\r\n        navigator.mediaDevices.getUserMedia({video: true}).then(\r\n            (stream) => {\r\n                setCamActive(true);\r\n                stream.oninactive = () => {history.go(0)}\r\n                stream.onremovetrack = () => {history.go(0)}\r\n            }\r\n        ).catch((err)=> console.log(err));\r\n    },[]);\r\n    return(\r\n        \r\n\r\n        <>\r\n        <Grid container spacing={2}>\r\n\r\n                <Grid item xs={6} style={{marginTop:100}}>\r\n                    <Card style={{marginLeft:150,marginRight:100,background:'#1e88e5'}}>\r\n                        <CardContent style={{marginTop:15,color:'white'}}>\r\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:800}}>\r\n                            Subject :\r\n                        </Typography>\r\n\r\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:500,marginLeft:10}}>\r\n                            {quizData.subject}\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:800}}>\r\n                            Time :\r\n                        </Typography>\r\n\r\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:500,marginLeft:10}}>\r\n                            {quizData.duration} Minutes\r\n                        </Typography>\r\n                        </CardContent>\r\n                        </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                        <Webcam  style={{width:550,marginTop:20}}\r\n                        audio={false}\r\n                        ref={webCamRef}\r\n                        videoConstraints={videoConstraints}\r\n                        />\r\n                        <br/>\r\n                        {\r\n                    camActive?<Button variant='contained' color='primary' onClick={()=> {\r\n                        history.replace(quizPage);\r\n                    }} style={{background:'#03A9F4',color:'white',marginTop:10}}>Take Quiz</Button>\r\n                    :<Alert severity=\"error\"> Please Allow Camera Access</Alert>\r\n                }\r\n                        \r\n                        {/* Capture Button can be triggered in Attempt quiz Button\r\n                        <button onClick={capture}>Capture photo</button> */}\r\n                \r\n                </Grid>\r\n                <hr/>\r\n                <Grid item xs={12} style={{background:'#274056',paddingBottom:'25%'}}>\r\n                    <br/>\r\n\r\n                        <Typography display=\"inline\" variant=\"h5\" style={{fontWeight:600,marginLeft:200,color:'white'}}>\r\n                            Instructions :\r\n                        </Typography>\r\n                        <Typography style={{fontWeight:300,marginLeft:215,color:'white'}}>\r\n                            <ul>\r\n                            <li>Select an answer for every question. Unanswered questions will be scored as incorrect.</li>\r\n                            <li>Timing - You will need to complete each of your attempts in one sitting, as you are allotted {quizData.duration} minutes to complete each attempt.</li>\r\n                            <li>Answers - You may review your answer-choices and compare them to the correct answers after your final attempt.</li>\r\n                            <li>To start, click the \"Take the Quiz\" button. When finished, click the \"Submit Quiz\" button.</li>\r\n                            <li>Click on the Submit button at the bottom of the page to have your answers graded.</li>\r\n                            </ul>\r\n                        </Typography>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default TempLanding;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js",["244"],"import { CircularProgress, Grid } from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst MalpracticeGallary = (props) => {\r\n    const quizID =  props.match.params.quizID;\r\n    const userID =  props.match.params.userID;\r\n    const [images, setImages] = useState([])\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [err,setErr] = useState(false);\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        // Query Data base for Images\r\n        fetch(`/quiz/malpracticeLog/${userID}/${quizID}`).then(\r\n            data => {\r\n                data.json().then(resData =>{\r\n                    setLoading(false);\r\n                    if(data.msg){\r\n                        setErr(true);\r\n                    }else{\r\n                        setImages(resData);\r\n                        console.log(JSON.stringify(resData))\r\n                    }\r\n                })\r\n            }\r\n        ).catch(err => {\r\n            setLoading(false);\r\n            setErr(true);\r\n            console.error(err);\r\n        })\r\n    },[]);\r\n    if(isLoading)\r\n        return(\r\n            <div className=\"center\">\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    else if(err)\r\n            return(\r\n                <Alert onClose={()=>{history.go(-1)}} severity=\"error\">\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    Unauthorized Access or Server Error\r\n                </Alert>\r\n            );\r\n    else\r\n    return(\r\n        <Grid container>\r\n            {\r\n                images.length === 0? <Alert severity=\"info\" ><AlertTitle>Info</AlertTitle>No Images Present</Alert>:\r\n                images.map((img) => {\r\n                    const imgBuffer = Buffer.from(img.image.data);\r\n                    return(\r\n                        <Grid item xs={4}>\r\n                            <img src={imgBuffer} alt=\"mal\"/>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MalpracticeGallary;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodingLandingPageTeacher.js",["245"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodingLandingPageStudent.js",["246","247","248"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js",["249"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js",["250","251"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js",["252"],"import { AppBar, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomBox from '../Helper/CustomBox';\r\nimport QuizDownload from './QuizDownload';\r\nconst TeacherQuizLanding = (props) => {\r\n    const quizId = props.match.params.quizID;\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [subject, setSubject] = useState(null);\r\n    useEffect( () => {\r\n        fetch(`/quiz/getAll/${quizId}`)\r\n         .then(data =>  data.json().then(res => {setQuizData(res);\r\n         setSubject(res[0].quizName);\r\n         }))\r\n         .catch(err => console.log(err));\r\n     },[]);\r\n    const quizObj =  useSelector(state => state.currentCourse.quizes);\r\n    console.log(quizObj);\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {quizObj[0].subject}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    <Grid item xs={2}>\r\n                        <QuizDownload quizData={quizData} subject={subject} />\r\n                    </Grid>\r\n                    <Grid>\r\n                        <CustomBox innerText=\"Delete Quiz\" />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherQuizLanding;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js",["253","254"],"import {TextField, FormControl, Select, MenuItem, InputLabel, Grid, Button, Box, CircularProgress, Container, AppBar} from '@material-ui/core'\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useState} from 'react';\r\n\r\nconst CreateTeacher = () => {\r\n    const [firstName, setFName] = useState(\"\");\r\n    const [lastName, setLName] = useState(\"\");\r\n    const [middleName, setMName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"None\");\r\n    const [Class, setClass] = useState(\"None\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        setLoading(true);\r\n        setErrMessage(false);\r\n        setSuccess(false);\r\n        e.preventDefault();\r\n\r\n        const userName = lastName.toLowerCase() + \".\" + middleName.toLowerCase() + \".\" + firstName.toLowerCase();\r\n        const password = \"changeme\";\r\n        const userType = \"Teacher\";\r\n        const teacherData = {\r\n            firstName,middleName,lastName,branch\r\n        }\r\n        const studentData = {}\r\n        const reqBody = {\r\n            userName, email, password , userType, studentData , teacherData\r\n        }\r\n\r\n        console.log(JSON.stringify(reqBody));\r\n\r\n        fetch(\r\n            \"/user/register\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqBody)\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => {\r\n                console.log(JSON.stringify(data));\r\n                setLoading(false);\r\n                if(data.msg){\r\n                    setBad(true);\r\n                    setErrMessage(data.msg);\r\n                }else\r\n                    setSuccess(true);\r\n            })\r\n        ).catch((err) => {\r\n            console.error(err); \r\n            setLoading(false);\r\n            setBad(true);\r\n            setErrMessage(JSON.stringify(err));\r\n        }\r\n            );\r\n\r\n        \r\n        \r\n    }\r\n    return(\r\n        <Container maxWidth=\"xlg\">\r\n            <AppBar position='static' className='Appbar'>\r\n                <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                    <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                        Create Teacher\r\n                    </Grid>\r\n                </Grid>\r\n            </AppBar>\r\n            <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container style={ {flexGrow: 1, marginTop: 25, padding: 10} } spacing={2}>\r\n                        <Grid item xs={4} >\r\n                            <TextField value={firstName} onChange={(e)=> setFName(e.target.value)} fullWidth required label=\"First Name\" variant=\"outlined\"/>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField value={middleName} onChange={(e)=>setMName(e.target.value)} fullWidth required label=\"Middle Name\" variant=\"outlined\"/>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField value={lastName} onChange={(e)=> setLName(e.target.value) } fullWidth required label=\"Last Name\" variant=\"outlined\"/>\r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={4}>\r\n                            <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} fullWidth required label=\"Email\" variant=\"outlined\"/>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField value={phone} onChange={(e)=>{setPhone(e.target.value)}} type=\"number\" fullWidth required label=\"Phone Number\" variant=\"outlined\"/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4}>\r\n                            <FormControl required fullWidth variant=\"outlined\">\r\n                                <InputLabel id=\"branchDD\" >Branch</InputLabel>\r\n                                <Select value={branch} onChange={(e)=>{setBranch(e.target.value)}} labelId=\"branchDD\" label=\"Branch\">\r\n                                    <MenuItem value={\"biotech\"}>BioTech</MenuItem>\r\n                                    <MenuItem value={\"civil\"}>Civil</MenuItem>\r\n                                    <MenuItem value={\"cse\"}>CSE</MenuItem>\r\n                                    <MenuItem value={\"electronics\"}>Electronics</MenuItem>\r\n                                    <MenuItem value={\"mech\"}>Mechanical</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid container item justify=\"center\" alignItems=\"center\">\r\n                            <Box mt={5}>\r\n                            {isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Teacher</Button>}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                                {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                        </Grid>\r\n                        <Grid container item justify=\"center\" alignItems=\"center\">\r\n                                {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Teacher Created!</Alert>:<></>}\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreateTeacher;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js",["255","256","257","258","259"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js",["260","261"],"import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst TeacherCourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const oes = course.oes;\r\n    const history = useHistory();\r\n    console.log(course);\r\n    return(\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {course.courseName}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            \r\n            <Grid className='cor' style={{margin:'0'}} container>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\r\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\r\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n                    <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\r\n                </Grid>\r\n                <Box border={1}/>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12} style={{width:'50%'}}><Alert severity=\"error\">No Active Practicals</Alert></Grid>:\r\n                poes.map((poeObj)=> <CustomBox key={poeObj.poeID} innerText={poeObj.title} onClick={()=> {history.push(`/teacher/poe/${poeObj.poeID}`)}}/>)}\r\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n                   <Button onClick={()=>{  history.push(`/teacher/createPOE/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\r\n                 </Grid>\r\n                <Box border={1} />\r\n                \r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeacherCourseHome;\r\n\r\n\r\n// import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\r\n// import { useSelector } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom'\r\n// // import CustomBox from '../../Helper/CustomBox'\r\n// import {Alert} from '@material-ui/lab'\r\n// import CustomBox from '../../Helper/CustomBox';\r\n// const TeacherCourseHome = (props) => {\r\n//     const courseID = props.match.params.courseName;\r\n//     const courses =  useSelector(state => state.course);\r\n//     const course = courses.filter((e)=> e._id === courseID)[0]\r\n//     const quizes = course.quizes;\r\n//     const poes = course.poes;\r\n//     const oes = course.oes;\r\n//     const history = useHistory();\r\n//     console.log(course);\r\n//     return(\r\n//         <div>\r\n//             <AppBar>\r\n//                 <Toolbar stype={{backgroundColor: \"black\" }}>\r\n//                 {course.courseName}\r\n//                 </Toolbar>\r\n//             </AppBar>\r\n//             <Grid style={{marginTop: 60}} container spacing={2}>\r\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\r\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n//                         Quizes\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\r\n//                 quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\r\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n//                     <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\r\n//                 </Grid>\r\n//                 <Box border={1}/>\r\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\r\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n//                         Practicals\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Practicals</Alert></Grid>:<></>}\r\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n//                     <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\r\n//                 </Grid>\r\n//                 <Box border={1} />\r\n                \r\n//             </Grid>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default TeacherCourseHome;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js",["262"],"import {useState, useEffect} from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel, CircularProgress, AppBar, Container} from '@material-ui/core';\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Practice = (props) => {\r\n    const dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n    const state = useSelector(state => state.quizCreator);\r\n\tconst courseID = props.match.params.courseID;\r\n\tconst [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\tconsole.log(courseID);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\t\tsetBad(false);\r\n\t\tsetSuccess(false);\r\n\t\tsetLoading(true);\r\n\t\tsetErrMessage(\"\");\r\n\t\t// Do Simple form Check\r\n\r\n\t\tdispatch({type: \"SET_QUIZCOURSE\", payload: courseID})\r\n\r\n\t\tconsole.log(JSON.stringify(state));\r\n\r\n\t\tfetch(\"/quiz/addQuiz\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(state)\r\n\t\t}).then(data => data.json().then( (newData)=>\r\n\t\t\t{\r\n\t\t\t\tconsole.log(JSON.stringify(newData));\r\n\t\t\t\tif(newData.msg){\r\n\t\t\t\t\tsetBad(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetErrMessage(newData.msg);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tsetSuccess(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)).catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const addQuestion = () => {\r\n        dispatch({type: \"ADD_QUESTION_TEMPLATE\"});\r\n    }\r\n    const addOption = (QIndex) => {\r\n        dispatch({type: \"ADD_OPTION_TEMPLATE\", payload:{QIndex}});\r\n    }\r\n    return(\r\n        <>\r\n            <div style={{padding:'12px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            Quiz Creation\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            <Container maxWidth=\"xlg\">\r\n                <form  onSubmit={handleSubmit} noValidate autoComplete=\"off\" center=\"true\">\r\n                        <Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n                            <Grid item xs={12}>\r\n                                <TextField onChange = {(e)=> {dispatch({type:\"SET_QUIZ_SUBJECT\", payload: e.target.value})}} id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField fullWidth\r\n                                    id=\"datetime-start\"\r\n                                    label=\"Start Date Time\"\r\n                                    type=\"datetime-local\"\r\n                                    defaultValue=\"2017-05-24T00:00\"\r\n                                    onChange = {(e)=> {dispatch({type:\"SET_STARTDATE\", payload: new Date(e.target.value)})}}\r\n                                    InputLabelProps={{\r\n                                    shrink: true,}}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField fullWidth\r\n                                    id=\"datetime-end\"\r\n                                    label=\"End Date Time\"\r\n                                    type=\"datetime-local\"\r\n                                    defaultValue=\"2020-01-24T00:00\"\r\n                                    onChange = {(e)=> {dispatch({type:\"SET_ENDDATE\", payload: new Date(e.target.value)})}}\r\n                                    InputLabelProps={{\r\n                                    shrink: true,}}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField onChange = {(e)=> {dispatch({type:\"SET_DURATION\", payload: e.target.value})}} type=\"number\" id=\"dur\" label=\"Duration\" variant=\"outlined\" fullWidth helperText=\"Quiz Duration in Minutes\"/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField onChange = {(e)=> {dispatch({type:\"SET_THRESHOLD\", payload: e.target.value})}} type=\"number\" id=\"threshold\" label=\"Threshold\" variant=\"outlined\" fullWidth helperText=\"Threshold is Number of Warnings allowed for Students\"/>\r\n                            </Grid>\r\n                                {\r\n                                    state.questions.map((val, idx)=> {\r\n                                        let queId = `que-${idx+1}`\r\n                                        return (\r\n                                            <Grid item xs={10}>\r\n                                            <div key={idx}>\r\n                                            <Grid container spacing={3} alignItems=\"center\">\r\n                                                <Grid item xs={10}><TextField fullWidth\r\n                                                label={\"Question#\"+idx}\r\n                                                type=\"text\"\r\n                                                name={queId}\r\n                                                data-id={idx}\r\n                                                id={queId}\r\n                                                value= {val.question}\r\n                                                onChange = {(e)=> dispatch({type: \"ADD_QUESTION\", payload: {QIndex: idx, question: e.target.value}})}\r\n                                                className=\"question-text\"\r\n                                                variant=\"outlined\"\r\n                                                />\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                <Button label=\"+Add Option\" variant=\"outlined\" onClick={()=>addOption(idx)}>+ Add Option</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            </div>\r\n                                            {\r\n                                    state.questions[idx].options.map((val, oIdx)=> {\r\n                                        \r\n                                        return (\r\n                                            <div key={oIdx}>\r\n                                                <Grid item xs={2}>\r\n                                                <FormControlLabel control={\r\n                                                <Checkbox checked={val.ans} onChange={()=> dispatch({type: \"SET_ANSWER\", payload: {QIndex: idx, OIndex: oIdx}})} color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                                \r\n                                                } label={\r\n                                                    <TextField fullWidth label={`Option No.${oIdx+1}`} value={val.qs} onChange={(e)=> {dispatch({type:\"ADD_OPTION\", payload:{QIndex: idx, OIndex: oIdx, option: e.target.value}})}}/>\r\n                                                } />\r\n                                                    \r\n                                                </Grid>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                            </Grid>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                                <Button variant=\"outlined\" onClick={addQuestion}>+ Add Question</Button>\r\n                            <Grid item xs={12}>\r\n                            {isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Quiz</Button>}\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                                    {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                            </Grid>\r\n                            <Grid container item justify=\"center\" alignItems=\"center\">\r\n                                    {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Quiz Created!</Alert>:<></>}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Container>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default Practice;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js",["263","264"],"import {AppBar, Box, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router';\r\nconst CourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const history = useHistory();\r\n    const oes = course.oes;\r\n    return(\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {course.courseName}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            <Grid className='cor' style={{margin:'0'}} container>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:\r\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`quiz/${quizObj.quizID}`)}}/>)}\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>\r\n                :poes.map((poeObj)=> <CustomBox key={poeObj.poeID} innerText={poeObj.title} onClick={()=> {history.push(`/student/poe/${poeObj.poeID}`)}}/>)}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseHome;\r\n\r\n\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CreateCodingQuestion.js",["265","266"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js",["267","268"],"import { AppBar, Grid } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport CustomBox from '../../Helper/CustomBox';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {useEffect,useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\r\n\r\nconst StudentHome = () => {\r\n    const studentData = useSelector(state => state.auth.studentDoc);\r\n    const branch = studentData.branch;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const sem = studentData.sem;\r\n    const Class = studentData.Class;\r\n    const[courseList, setCourseList] = useState([])\r\n    useEffect(()=>{\r\n        fetch('/course/student/getAll',{\r\n           method: \"POST\",\r\n           mode: 'cors',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify({branch,Class,sem})\r\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n                <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\r\n                                <ProfileMenu />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    {\r\n                        courseList.map((val,idx) => {\r\n                            return(\r\n                                <Grid item xs={4} key={idx}>\r\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\r\n                                        history.push(`/course/${val._id}`)\r\n                                    }}/>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                    \r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js",["269","270","271","272"],"import { AppBar, Toolbar, Card, Grid } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport CustomBox from '../../Helper/CustomBox';\r\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\r\n\r\n\r\nconst TeacherHome = () => {\r\n    const user = useSelector(state => state.auth.user)\r\n    const[courseList, setCourseList] = useState([])\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        const teacherID = user.teacherData;\r\n        console.log(JSON.stringify(user))\r\n        fetch('/teacher/getAllCourses',{\r\n           method: \"POST\",\r\n           mode: 'cors',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify({teacherID})\r\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n                <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\r\n                                <ProfileMenu />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    {\r\n                        courseList.map((val,idx) => {\r\n                            return(\r\n                                <Grid item xs={4} key={idx}>\r\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\r\n                                        dispatch({type: \"SET_CURRENT_COURSE\", payload: val});\r\n                                        history.push(`/course/teacher/${val._id}`);\r\n                                    }}/>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js",["273","274","275","276"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js",["277"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js",[],["278","279"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodingSolutionDownload.js",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":74,"column":7,"nodeType":"286","messageId":"287","endLine":74,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":67,"column":17,"nodeType":"286","messageId":"290","endLine":67,"endColumn":19},{"ruleId":"284","severity":1,"message":"291","line":11,"column":5,"nodeType":"286","messageId":"287","endLine":11,"endColumn":17},{"ruleId":"292","severity":1,"message":"293","line":8,"column":5,"nodeType":"294","messageId":"295","endLine":8,"endColumn":14},{"ruleId":"292","severity":1,"message":"296","line":9,"column":5,"nodeType":"294","messageId":"295","endLine":9,"endColumn":13},{"ruleId":"284","severity":1,"message":"297","line":23,"column":7,"nodeType":"286","messageId":"287","endLine":23,"endColumn":16},{"ruleId":"292","severity":1,"message":"298","line":27,"column":3,"nodeType":"294","messageId":"295","endLine":27,"endColumn":9},{"ruleId":"284","severity":1,"message":"299","line":52,"column":9,"nodeType":"286","messageId":"287","endLine":52,"endColumn":20},{"ruleId":"284","severity":1,"message":"300","line":52,"column":22,"nodeType":"286","messageId":"287","endLine":52,"endColumn":36},{"ruleId":"284","severity":1,"message":"301","line":67,"column":8,"nodeType":"286","messageId":"287","endLine":67,"endColumn":22},{"ruleId":"284","severity":1,"message":"302","line":68,"column":18,"nodeType":"286","messageId":"287","endLine":68,"endColumn":29},{"ruleId":"303","severity":1,"message":"304","line":104,"column":74,"nodeType":"305","messageId":"306","endLine":104,"endColumn":75},{"ruleId":"307","severity":1,"message":"308","line":140,"column":13,"nodeType":"309","messageId":"310","endLine":140,"endColumn":145},{"ruleId":"284","severity":1,"message":"311","line":187,"column":8,"nodeType":"286","messageId":"287","endLine":187,"endColumn":16},{"ruleId":"312","severity":1,"message":"313","line":374,"column":5,"nodeType":"314","endLine":374,"endColumn":66},{"ruleId":"315","severity":1,"message":"316","line":48,"column":12,"nodeType":"317","endLine":48,"endColumn":14,"suggestions":"318"},{"ruleId":"315","severity":1,"message":"319","line":24,"column":7,"nodeType":"317","endLine":24,"endColumn":9,"suggestions":"320"},{"ruleId":"315","severity":1,"message":"321","line":32,"column":7,"nodeType":"317","endLine":32,"endColumn":9,"suggestions":"322"},{"ruleId":"315","severity":1,"message":"323","line":15,"column":8,"nodeType":"317","endLine":15,"endColumn":10,"suggestions":"324"},{"ruleId":"284","severity":1,"message":"325","line":13,"column":12,"nodeType":"286","messageId":"287","endLine":13,"endColumn":23},{"ruleId":"284","severity":1,"message":"326","line":13,"column":25,"nodeType":"286","messageId":"287","endLine":13,"endColumn":37},{"ruleId":"315","severity":1,"message":"327","line":63,"column":7,"nodeType":"317","endLine":63,"endColumn":9,"suggestions":"328"},{"ruleId":"284","severity":1,"message":"329","line":1,"column":19,"nodeType":"286","messageId":"287","endLine":1,"endColumn":28},{"ruleId":"315","severity":1,"message":"330","line":27,"column":8,"nodeType":"317","endLine":27,"endColumn":10,"suggestions":"331"},{"ruleId":"315","severity":1,"message":"332","line":80,"column":8,"nodeType":"317","endLine":80,"endColumn":10,"suggestions":"333"},{"ruleId":"315","severity":1,"message":"334","line":16,"column":8,"nodeType":"317","endLine":16,"endColumn":10,"suggestions":"335"},{"ruleId":"284","severity":1,"message":"336","line":12,"column":12,"nodeType":"286","messageId":"287","endLine":12,"endColumn":17},{"ruleId":"284","severity":1,"message":"337","line":12,"column":19,"nodeType":"286","messageId":"287","endLine":12,"endColumn":27},{"ruleId":"284","severity":1,"message":"338","line":1,"column":57,"nodeType":"286","messageId":"287","endLine":1,"endColumn":62},{"ruleId":"315","severity":1,"message":"339","line":34,"column":7,"nodeType":"317","endLine":34,"endColumn":9,"suggestions":"340"},{"ruleId":"312","severity":1,"message":"313","line":81,"column":13,"nodeType":"314","endLine":81,"endColumn":68},{"ruleId":"341","severity":1,"message":"342","line":94,"column":193,"nodeType":"343","endLine":94,"endColumn":201},{"ruleId":"341","severity":1,"message":"342","line":101,"column":197,"nodeType":"343","endLine":101,"endColumn":205},{"ruleId":"284","severity":1,"message":"344","line":1,"column":36,"nodeType":"286","messageId":"287","endLine":1,"endColumn":43},{"ruleId":"284","severity":1,"message":"345","line":13,"column":11,"nodeType":"286","messageId":"287","endLine":13,"endColumn":14},{"ruleId":"284","severity":1,"message":"329","line":1,"column":19,"nodeType":"286","messageId":"287","endLine":1,"endColumn":28},{"ruleId":"284","severity":1,"message":"344","line":1,"column":28,"nodeType":"286","messageId":"287","endLine":1,"endColumn":35},{"ruleId":"284","severity":1,"message":"345","line":13,"column":11,"nodeType":"286","messageId":"287","endLine":13,"endColumn":14},{"ruleId":"284","severity":1,"message":"346","line":68,"column":11,"nodeType":"286","messageId":"287","endLine":68,"endColumn":27},{"ruleId":"284","severity":1,"message":"347","line":110,"column":29,"nodeType":"286","messageId":"287","endLine":110,"endColumn":35},{"ruleId":"315","severity":1,"message":"348","line":25,"column":7,"nodeType":"317","endLine":25,"endColumn":9,"suggestions":"349"},{"ruleId":"312","severity":1,"message":"313","line":34,"column":33,"nodeType":"314","endLine":34,"endColumn":76},{"ruleId":"284","severity":1,"message":"344","line":1,"column":18,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"350","line":1,"column":27,"nodeType":"286","messageId":"287","endLine":1,"endColumn":31},{"ruleId":"315","severity":1,"message":"351","line":23,"column":7,"nodeType":"317","endLine":23,"endColumn":9,"suggestions":"352"},{"ruleId":"312","severity":1,"message":"313","line":32,"column":33,"nodeType":"314","endLine":32,"endColumn":76},{"ruleId":"284","severity":1,"message":"353","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":16},{"ruleId":"284","severity":1,"message":"354","line":31,"column":8,"nodeType":"286","messageId":"287","endLine":31,"endColumn":17},{"ruleId":"284","severity":1,"message":"355","line":77,"column":11,"nodeType":"286","messageId":"287","endLine":77,"endColumn":21},{"ruleId":"315","severity":1,"message":"356","line":113,"column":5,"nodeType":"317","endLine":113,"endColumn":47,"suggestions":"357"},{"ruleId":"312","severity":1,"message":"313","line":123,"column":15,"nodeType":"314","endLine":123,"endColumn":74},{"ruleId":"280","replacedBy":"358"},{"ruleId":"282","replacedBy":"359"},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'CommingSoon' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'op' is already defined.","redeclared","'problemState' is assigned a value but never used.","no-dupe-keys","Duplicate key 'startedAt'.","ObjectExpression","unexpected","Duplicate key 'warnings'.","'testState' is assigned a value but never used.","Duplicate key 'border'.","'failedCases' is assigned a value but never used.","'setFailedCases' is assigned a value but never used.","'totalQuestions' is assigned a value but never used.","'setCurrentQ' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'gTC'.","ArrowFunctionExpression","unsafeRefs","'renderer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'quizID', and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["362"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["363"],"React Hook useEffect has missing dependencies: 'quizID' and 'userID'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'codeID'. Either include it or remove the dependency array.",["365"],"'isProctored' is assigned a value but never used.","'setProctored' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'codeID', 'dispatch', and 'userID'. Either include them or remove the dependency array.",["366"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["368"],"React Hook useEffect has a missing dependency: 'quizId'. Either include it or remove the dependency array.",["369"],"'Class' is assigned a value but never used.","'setClass' is assigned a value but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["370"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Toolbar' is defined but never used.","'oes' is assigned a value but never used.","'handleLangChange' is assigned a value but never used.","'probId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Class', 'branch', 'dispatch', and 'sem'. Either include them or remove the dependency array.",["371"],"'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["372"],"'userData' is defined but never used.","'fromStore' is assigned a value but never used.","'autoSubmit' is defined but never used.","React Hook useEffect has missing dependencies: 'questionBank', 'quizID', 'startDate', 'userID', and 'warnings'. Either include them or remove the dependency array.",["373"],["360"],["361"],"no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},"Update the dependencies array to be: [dispatch, quizID, userID]",{"range":"398","text":"399"},"Update the dependencies array to be: [history]",{"range":"400","text":"401"},"Update the dependencies array to be: [quizID, userID]",{"range":"402","text":"403"},"Update the dependencies array to be: [codeID]",{"range":"404","text":"405"},"Update the dependencies array to be: [codeID, dispatch, userID]",{"range":"406","text":"407"},"Update the dependencies array to be: [props.peer]",{"range":"408","text":"409"},"Update the dependencies array to be: [roomID]",{"range":"410","text":"411"},"Update the dependencies array to be: [quizId]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch]",{"range":"414","text":"415"},"Update the dependencies array to be: [Class, branch, dispatch, sem]",{"range":"416","text":"417"},"Update the dependencies array to be: [dispatch, user]",{"range":"418","text":"419"},"Update the dependencies array to be: [attempted, flagged, userChoices, dispatch, userID, quizID, startDate, questionBank, warnings]",{"range":"420","text":"421"},[1935,1937],"[dispatch, quizID, userID]",[1015,1017],"[history]",[1158,1160],"[quizID, userID]",[602,604],"[codeID]",[3020,3022],"[codeID, dispatch, userID]",[593,595],"[props.peer]",[2365,2367],"[roomID]",[664,666],"[quizId]",[1159,1161],"[dispatch]",[1064,1066],"[Class, branch, dispatch, sem]",[1010,1012],"[dispatch, user]",[3502,3544],"[attempted, flagged, userChoices, dispatch, userID, quizID, startDate, questionBank, warnings]"]