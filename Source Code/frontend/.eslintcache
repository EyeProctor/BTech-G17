[{"G:\\Engineering\\Final Year\\frontend\\src\\index.js":"1","G:\\Engineering\\Final Year\\frontend\\src\\App.js":"2","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\quizHeader.js":"3","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\option.js":"4","G:\\Engineering\\Final Year\\frontend\\src\\service\\questions.js":"5","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"6","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"7","G:\\Engineering\\Final Year\\frontend\\src\\reducer\\index.js":"8","G:\\Engineering\\Final Year\\frontend\\src\\reducer\\quiz\\quiz.js":"9","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\Timer.js":"10","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"11","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\Option.js":"12","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizHeader.js":"13","G:\\Engineering\\Final Year\\frontend\\src\\service\\userData.js":"14","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\Capture.js":"15","G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"16","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js":"17","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js":"18","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js":"19","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js":"20","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js":"21","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\questions.js":"22","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js":"23","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js":"24","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js":"25","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js":"26","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js":"27","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js":"28","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js":"29","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js":"30","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\Creator.js":"31","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js":"32","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js":"33","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js":"34","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js":"35","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js":"36","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js":"37","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js":"38","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js":"39","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\action\\quiz\\quiz.js":"40","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js":"41","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js":"42","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js":"43","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js":"44","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js":"45","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js":"46","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js":"47","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js":"48","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js":"49","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js":"50","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js":"51","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js":"52","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js":"53","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js":"54","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js":"55","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js":"56","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js":"57","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js":"58","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js":"59","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js":"60","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js":"61","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js":"62"},{"size":475,"mtime":1612089209718,"results":"63","hashOfConfig":"64"},{"size":3638,"mtime":1612021132095,"results":"65","hashOfConfig":"64"},{"size":1956,"mtime":1611810838773,"results":"66","hashOfConfig":"64"},{"size":1211,"mtime":1611761625791,"results":"67","hashOfConfig":"64"},{"size":4455,"mtime":1611941571775,"results":"68","hashOfConfig":"64"},{"size":2040,"mtime":1612020855025,"results":"69","hashOfConfig":"64"},{"size":1106,"mtime":1611844207800,"results":"70","hashOfConfig":"64"},{"size":174,"mtime":1611740277392,"results":"71","hashOfConfig":"64"},{"size":211,"mtime":1611740282511,"results":"72","hashOfConfig":"64"},{"size":681,"mtime":1611942622552,"results":"73","hashOfConfig":"64"},{"size":1338,"mtime":1611939528433,"results":"74","hashOfConfig":"64"},{"size":795,"mtime":1611939745623,"results":"75","hashOfConfig":"64"},{"size":2127,"mtime":1611941396025,"results":"76","hashOfConfig":"64"},{"size":145,"mtime":1611810752589,"results":"77","hashOfConfig":"64"},{"size":1231,"mtime":1611941367770,"results":"78","hashOfConfig":"64"},{"size":1340,"mtime":1612090268536,"results":"79","hashOfConfig":"64"},{"size":1202,"mtime":1617340984567,"results":"80","hashOfConfig":"81"},{"size":758,"mtime":1617468241520,"results":"82","hashOfConfig":"81"},{"size":5052,"mtime":1617898875590,"results":"83","hashOfConfig":"81"},{"size":3695,"mtime":1617467651262,"results":"84","hashOfConfig":"81"},{"size":145,"mtime":1611810752589,"results":"85","hashOfConfig":"81"},{"size":4455,"mtime":1611941571775,"results":"86","hashOfConfig":"81"},{"size":1134,"mtime":1617340984566,"results":"87","hashOfConfig":"81"},{"size":1430,"mtime":1617340984569,"results":"88","hashOfConfig":"81"},{"size":4133,"mtime":1617901154764,"results":"89","hashOfConfig":"81"},{"size":1338,"mtime":1611939528433,"results":"90","hashOfConfig":"81"},{"size":2040,"mtime":1617340984566,"results":"91","hashOfConfig":"81"},{"size":1231,"mtime":1617901302274,"results":"92","hashOfConfig":"81"},{"size":795,"mtime":1611939745623,"results":"93","hashOfConfig":"81"},{"size":4463,"mtime":1617692249528,"results":"94","hashOfConfig":"81"},{"size":3902,"mtime":1612690251770,"results":"95","hashOfConfig":"81"},{"size":5356,"mtime":1617349819032,"results":"96","hashOfConfig":"81"},{"size":1843,"mtime":1613737660408,"results":"97","hashOfConfig":"81"},{"size":537,"mtime":1617340984556,"results":"98","hashOfConfig":"81"},{"size":564,"mtime":1617340984567,"results":"99","hashOfConfig":"81"},{"size":8761,"mtime":1617340984555,"results":"100","hashOfConfig":"81"},{"size":730,"mtime":1617340984567,"results":"101","hashOfConfig":"81"},{"size":2808,"mtime":1617340984569,"results":"102","hashOfConfig":"81"},{"size":5534,"mtime":1617428474703,"results":"103","hashOfConfig":"81"},{"size":398,"mtime":1614415027816,"results":"104","hashOfConfig":"81"},{"size":276,"mtime":1617340984559,"results":"105","hashOfConfig":"81"},{"size":2836,"mtime":1617340984557,"results":"106","hashOfConfig":"81"},{"size":3446,"mtime":1617340984559,"results":"107","hashOfConfig":"81"},{"size":2864,"mtime":1617340984557,"results":"108","hashOfConfig":"81"},{"size":1447,"mtime":1617340984560,"results":"109","hashOfConfig":"81"},{"size":7694,"mtime":1617340984562,"results":"110","hashOfConfig":"81"},{"size":5285,"mtime":1617340984562,"results":"111","hashOfConfig":"81"},{"size":6201,"mtime":1617340984561,"results":"112","hashOfConfig":"81"},{"size":5243,"mtime":1617340984561,"results":"113","hashOfConfig":"81"},{"size":318,"mtime":1617340984556,"results":"114","hashOfConfig":"81"},{"size":5252,"mtime":1617468874264,"results":"115","hashOfConfig":"81"},{"size":232,"mtime":1617340984568,"results":"116","hashOfConfig":"81"},{"size":2092,"mtime":1617340984556,"results":"117","hashOfConfig":"81"},{"size":5580,"mtime":1617340984557,"results":"118","hashOfConfig":"81"},{"size":1311,"mtime":1617902599872,"results":"119","hashOfConfig":"81"},{"size":2796,"mtime":1617340984560,"results":"120","hashOfConfig":"81"},{"size":2430,"mtime":1617340984560,"results":"121","hashOfConfig":"81"},{"size":3711,"mtime":1617468765166,"results":"122","hashOfConfig":"81"},{"size":1749,"mtime":1617340984565,"results":"123","hashOfConfig":"81"},{"size":253,"mtime":1617340984568,"results":"124","hashOfConfig":"81"},{"size":23081,"mtime":1617340984565,"results":"125","hashOfConfig":"81"},{"size":2150,"mtime":1617900826908,"results":"126","hashOfConfig":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},"y8p9p3",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"f9pvug",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"164"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"164"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"164"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"164"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"164"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"164"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Engineering\\Final Year\\frontend\\src\\index.js",["273"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'typeface-roboto';\nimport {createStore} from 'redux';\nimport allReducer from './reducer/index';\nimport {Provider} from 'react-redux';\nimport QuizLandingPage from './components/quiz/QuizLandingPage';\n\n\nconst store = createStore(allReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <QuizLandingPage/>\n  </Provider>,\n  document.getElementById('root')\n);\n",["274","275"],"G:\\Engineering\\Final Year\\frontend\\src\\App.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\quizHeader.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\option.js",["276","277","278"],"G:\\Engineering\\Final Year\\frontend\\src\\service\\questions.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\reducer\\quiz\\quiz.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\rightPanel\\Timer.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\questions\\Option.js",[],["279","280"],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizHeader.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\frontend\\src\\components\\quiz\\QuizLandingPage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\index.js",[],["281","282"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\index.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizLandingPage.js",["283","284"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\App.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\userData.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\service\\questions.js",[],["285","286"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\RightPanel.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quiz.js",["287"],"import { StaticRouter } from \"react-router\";\r\n\r\nvar initialState = {\r\n    quizID: null,\r\n    userID: null,\r\n    attempted: [],\r\n    flagged: [],\r\n    userChoices: null,\r\n    startedAt: null,\r\n    questions: null,\r\n\r\n}\r\n\r\nconst quizReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SAVE_USERCHOICES\":\r\n            return action.payload;\r\n        case \"SET_QUIZDATA\":\r\n            return {...state, questions: {...action.payload}}\r\n        case \"SET_STARTDATE\":\r\n            return {...state, startedAt: action.payload}\r\n        case \"QUIZ_RESET\":\r\n            return initialState;\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\n\r\nexport const saveUserChoices = () => async (dispatch, getState) => {\r\n    const {userID, attempted,flagged, userChoices, startedAt, quizID , questions} = getState().quiz;\r\n    const userData = {userID, quizID, attempted,flagged,userChoices,startedAt , questions};\r\n\r\n    await fetch(\"/quiz/saveUserChoices\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': \"application/json\",\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n    });\r\n\r\n\r\n}\r\n\r\nexport const fetchQuiz = ()=> async (dispatch, getState) => {\r\n    const quizQuestions = await fetch(\"/user/getQuiz\").then(data => data.json);\r\n    dispatch({type: \"SET_QUIZ\", payload: quizQuestions});\r\n}\r\n\r\nexport default quizReducer;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizHeader.js",["288","289"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\QuestionBody.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\rightPanel\\QuestionIcon.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Capture.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\questions\\Option.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TempLanding.js",["290"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\Creator.js",["291","292"],"import React from \"react\"\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel} from '@material-ui/core';\r\n\r\nclass Quiz extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\tquiz:{\r\n\t\t\t\tquizId: 0,\r\n\t\t\t\tsubject: \"\",\r\n\t\t\t\tproctored: false,\r\n\t\t\t\tstartDate: \"01-01-21-12:00\",\r\n\t\t\t\tendDate: \"01-01-21-12:30\",\r\n\t\t\t\tduration: 600000\r\n\t\t\t},\r\n\t\t\tquestions:[{\r\n\t\t\t\t\t\tqNo: 0,\r\n\t\t\t\t\t\tqtype: 1,\r\n\t\t\t\t\t\tquestion: \"Question?\",\r\n\t\t\t\t\t\toptions: [{op: \"\",ans: false}]\r\n\t\t\t},]\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.addOption = this.addOption.bind(this);\r\n    }\t\r\n\r\n    addQuestion = (e) => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tquestions:[...prevState.questions,{qNo: 0,\r\n                qtype: 1,\r\n                question: \"Question\",\r\n                options: [{qs: \"\",ans: false}]}]\r\n\t\t}));\r\n\tconsole.log(this.state);\r\n\t}\r\n\r\n\taddOption = (e,idx) => {\r\n        console.log(idx);\r\n        let allQ = [...this.state.questions];\r\n        let temp = allQ[idx-1]\r\n        temp.options = [...temp.options, {qs: \"\",ans: false}]\r\n        // allQ[idx-1] = temp;\r\n        console.log(allQ);\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tquestions: allQ\r\n\t\t}));\r\n\tconsole.log(\"Options\",this.state.questions[idx-1]);\r\n\t}\r\n\t\r\n\thandleSubmit = (e) => { e.preventDefault() }\r\n\r\n    render() {\r\n\t\tlet {questions}= this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<form  onSubmit={this.handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\r\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TextField id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-start\"\r\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-end\"\r\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.questions.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet queId = `que-${idx++}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname={queId}\r\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\tid={queId}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={(e)=>{this.addOption(e,idx)}}>+ Add Option</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    {\r\n\t\t\t\t\t\t\tthis.state.questions[idx-1].options.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet optId = `opt-${++idx}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n                                        <FormControlLabel control={\r\n                                        <Checkbox color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                        \r\n                                        } label={\"Option:\" + idx} />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={this.addQuestion}>+ Add Question</Button>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" type=\"submit\">Submit</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Quiz;",["293","294"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\Quiz.js",["295","296"],"import QuizHeader from './QuizHeader';\r\nimport {Grid, Card, CardActions, Button } from '@material-ui/core';\r\nimport QuestionsPanel from './rightPanel/RightPanel.js';\r\nimport QuestionBody, {  } from \"./questions/QuestionBody\";\r\nimport Countdown from 'react-countdown';\r\n// import questionBank from '../../service/questions.js';\r\nimport userData from '../../service/userData.js';\r\nimport {  useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { saveUserChoices } from '../../reducer/quiz/quiz'\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Quiz(props) {\r\n\tconst quizDataFromStore = useSelector(state => state.quiz);\r\n\tconst userName = useSelector(state => state.auth)\r\n\tvar startDate = 0;\r\n\tconst history = useHistory();\r\n\tconsole.log(JSON.stringify(quizDataFromStore))\r\n\tif(quizDataFromStore.startedAt === null)\r\n\t\tstartDate = Date.now()\r\n\telse\r\n\t\tstartDate = quizDataFromStore.startedAt;\r\n\tuseEffect(() => {\r\n\t\t\t   document.documentElement.requestFullscreen().catch((e) => {console.log(e)})\r\n\t\t\t   \r\n\t\t\t   //setStartDate( );\r\n\t}, []);\r\n\t\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\tconst fromStore = quizDataFromStore.userChoices;\r\n\tconst userID = props.match.params.userID;\r\n\tconst quizID = props.match.params.quizID;\r\n\tconst questionBank = quizDataFromStore.questions;\r\n\t// const [quizData, setQuizData] = useState([])\r\n\tvar [attempted, updateAttempted] = useState(quizDataFromStore.attempted);\r\n\t// const [startDate,setStartDate] = useState(Date.now());\r\n\tconst [flagged, updateFlagged] = useState(quizDataFromStore.flagged);\r\n\tconst [currentQ, updateCurrentQ] = useState(1);\r\n\tvar endDate = startDate + parseInt(questionBank.duration)*60000;\r\n\tconsole.log(\"Start Date\", startDate);\r\n\t\r\n\tconst handleAttempted = () => {\r\n\t\tattempted = [...new Set(attempted)];\r\n\t\tupdateAttempted(\r\n\t\t\tarr => [...arr, currentQ]\r\n\t\t\t\r\n\t\t);\r\n\t\tconsole.log('AttemptedArray',attempted);\r\n\t\t\r\n\t}\r\n\tconst handleFlagged = () => {\r\n\t\tif(!flagged.includes(currentQ))\r\n\t\t\tupdateFlagged(\r\n\t\t\t\tarr => [...arr, currentQ]\r\n\t\t\t)\r\n\t\telse{\r\n\t\t\tvar temp = [...flagged]\r\n\t\t\ttemp.splice(temp.indexOf(currentQ));\r\n\t\t\tupdateFlagged(\r\n\t\t\t\ttemp\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tconst handlePrev = () => {\r\n\t\tupdateCurrentQ(currentQ-1);\r\n\t}\r\n\tconst handleNext = () => {\r\n\t\tupdateCurrentQ(currentQ+1);\r\n\t}\r\n\r\n\tconst handleUserChoice = (val) => {\r\n\r\n\t\tupdateUserChoice({...userChoices, [currentQ]: val})\r\n\r\n\t}\r\n\r\n\tvar [userChoices, updateUserChoice] = useState(quizDataFromStore.userChoices);\r\n\tuseEffect(()=> {\r\n\t\tconst data = {\r\n\t\t\tuserID: userID,\r\n\t\t\tquizID: quizID,\r\n\t\t\tattempted: attempted,\r\n    \t\tflagged: flagged,\r\n    \t\tuserChoices: userChoices,\r\n    \t\tstartedAt: startDate,\r\n\t\t\tquestions: questionBank,\r\n\t\t}\r\n\r\n\t\t// Updates on Backend\r\n\t\tdispatch(saveUserChoices());\r\n\r\n\t\t// Updates on Redux Store\r\n\t\tdispatch({type: \"SAVE_USERCHOICES\", payload: data});\r\n\r\n\t}, [attempted, flagged, userChoices,dispatch]);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\tconst {firstName, lastName, middleName} = userName.studentDoc;\r\n\t\tconst quizName = quizDataFromStore.questions.subject;\r\n\t\tconst startedAt = startDate;\r\n\t\te.preventDefault();\r\n\t\tif (window.confirm('Confirm Submission'))\r\n\t\t{\r\n\t\t\tfetch('/quiz/submitQuiz',{\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({userID, qID: quizID, userChoices, questions: questionBank.questions, firstName, middleName, lastName, startedAt, quizName})\r\n\t\t\t }).then(data => data.json().then(newData => {\r\n\t\t\t\tconsole.log(JSON.stringify(newData));\r\n\t\t\t\t if(newData.msg){\r\n\t\t\t\t\t alert(\"Error\");\r\n\t\t\t\t }else{\r\n\t\t\t\t\t//dispatch({type: \"QUIZ_RESET\"})\r\n\t\t\t\t\thistory.replace('/home');\r\n\t\t\t\t\t \r\n\t\t\t\t }\r\n\t\t\t })).catch(err => console.log(err))\r\n\r\n\t\t}\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n      <Grid container justify={'center'} spacing={2}>\r\n        <Grid item xs={12} >\r\n        \t<QuizHeader prn={userData.prn} status=\"Valid\"/>\r\n        </Grid>\r\n\t\t<Grid item container spacing={2} xs={12}>\r\n\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t<QuestionBody onFlagged={handleFlagged} onAttempted={handleAttempted} currentQ={questionBank.questions[currentQ - 1]} no = {currentQ} flagged={flagged} userChoice={userChoices[currentQ.toString()]} updateUserChoice={handleUserChoice}/>\r\n\t\t\t\t<CardActions>\r\n\t\t\r\n\t\t\t{\r\n\t\t\t(currentQ !== 1) ?\r\n\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handlePrev}>\r\n\t\t\t\tPrev\r\n\t\t\t</Button>:<></>\r\n\t\t  }\r\n\t\t  {currentQ < questionBank.questions.length?<Button  variant=\"contained\" size=\"small\" color=\"primary\" href=\"#\" onClick={handleNext}>\r\n          Next\r\n        </Button>:<></>}\r\n        \r\n      </CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t<QuestionsPanel updateNav={(val)=> updateCurrentQ(val) } qNo={questionBank.questions.length} attemptedQ={attempted} flagged={flagged} current={currentQ}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Button onClick={handleSubmit} variant=\"contained\" style={{background:'green',color: 'white', marginTop: 10}}>\r\n          Submit\r\n        </Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t<Countdown onComplete={handleSubmit} date={endDate} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n        </Grid>\r\n\t\t<Grid item xs={12} >\r\n        \t<h1> © Eye Procotor</h1>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\practice\\practice.js",[],["297","298"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\HomePage.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\auth\\authReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Coding\\CodeUI.js",["299","300"],"import {useState} from 'react';\r\nimport {Typography, FormControl, Select, MenuItem, InputLabel, Grid, CircularProgress, AppBar } from '@material-ui/core';\r\nimport Editor from \"@monaco-editor/react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst CodeUI = () => {\r\n\r\n    const [Code, setCode] = useState(\"print('Hi')\");\r\n    const [language, setLanguage] = useState(\"Java\");\r\n    const [Output, setOutput] = useState(\"Type and Click on Run\");\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    function fetchResult(sid) {\r\n        fetch(\"/code/fetchResult\",\r\n            {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    sid\r\n                })\r\n            }\r\n        ).then(\r\n            (res) => res.json().then(resData => {\r\n                if (resData.status === 'IN-QUEUE') {\r\n                    return fetchResult(sid);\r\n                }\r\n                \r\n                setOutput(resData.output);\r\n                setLoading(false);\r\n                return;\r\n            })\r\n        ).catch(err => console.log(err)).catch(err => { setLoading(false); setOutput(\"Server Error\"); console.log(err)});\r\n    }\r\n    function SubmitForm(e) {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        fetch(\"/code/compile\",\r\n            {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    lang: language,\r\n                    code: Code,\r\n                    input: \"\",\r\n                    save: false\r\n                })\r\n            }\r\n        ).then(\r\n            (res) => res.json().then(resData => fetchResult(resData.sid))\r\n        ).catch(err => console.log(err)).catch(err => console.log(err));\r\n\r\n\r\n\r\n    }\r\n    document.oncontextmenu = new Function(\"return false;\");\r\n    return (\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n            \r\n            <form  onSubmit={SubmitForm}>\r\n                <Grid style={{marginTop: '11vh'}} className=\"ch-container\" container >\r\n                    <Grid item xs={8}>\r\n                        <Editor\r\n                        value = {Code}\r\n                        onChange ={(e)=> {setCode(e)}}\r\n                        marginLeft='100px'\r\n                        height='80vh'\r\n                        theme='vs-dark'\r\n                        defaultLanguage=\"Java\"\r\n                        fontSize = '30px'\r\n                        options = {{\"fontSize\": \"19\"}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Grid  container item direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                            <Grid item xs={12} fullWidth>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"language\" >Language</InputLabel>\r\n                                    <Select value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\r\n                                        <MenuItem value={\"C\"}>C</MenuItem>\r\n                                        <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\r\n                                        <MenuItem value={\"Java\"}>Java</MenuItem>\r\n                                        <MenuItem value={\"Python3\"}>Python</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                 <Typography variant='subtitle1' color=\"secondary\"> Problem Statement </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='body1' color=\"primary\"> Write a Program to add 2 Numbers </Typography>\r\n                            </Grid>\r\n                            <Grid container item alignContents=\"center\" alignItems=\"center\" justify=\"center\" >\r\n                                <Grid item xs={12}>\r\n                                    {isLoading? <CircularProgress />:<Button type=\"submit\" color=\"primary\">Run</Button>}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button color=\"primary\">Submit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='subtitle1' color=\"secondary\"> Output </Typography>\r\n                            </Grid>\r\n                            <Grid item >\r\n                                <textarea onChange={(e) => setOutput(e.target.value)} value={Output}\r\n                                readOnly\r\n                                className = 'terminal-textArea'\r\n                                rows=\"24\"\r\n                                cols = \"50\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodeUI;\r\n\r\n// const render = \r\n// <Grid className=\"ch-container\" container >\r\n//     <Grid item xs={8}>\r\n//         <Editor\r\n//         value = {Code}\r\n//         onChange ={(e)=> {setCode(e)}}\r\n//         marginLeft='100px'\r\n//         height='100vh'\r\n//         theme='vs-dark'\r\n//         defaultLanguage=\"Java\"\r\n//         width='75vw'\r\n//         fontSize = '30px'\r\n//         options = {{\"fontSize\": \"19\"}}\r\n//         />\r\n//     </Grid>\r\n//     <Grid item xs={4}>\r\n//         <Grid  container direction=\"column\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n//             <Grid item xs={8}>\r\n//                 <FormControl required fullWidth variant=\"outlined\">\r\n//                     <InputLabel id=\"language\" >Language</InputLabel>\r\n//                     <Select value={language} onChange={(e)=>{setLanguage(e.target.value)}} labelId=\"language\" label=\"Language\">\r\n//                         <MenuItem value={\"C\"}>C</MenuItem>\r\n//                         <MenuItem value={\"Cpp\"}>Cpp</MenuItem>\r\n//                         <MenuItem value={\"Java\"}>Java</MenuItem>\r\n//                         <MenuItem value={\"Python3\"}>Python</MenuItem>\r\n//                     </Select>\r\n//                 </FormControl>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box borderBottom={1}>\r\n//                      <Typography> Problem Statement </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box borderBottom={1}>\r\n//                     <Typography> Write a Program to add 2 Numbers </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box borderBottom={1}>\r\n//                     <Typography> Write a Program to add 2 Numbers </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//             <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n//                 <Grid item xs={6}>\r\n//                     <Button variant=\"contained\" color=\"primary\">Run</Button>\r\n//                 </Grid>\r\n//                 <Grid item xs={6}>\r\n//                     <Button variant=\"contained\" color=\"primary\">Submit</Button>\r\n//                 </Grid>\r\n//             </Grid>\r\n//             <Grid item xs={12}>\r\n//                 <Box mt={4} border={1}>\r\n//                     <Typography> Output </Typography>\r\n//                 </Box>\r\n//             </Grid>\r\n//         </Grid>\r\n//     </Grid>\r\n// </Grid>","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\UI\\uiReducers.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\quiz\\quizCreator.js",["301"],"const initialState = {\r\n    courseID: \"\",\r\n    subject: null,\r\n    proctored: false,\r\n    startDate: null,\r\n    endDate: null,\r\n    duration: null,\r\n    questions: []\r\n}\r\n\r\nvar questionState = {\r\n    qNo: null,\r\n    qType: 1,\r\n    question: \"\",\r\n    options: []\r\n}\r\n\r\nconst optionsState = {\r\n    qs: \"\",\r\n    ans: false\r\n};\r\n\r\n\r\n\r\nvar QIndex, OIndex, QArray;\r\n\r\nconst quizCreatorReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_QUIZCOURSE\":\r\n            return {...state, courseID: action.payload}\r\n\r\n        case \"ADD_QUESTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            const newQuestionState = {...questionState, qNo: QArray.length+1 }\r\n            QArray.push(newQuestionState)\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_QUESTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            QArray[QIndex].question = action.payload.question;\r\n            return {...state, questions: QArray}\r\n\r\n        case \"ADD_OPTION_TEMPLATE\":\r\n            QArray = [...state.questions];\r\n            var op = QArray[action.payload.QIndex]\r\n            op.options = [...op.options, {qs: \"\",ans: false}]\r\n            return {...state, questions: QArray}\r\n\r\n        case 'ADD_OPTION':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            QArray[QIndex].options[OIndex] = {...optionsState, qs: action.payload.option}\r\n            return {...state, questions: QArray}\r\n        \r\n        case 'SET_ANSWER':\r\n            QArray = [...state.questions];\r\n            QIndex = action.payload.QIndex;\r\n            OIndex = action.payload.OIndex;\r\n            var op = QArray[QIndex]\r\n            \r\n            if(op.options[OIndex].ans){\r\n                \r\n                QArray[QIndex].options[OIndex].ans = false;\r\n                return {...state, questions: QArray}\r\n            }\r\n            op.options.forEach(O => {\r\n                if(O.ans){\r\n                    O.ans = false;\r\n                }\r\n            });\r\n            \r\n            QArray[QIndex].options[OIndex] = {...op.options[OIndex], ans: true}\r\n            return {...state, questions: QArray}\r\n        \r\n        case \"SET_QUIZ_SUBJECT\":\r\n            return {...state, subject: action.payload}\r\n        case \"SET_STARTDATE\":\r\n            return {...state, startDate: action.payload}\r\n        case \"SET_ENDDATE\":\r\n            return {...state, endDate: action.payload}\r\n        case \"SET_DURATION\":\r\n            return {...state, duration: action.payload}\r\n        case \"RESET_QUIZCREATION\":\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default quizCreatorReducer;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizCreation\\QuizCreator.js",["302"],"import {useState, useEffect} from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {TextField,Grid,Button,Checkbox,FormControlLabel, CircularProgress} from '@material-ui/core';\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst QuizCreator = (props) => {\r\n    const dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n    const state = useSelector(state => state.quizCreator);\r\n\tconst courseID = props.match.params.courseID;\r\n\tconst [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\tconsole.log(courseID);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\t\tsetBad(false);\r\n\t\tsetSuccess(false);\r\n\t\tsetLoading(true);\r\n\t\tsetErrMessage(\"\");\r\n\t\t// Do Simple form Check\r\n\r\n\t\tdispatch({type: \"SET_QUIZCOURSE\", payload: courseID})\r\n\r\n\t\tconsole.log(JSON.stringify(state));\r\n\r\n\t\tfetch(\"/quiz/addQuiz\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(state)\r\n\t\t}).then(data => data.json().then( (newData)=>\r\n\t\t\t{\r\n\t\t\t\tconsole.log(JSON.stringify(newData));\r\n\t\t\t\tif(newData.msg){\r\n\t\t\t\t\tsetBad(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetErrMessage(newData.msg);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tsetSuccess(true);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)).catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const addQuestion = () => {\r\n        dispatch({type: \"ADD_QUESTION_TEMPLATE\"});\r\n    }\r\n    const addOption = (QIndex) => {\r\n        dispatch({type: \"ADD_OPTION_TEMPLATE\", payload:{QIndex}});\r\n    }\r\n    return(\r\n        <form  onSubmit={handleSubmit} noValidate autoComplete=\"off\" center=\"true\" margin=\"20px\">\r\n\t\t\t\t<Grid container spacing={3} alignItems=\"center\" style={{padding:50 ,backgroundColor:\"beige\"}}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_QUIZ_SUBJECT\", payload: e.target.value})}} id=\"quizsub\" label=\"Quiz Subject\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-start\"\r\n\t\t\t\t\t\t\tlabel=\"Start Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T00:00\"\r\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_STARTDATE\", payload: new Date(e.target.value)})}}\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField fullWidth\r\n\t\t\t\t\t\t\tid=\"datetime-end\"\r\n\t\t\t\t\t\t\tlabel=\"End Date Time\"\r\n\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\tdefaultValue=\"2020-01-24T00:00\"\r\n\t\t\t\t\t\t\tonChange = {(e)=> {dispatch({type:\"SET_ENDDATE\", payload: new Date(e.target.value)})}}\r\n\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\tshrink: true,}}/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<TextField onChange = {(e)=> {dispatch({type:\"SET_DURATION\", payload: e.target.value})}} type=\"number\" id=\"dur\" label=\"Duration in minutes\" variant=\"outlined\" fullWidth/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstate.questions.map((val, idx)=> {\r\n\t\t\t\t\t\t\t\tlet queId = `que-${idx+1}`\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}><TextField fullWidth\r\n\t\t\t\t\t\t\t\t\t\tlabel={\"Question#\"+idx}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname={queId}\r\n\t\t\t\t\t\t\t\t\t\tdata-id={idx}\r\n\t\t\t\t\t\t\t\t\t\tid={queId}\r\n\t\t\t\t\t\t\t\t\t\tvalue= {val.question}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> dispatch({type: \"ADD_QUESTION\", payload: {QIndex: idx, question: e.target.value}})}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"question-text\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button label=\"+Add Option\" variant=\"outlined\" onClick={()=>addOption(idx)}>+ Add Option</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    {\r\n\t\t\t\t\t\t\tstate.questions[idx].options.map((val, oIdx)=> {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={oIdx}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n                                        <FormControlLabel control={\r\n                                        <Checkbox checked={val.ans} onChange={()=> dispatch({type: \"SET_ANSWER\", payload: {QIndex: idx, OIndex: oIdx}})} color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }} />\r\n                                        \r\n                                        } label={\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField fullWidth label={`Option No.${oIdx+1}`} value={val.qs} onChange={(e)=> {dispatch({type:\"ADD_OPTION\", payload:{QIndex: idx, OIndex: oIdx, option: e.target.value}})}}/>\r\n\t\t\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={addQuestion}>+ Add Question</Button>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t{isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Quiz</Button>}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Quiz Created!</Alert>:<></>}\r\n                    </Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n    );\r\n}\r\n\r\nexport default QuizCreator;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\action\\quiz\\quiz.js",[],["303","304"],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\CreateRoom.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\StudentHome.js",["305","306"],"import { AppBar, Grid } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport CustomBox from '../../Helper/CustomBox';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {useEffect,useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\r\n\r\nconst StudentHome = () => {\r\n    const studentData = useSelector(state => state.auth.studentDoc);\r\n    const branch = studentData.branch;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const sem = studentData.sem;\r\n    const Class = studentData.Class;\r\n    const[courseList, setCourseList] = useState([])\r\n    useEffect(()=>{\r\n        fetch('/course/student/getAll',{\r\n           method: \"POST\",\r\n           mode: 'cors',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify({branch,Class,sem})\r\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n                <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\r\n                                <ProfileMenu />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    {\r\n                        courseList.map((val,idx) => {\r\n                            return(\r\n                                <Grid item xs={4} key={idx}>\r\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\r\n                                        history.push(`/course/${val._id}`)\r\n                                    }}/>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                    \r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\OE\\Room.js",["307","308"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherHome.js",["309","310","311","312"],"import { AppBar, Toolbar, Card, Grid } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport CustomBox from '../../Helper/CustomBox';\r\nimport ProfileMenu from \"../../Login/ProfileMenu.js\";\r\n\r\n\r\nconst TeacherHome = () => {\r\n    const user = useSelector(state => state.auth.user)\r\n    const[courseList, setCourseList] = useState([])\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        const teacherID = user.teacherData;\r\n        console.log(JSON.stringify(user))\r\n        fetch('/teacher/getAllCourses',{\r\n           method: \"POST\",\r\n           mode: 'cors',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify({teacherID})\r\n        }).then(data => data.json().then(newData => {setCourseList(newData); dispatch({type: \"SET_COURSES\", payload: newData})})).catch(err => console.log(err))\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n                <div style={{padding:'5px'}}>\r\n                    <AppBar position='static' className='Appbar'>\r\n                        <Grid container style={{justifyContent:'space-between',position:'relative'}}>\r\n                            <Grid item style={{display:'flex',justifyContent:'space-between'}}>\r\n                                <img src='logo_trans.png' className='logo'></img>\r\n                                <div style={{display:'inline-block',verticalAlign:'middle',textAlign:'center',color:'#fec14e'}}>\r\n                                    <h1 style={{position:'relative',top:'50%',transform: 'translateY(-50%)'}}>Proctor</h1>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item style={{justifyContent:'space-between',position:'relative'}}>\r\n                                <ProfileMenu />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n                </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    {\r\n                        courseList.map((val,idx) => {\r\n                            return(\r\n                                <Grid item xs={4} key={idx}>\r\n                                    <CustomBox innerText={val.courseName} onClick={()=>{\r\n                                        dispatch({type: \"SET_CURRENT_COURSE\", payload: val});\r\n                                        history.push(`/course/teacher/${val._id}`);\r\n                                    }}/>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherHome;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\AdminHome.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateStudent\\CreateStudent.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateTeacher\\CreateTeacher.js",["313","314"],"import {TextField, FormControl, Select, MenuItem, InputLabel, Grid, Button, Box, CircularProgress} from '@material-ui/core'\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\nimport {useState} from 'react';\r\n\r\nconst CreateTeacher = () => {\r\n    const [firstName, setFName] = useState(\"\");\r\n    const [lastName, setLName] = useState(\"\");\r\n    const [middleName, setMName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"None\");\r\n    const [Class, setClass] = useState(\"None\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [isSuccess, setSuccess] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        setLoading(true);\r\n        setErrMessage(false);\r\n        setSuccess(false);\r\n        e.preventDefault();\r\n\r\n        const userName = lastName.toLowerCase() + \".\" + middleName.toLowerCase() + \".\" + firstName.toLowerCase();\r\n        const password = \"changeme\";\r\n        const userType = \"Teacher\";\r\n        const teacherData = {\r\n            firstName,middleName,lastName,branch\r\n        }\r\n        const studentData = {}\r\n        const reqBody = {\r\n            userName, email, password , userType, studentData , teacherData\r\n        }\r\n\r\n        console.log(JSON.stringify(reqBody));\r\n\r\n        fetch(\r\n            \"/user/register\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqBody)\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => {\r\n                console.log(JSON.stringify(data));\r\n                setLoading(false);\r\n                if(data.msg){\r\n                    setBad(true);\r\n                    setErrMessage(data.msg);\r\n                }else\r\n                    setSuccess(true);\r\n            })\r\n        ).catch((err) => {\r\n            console.error(err); \r\n            setLoading(false);\r\n            setBad(true);\r\n            setErrMessage(JSON.stringify(err));\r\n        }\r\n            );\r\n\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container style={ {flexGrow: 1, marginTop: 25, padding: 10} } spacing={2}>\r\n                    <Grid item xs={4} >\r\n                        <TextField value={firstName} onChange={(e)=> setFName(e.target.value)} fullWidth required label=\"First Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={middleName} onChange={(e)=>setMName(e.target.value)} fullWidth required label=\"Middle Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={lastName} onChange={(e)=> setLName(e.target.value) } fullWidth required label=\"Last Name\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                \r\n                    <Grid item xs={4}>\r\n                        <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} fullWidth required label=\"Email\" variant=\"outlined\"/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField value={phone} onChange={(e)=>{setPhone(e.target.value)}} type=\"number\" fullWidth required label=\"Phone Number\" variant=\"outlined\"/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl required fullWidth variant=\"outlined\">\r\n                            <InputLabel id=\"branchDD\" >Branch</InputLabel>\r\n                            <Select value={branch} onChange={(e)=>{setBranch(e.target.value)}} labelId=\"branchDD\" label=\"Branch\">\r\n                                <MenuItem value={\"biotech\"}>BioTech</MenuItem>\r\n                                <MenuItem value={\"civil\"}>Civil</MenuItem>\r\n                                <MenuItem value={\"cse\"}>CSE</MenuItem>\r\n                                <MenuItem value={\"electronics\"}>Electronics</MenuItem>\r\n                                <MenuItem value={\"mech\"}>Mechanical</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                        <Box mt={5}>\r\n                        {isLoading ?<CircularProgress />:<Button type=\"submit\" variant=\"contained\" color=\"primary\">Create Teacher</Button>}\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                            {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                    <Grid container item justify=\"center\" alignItems=\"center\">\r\n                            {isSuccess ?<Alert variant=\"filled\" severity=\"success\">Teacher Created!</Alert>:<></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTeacher;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\CreateCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\admin\\CreateCourse\\AssignCourse.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Helper\\CustomBox.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\Login.js",["315","316","317"],"import {TextField,Grid,Button,Checkbox,FormControlLabel,Paper, CircularProgress} from '@material-ui/core';\r\nimport {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Alert, AlertTitle} from '@material-ui/lab'\r\n\r\n\r\nconst style = {\r\n                maxWidth:'40%',\r\n                minWidth:'400px',\r\n                padding:'30px' ,\r\n                margin:'auto',\r\n                marginTop:\"5vh\",\r\n                // backgroundColor:'#4c5f7a',\r\n                backgroundColor:'white',\r\n                color:'black',\r\n                textAlign:'center',\r\n                borderRadius:'10pt',\r\n                fontWeight:'bold'\r\n            };\r\n\r\nconst Login = () =>  {\r\n    \r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isBad,setBad] = useState(false);\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch({ type:\"RESET_STORE\"});\r\n    },[])\r\n\r\n    function onSuccess(resData){setLoading(false);\r\n        if(resData.msg){\r\n            setBad(true);\r\n            setErrMessage(resData.msg);\r\n        }\r\n        else{\r\n            dispatch({type: \"AUTHENTICATE\", payload: resData});\r\n            history.replace(\"/home\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setBad(false);\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        // alert(userName + \" \" + password);\r\n        fetch(\r\n            \"/user/login\",\r\n            {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(\r\n                    {\r\n                        userName,\r\n                        password,\r\n                    }\r\n                )\r\n            }\r\n        ).then(\r\n            response => response.json().then( data => onSuccess(data))\r\n        ).catch((err) => {console.error(err)});\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} style={{height:'100vh',width:'100vw', background: 'linear-gradient(135deg, #364755 50%, #182835 50%)',position:'absolute',top:'0',left:'0'}}>\r\n            <img src=\"logo_trans.png\" style={{maxWidth:'100px'}} />\r\n            <div style={{display:'inline-block',position:'absolute',top:'30px',textAlign:'center',color:'#fec14e'}}>\r\n                <h1>Proctor</h1>\r\n            </div>\r\n            <div style={style}>\r\n                <Grid container spacing={8} alignItems=\"center\">\r\n                    <Grid item md={2} sm={true} xs={true}>\r\n                        <h1>Login</h1>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    {/* <Grid item md={3}>Username</Grid> */}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TextField onChange={(e)=> {setUserName(e.target.value)}} value={userName} id=\"usrn\" margin=\"normal\" variant=\"outlined\" label=\"Username\" type=\"text\" fullWidth required />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    {/* <Grid item md={3}>Password</Grid> */}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TextField onChange={(e)=> {setPassword(e.target.value)}} value={password} id=\"pswd\" margin=\"normal\" variant=\"outlined\" label=\"Password\" type=\"password\" fullWidth required />\r\n     </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" justify=\"space-between\" style={{marginTop:'5vh'}}>\r\n                    <Grid item>\r\n                        <FormControlLabel control={\r\n                            <Checkbox\r\n                                color=\"secondary\"\r\n                            />\r\n                        } label=\"Remember me\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\r\n                    <Grid item md={4} fullWidth>\r\n                        {isLoading ?\r\n                        <CircularProgress />\r\n                        :<Button  type=\"submit\" variant=\"contained\" style={{ textTransform: \"none\", backgroundColor:\"#fec14e\",color:\"white\",minWidth:\"100px\",fontWeight:'bolder',fontSize:'medium',borderRadius:'5pt'}}>Login</Button>}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" style={{ marginTop: '2%' }}>\r\n                    <Grid item md={4} fullWidth>\r\n                        {isBad ?<Alert severity=\"error\"><AlertTitle>Error</AlertTitle>{errMessage}</Alert>:<></>}\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\courseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Student\\CourseHome.js",["318","319"],"import {AppBar, Box, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router';\r\nconst CourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const history = useHistory();\r\n    const oes = course.oes;\r\n    return(\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {course.courseName}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            <Grid className='cor' style={{margin:'0'}} container>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:\r\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`quiz/${quizObj.quizID}`)}}/>)}\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >Nothing Here</Alert></Grid>:<></>}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseHome;\r\n\r\n\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Home\\Teacher\\TeacherCourse.js",["320","321"],"import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomBox from '../../Helper/CustomBox'\r\nimport {Alert} from '@material-ui/lab'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst TeacherCourseHome = (props) => {\r\n    const courseID = props.match.params.courseName;\r\n    const courses =  useSelector(state => state.course);\r\n    const course = courses.filter((e)=> e._id === courseID)[0]\r\n    const quizes = course.quizes;\r\n    const poes = course.poes;\r\n    const oes = course.oes;\r\n    const history = useHistory();\r\n    console.log(course);\r\n    return(\r\n        <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {course.courseName}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n            \r\n            <Grid className='cor' style={{margin:'0'}} container>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Quizes\r\n                    </Box>\r\n                </Grid>\r\n                {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\r\n                quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\r\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n                    <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\r\n                </Grid>\r\n                <Box border={1}/>\r\n                <Grid item xs={12} style={{textAlign: 'center',marginTop:'5vh'}}>\r\n                    <Box p={2} boxShadow={5} borderBottom={1}>\r\n                        Practicals\r\n                    </Box>\r\n                </Grid>\r\n                {(poes.length === 0)?<Grid  item xs={12} style={{width:'50%'}}><Alert severity=\"error\">No Active Practicals</Alert></Grid>:<></>}\r\n                <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n                   <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\r\n                 </Grid>\r\n                <Box border={1} />\r\n                \r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeacherCourseHome;\r\n\r\n\r\n// import {AppBar, Box, Button, Grid, Toolbar} from '@material-ui/core'\r\n// import { useSelector } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom'\r\n// // import CustomBox from '../../Helper/CustomBox'\r\n// import {Alert} from '@material-ui/lab'\r\n// import CustomBox from '../../Helper/CustomBox';\r\n// const TeacherCourseHome = (props) => {\r\n//     const courseID = props.match.params.courseName;\r\n//     const courses =  useSelector(state => state.course);\r\n//     const course = courses.filter((e)=> e._id === courseID)[0]\r\n//     const quizes = course.quizes;\r\n//     const poes = course.poes;\r\n//     const oes = course.oes;\r\n//     const history = useHistory();\r\n//     console.log(course);\r\n//     return(\r\n//         <div>\r\n//             <AppBar>\r\n//                 <Toolbar stype={{backgroundColor: \"black\" }}>\r\n//                 {course.courseName}\r\n//                 </Toolbar>\r\n//             </AppBar>\r\n//             <Grid style={{marginTop: 60}} container spacing={2}>\r\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\r\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n//                         Quizes\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 {(quizes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Quizes</Alert></Grid>:\r\n//                 quizes.map((quizObj)=> <CustomBox key={quizObj.quizID} innerText={quizObj.subject} onClick={()=> {history.push(`/teacher/quiz/${quizObj.quizID}`)}}/>)}\r\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n//                     <Button onClick={()=>{ history.push(`/teacher/createQuiz/${courseID}`) }} variant=\"contained\" color=\"primary\">Create New Quiz</Button>\r\n//                 </Grid>\r\n//                 <Box border={1}/>\r\n//                 <Grid item xs={12} style={{textAlign: 'center'}}>\r\n//                     <Box p={2} boxShadow={3} bgcolor=\"background.paper\" borderBottom={1}>\r\n//                         Practicals\r\n//                     </Box>\r\n//                 </Grid>\r\n//                 {(poes.length === 0)?<Grid  item xs={12}><Alert severity=\"error\" >No Active Practicals</Alert></Grid>:<></>}\r\n//                 <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" item xs={12}>\r\n//                     <Button onClick={()=>{ history.push('/teacher/createPOE') }} variant=\"contained\" color=\"primary\">Create New Practical</Button>\r\n//                 </Grid>\r\n//                 <Box border={1} />\r\n                \r\n//             </Grid>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default TeacherCourseHome;\r\n","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\QuizDownload.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\StudentProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Profile\\TeacherProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\Login\\ProfileMenu.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\TeacherQuizLanding.js",["322"],"import { AppBar, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomBox from '../Helper/CustomBox';\r\nimport QuizDownload from './QuizDownload';\r\nconst TeacherQuizLanding = (props) => {\r\n    const quizId = props.match.params.quizID;\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [subject, setSubject] = useState(null);\r\n    useEffect( () => {\r\n        fetch(`/quiz/getAll/${quizId}`)\r\n         .then(data =>  data.json().then(res => {setQuizData(res);\r\n         setSubject(res[0].quizName);\r\n         }))\r\n         .catch(err => console.log(err));\r\n     },[]);\r\n    const quizObj =  useSelector(state => state.currentCourse.quizes);\r\n    console.log(quizObj);\r\n    return(\r\n        <>\r\n            <div className='ch-container'>\r\n            <div style={{padding:'5px'}}>\r\n                <AppBar position='static' className='Appbar'>\r\n                    <Grid container style={{justifyContent:'center',position:'relative'}}>\r\n                        <Grid item style={{fontSize:'30px',fontWeight:'bold',padding:'20px'}}>\r\n                            {quizObj[0].subject}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AppBar>\r\n            </div>\r\n                <Grid style={{marginTop: '10vh'}} container>\r\n                    <Grid item xs={2}>\r\n                        <QuizDownload quizData={quizData} subject={subject} />\r\n                    </Grid>\r\n                    <Grid>\r\n                        <CustomBox innerText=\"Delete Quiz\" />\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherQuizLanding;","G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\reducer\\course\\currentCourseReducer.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\blankProfile.js",[],"G:\\Engineering\\Final Year\\GitFiles\\Source Code\\frontend\\src\\components\\quiz\\MalpracticeGallary.js",["323"],{"ruleId":"324","severity":1,"message":"325","line":3,"column":8,"nodeType":"326","messageId":"327","endLine":3,"endColumn":11},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","replacedBy":"331"},{"ruleId":"324","severity":1,"message":"332","line":4,"column":7,"nodeType":"326","messageId":"327","endLine":4,"endColumn":16},{"ruleId":"324","severity":1,"message":"333","line":18,"column":12,"nodeType":"326","messageId":"327","endLine":18,"endColumn":20},{"ruleId":"324","severity":1,"message":"334","line":18,"column":22,"nodeType":"326","messageId":"327","endLine":18,"endColumn":36},{"ruleId":"328","replacedBy":"335"},{"ruleId":"330","replacedBy":"336"},{"ruleId":"328","replacedBy":"337"},{"ruleId":"330","replacedBy":"338"},{"ruleId":"324","severity":1,"message":"339","line":1,"column":29,"nodeType":"326","messageId":"327","endLine":1,"endColumn":39},{"ruleId":"340","severity":1,"message":"341","line":47,"column":12,"nodeType":"342","endLine":47,"endColumn":14,"suggestions":"343"},{"ruleId":"328","replacedBy":"344"},{"ruleId":"330","replacedBy":"345"},{"ruleId":"324","severity":1,"message":"346","line":1,"column":10,"nodeType":"326","messageId":"327","endLine":1,"endColumn":22},{"ruleId":"324","severity":1,"message":"347","line":87,"column":11,"nodeType":"326","messageId":"327","endLine":87,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":110,"column":15,"nodeType":"350","endLine":110,"endColumn":74},{"ruleId":"340","severity":1,"message":"351","line":24,"column":7,"nodeType":"342","endLine":24,"endColumn":9,"suggestions":"352"},{"ruleId":"324","severity":1,"message":"353","line":53,"column":8,"nodeType":"326","messageId":"327","endLine":53,"endColumn":17},{"ruleId":"324","severity":1,"message":"354","line":106,"column":13,"nodeType":"326","messageId":"327","endLine":106,"endColumn":18},{"ruleId":"328","replacedBy":"355"},{"ruleId":"330","replacedBy":"356"},{"ruleId":"324","severity":1,"message":"357","line":31,"column":8,"nodeType":"326","messageId":"327","endLine":31,"endColumn":17},{"ruleId":"340","severity":1,"message":"358","line":96,"column":5,"nodeType":"342","endLine":96,"endColumn":47,"suggestions":"359"},{"ruleId":"328","replacedBy":"360"},{"ruleId":"330","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":62,"column":30,"nodeType":"364","messageId":"365","endLine":62,"endColumn":59},{"ruleId":"348","severity":1,"message":"349","line":69,"column":33,"nodeType":"350","endLine":69,"endColumn":76},{"ruleId":"366","severity":1,"message":"367","line":62,"column":17,"nodeType":"326","messageId":"368","endLine":62,"endColumn":19},{"ruleId":"324","severity":1,"message":"369","line":1,"column":19,"nodeType":"326","messageId":"327","endLine":1,"endColumn":28},{"ruleId":"328","replacedBy":"370"},{"ruleId":"330","replacedBy":"371"},{"ruleId":"340","severity":1,"message":"372","line":25,"column":7,"nodeType":"342","endLine":25,"endColumn":9,"suggestions":"373"},{"ruleId":"348","severity":1,"message":"349","line":34,"column":33,"nodeType":"350","endLine":34,"endColumn":76},{"ruleId":"340","severity":1,"message":"374","line":27,"column":8,"nodeType":"342","endLine":27,"endColumn":10,"suggestions":"375"},{"ruleId":"340","severity":1,"message":"376","line":80,"column":8,"nodeType":"342","endLine":80,"endColumn":10,"suggestions":"377"},{"ruleId":"324","severity":1,"message":"378","line":1,"column":18,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"379","line":1,"column":27,"nodeType":"326","messageId":"327","endLine":1,"endColumn":31},{"ruleId":"340","severity":1,"message":"380","line":23,"column":7,"nodeType":"342","endLine":23,"endColumn":9,"suggestions":"381"},{"ruleId":"348","severity":1,"message":"349","line":32,"column":33,"nodeType":"350","endLine":32,"endColumn":76},{"ruleId":"324","severity":1,"message":"382","line":12,"column":12,"nodeType":"326","messageId":"327","endLine":12,"endColumn":17},{"ruleId":"324","severity":1,"message":"383","line":12,"column":19,"nodeType":"326","messageId":"327","endLine":12,"endColumn":27},{"ruleId":"324","severity":1,"message":"384","line":1,"column":57,"nodeType":"326","messageId":"327","endLine":1,"endColumn":62},{"ruleId":"340","severity":1,"message":"385","line":34,"column":7,"nodeType":"342","endLine":34,"endColumn":9,"suggestions":"386"},{"ruleId":"348","severity":1,"message":"349","line":72,"column":13,"nodeType":"350","endLine":72,"endColumn":68},{"ruleId":"324","severity":1,"message":"378","line":1,"column":28,"nodeType":"326","messageId":"327","endLine":1,"endColumn":35},{"ruleId":"324","severity":1,"message":"387","line":13,"column":11,"nodeType":"326","messageId":"327","endLine":13,"endColumn":14},{"ruleId":"324","severity":1,"message":"378","line":1,"column":36,"nodeType":"326","messageId":"327","endLine":1,"endColumn":43},{"ruleId":"324","severity":1,"message":"387","line":13,"column":11,"nodeType":"326","messageId":"327","endLine":13,"endColumn":14},{"ruleId":"340","severity":1,"message":"388","line":16,"column":8,"nodeType":"342","endLine":16,"endColumn":10,"suggestions":"389"},{"ruleId":"340","severity":1,"message":"341","line":32,"column":7,"nodeType":"342","endLine":32,"endColumn":9,"suggestions":"390"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["391"],"no-negated-in-lhs",["392"],"'useStyles' is assigned a value but never used.","'selected' is assigned a value but never used.","'updateSelected' is assigned a value but never used.",["391"],["392"],["391"],["392"],"'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'quizID' and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["393"],["391"],["392"],"'StaticRouter' is defined but never used.","'userPRN' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["394"],"'questions' is assigned a value but never used.","'optId' is assigned a value but never used.",["391"],["392"],"'fromStore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'questionBank', 'quizID', 'startDate', and 'userID'. Either include them or remove the dependency array.",["395"],["391"],["392"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","no-redeclare","'op' is already defined.","redeclared","'useEffect' is defined but never used.",["391"],["392"],"React Hook useEffect has missing dependencies: 'Class', 'branch', 'dispatch', and 'sem'. Either include them or remove the dependency array.",["396"],"React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["397"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["398"],"'Toolbar' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["399"],"'Class' is assigned a value but never used.","'setClass' is assigned a value but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["400"],"'oes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'quizId'. Either include it or remove the dependency array.",["401"],["402"],"no-global-assign","no-unsafe-negation",{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"403","fix":"421"},"Update the dependencies array to be: [quizID, userID]",{"range":"422","text":"423"},"Update the dependencies array to be: [history]",{"range":"424","text":"425"},"Update the dependencies array to be: [attempted, flagged, userChoices, dispatch, userID, quizID, startDate, questionBank]",{"range":"426","text":"427"},"Update the dependencies array to be: [Class, branch, dispatch, sem]",{"range":"428","text":"429"},"Update the dependencies array to be: [props.peer]",{"range":"430","text":"431"},"Update the dependencies array to be: [roomID]",{"range":"432","text":"433"},"Update the dependencies array to be: [dispatch, user]",{"range":"434","text":"435"},"Update the dependencies array to be: [dispatch]",{"range":"436","text":"437"},"Update the dependencies array to be: [quizId]",{"range":"438","text":"439"},{"range":"440","text":"423"},[1898,1900],"[quizID, userID]",[1015,1017],"[history]",[2864,2906],"[attempted, flagged, userChoices, dispatch, userID, quizID, startDate, questionBank]",[1064,1066],"[Class, branch, dispatch, sem]",[593,595],"[props.peer]",[2365,2367],"[roomID]",[1010,1012],"[dispatch, user]",[1159,1161],"[dispatch]",[664,666],"[quizId]",[1158,1160]]